(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{418:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("前端进阶（十一）-WebAssembly及其他")]),t._v(" "),a("h2",{attrs:{id:"webassembly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webassembly"}},[t._v("#")]),t._v(" WebAssembly")]),t._v(" "),a("h3",{attrs:{id:"编译c-c-为webassembly"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译c-c-为webassembly"}},[t._v("#")]),t._v(" 编译C/C++为WebAssembly")]),t._v(" "),a("p",[t._v("当你在用C/C++之类的语言编写模块时，你可以使用"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Emscripten",target:"_blank",rel:"noopener noreferrer"}},[t._v("Emscripten"),a("OutboundLink")],1),t._v("来将它编译到WebAssembly。让我们来看看它是如何工作的。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/WebAssembly/C_to_wasm#emscripten_%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85",target:"_blank",rel:"noopener noreferrer"}},[t._v("Emscripten 环境安装"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("接下来，您需要通过源码自己编译一个Emscripten。运行下列命令来自动化地使用Emscripten SDK。(在你想保存Emscripten的文件夹下运行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/juj/emsdk.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" emsdk\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 Linux 或者 Mac OS X 上")]),t._v("\n./emsdk "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Release sdk-incoming-64bit binaryen-master-64bit\n./emsdk activate "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Release sdk-incoming-64bit binaryen-master-64bit\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果在你的macos上获得以下错误")]),t._v("\nError: No tool or SDK found by name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sdk-incoming-64bit'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 请执行")]),t._v("\n./emsdk "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" latest\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 按照提示配置环境变量即可")]),t._v("\n./emsdk activate latest\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在 Windows 上")]),t._v("\nemsdk "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Release sdk-incoming-64bit binaryen-master-64bit\nemsdk activate "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--global")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--build")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Release sdk-incoming-64bit binaryen-master-64bit\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意：Windows 版本的 Visual Studio 2017 已经被支持，但需要在 emsdk install 需要追加 --vs2017 参数。")]),t._v("\n")])])]),a("p",[t._v("安装过程可以会花上一点时间，是时候去休息一下。安装程序会设置所有Emscripten运行所需要的环境变量。")]),t._v(" "),a("p",[t._v("每当您想要使用Emscripten时，尝试从远程更新最新的emscripten代码是个很好的习惯（运行 git pull）。如果有更新，重新执行 install 和 activate 命令。这样就可以确保您使用的Emscripten一直保持最新。")]),t._v(" "),a("p",[t._v("现在让我们进入emsdk文件夹，输入以下命令来让你进入接下来的流程，编译一个样例C程序到asm.js或者wasm。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# on Linux or Mac OS X")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" ./emsdk_env.sh\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# on Windows")]),t._v("\nemsdk_env.bat\n")])])]),a("h3",{attrs:{id:"示例-编译c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例-编译c"}},[t._v("#")]),t._v(" 示例：编译C")]),t._v(" "),a("p",[t._v("创建一个c文件(hello.c)")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("现在，转到一个已经配置过Emscripten编译环境的终端窗口中，进入刚刚保存hello.c文件的文件夹中，然后运行下列命令：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("emcc hello.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WASM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" hello.html\n")])])]),a("p",[t._v("下面列出了我们命令中选项的细节：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-s WASM=1")]),t._v(" — 指定我们想要的wasm输出形式。如果我们不指定这个选项，Emscripten默认将只会生成"),a("a",{attrs:{href:"http://asmjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("asm.js"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("-o hello.html")]),t._v(" — 指定这个选项将会生成HTML页面来运行我们的代码，并且会生成wasm模块，以及编译和实例化wasm模块所需要的“胶水”js代码，这样我们就可以直接在web环境中使用了。")])]),t._v(" "),a("p",[t._v("这个时候在您的源码文件夹应该有下列文件:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("hello.wasm")]),t._v("   二进制的wasm模块代码")]),t._v(" "),a("li",[a("code",[t._v("hello.js")]),t._v("     一个包含了用来在原生C函数和JavaScript/wasm之间转换的胶水代码的JavaScript文件")]),t._v(" "),a("li",[a("code",[t._v("hello.html")]),t._v("   一个用来加载，编译，实例化你的wasm代码并且将它输出在浏览器显示上的一个HTML文件")])]),t._v(" "),a("p",[t._v("现在使用一个支持 WebAssembly 的浏览器，加载生成的 "),a("code",[t._v("hello.html")]),t._v(" 。")]),t._v(" "),a("p",[t._v("如果一切顺利，你应该可以在页面上的 "),a("code",[t._v("Emscripten 控制台")]),t._v("和 "),a("code",[t._v("浏览器控制台")]),t._v(' 中看到 "Hello World" 的输出。')]),t._v(" "),a("p",[t._v("恭喜！你已经成功将 C 代码编译成 JavaScript 并且在浏览器中执行了！")]),t._v(" "),a("p",[t._v("自定义html模板")]),t._v(" "),a("p",[t._v("首先，在一个新文件夹中保存以下 C 代码到 hello2.c 中：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在 emsdk 中搜索一个叫做 "),a("code",[t._v("shell_minimal.html")]),t._v(" 的文件，然后复制它到刚刚创建的目录下的 "),a("code",[t._v("html_template")]),t._v(" 文件夹。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" html_template\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ~/emsdk/emscripten/1.38.15/src/shell_minimal.html html_templates\n")])])]),a("p",[t._v("现在使用你的Emscripten编译器环境的终端窗口进入你的新目录， 然后运行下面的命令：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("emcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" hello2.html hello2.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-O3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WASM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" --shell-file html_template/shell_minimal.html\n")])])]),a("ol",[a("li",[t._v("这次使用的选项略有不同：\n"),a("ul",[a("li",[t._v("我们使用了 "),a("code",[t._v("-o hello2.html")]),t._v(" ，这意味编译器将仍然输出 js 胶水代码 和 html 文件。")]),t._v(" "),a("li",[t._v("我们还使用了 "),a("code",[t._v("--shell-file html_template/shell_minimal.html")]),t._v(" ，这指定了您要运行的例子使用 HTML 页面模板。")])])]),t._v(" "),a("li",[t._v("下面让我们来运行这个例子。上面的命令已经生成了 hello2.html，内容和我们使用的模板非常相像，只不过多加了一些 js 胶水和加载wasm文件的代码。 在浏览器中打开它，你会看到与上一个例子相同的输出。")])]),t._v(" "),a("p",[t._v("调用一个C语言中的函数")]),t._v(" "),a("p",[t._v("如果需要调用一个在 C 语言自定义的函数，你可以使用 Emscripten 中的 "),a("code",[t._v("ccall()")]),t._v(" 函数，以及 "),a("code",[t._v("EMSCRIPTEN_KEEPALIVE")]),t._v(" 声明 （将你的函数添加到导出函数列表中）")]),t._v(" "),a("p",[t._v("还是首先创建一个C语言文件")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<emscripten/emscripten.h>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__cplusplus")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" EMSCRIPTEN_KEEPALIVE "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"我的函数已被调用\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("ifdef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[t._v("__cplusplus")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),a("p",[t._v("默认情况下，Emscripten 生成的代码只会调用 "),a("code",[t._v("main()")]),t._v(" 函数，其它的函数将被视为无用代码。在一个函数名之前添加 "),a("code",[t._v("EMSCRIPTEN_KEEPALIVE")]),t._v(" 能够防止这样的事情发生。你需要导入 "),a("code",[t._v("emscripten.h")]),t._v(" 库来使用 "),a("code",[t._v("EMSCRIPTEN_KEEPALIVE")]),t._v("。")]),t._v(" "),a("p",[t._v("为了方便起见，现在将 "),a("code",[t._v("html_template/shell_minimal.html")]),t._v(" 也添加到这一目录（但在实际开发环境中你肯定需要将其放到某一特定位置）")]),t._v(" "),a("p",[t._v("运行以下命令编译：(注意由于使用ccall函数，需要添加指定参数)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("emcc "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" hello3.html hello3.c "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-O3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WASM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"EXTRA_EXPORTED_RUNTIME_METHODS=['ccall']\"")]),t._v(" --shell-file html_template/shell_minimal.html\n")])])]),a("p",[t._v("如果你在浏览器中在此加载实例，你将看到和之前相同的结果。")]),t._v(" "),a("p",[t._v("现在我们需要运行新的 "),a("code",[t._v("myFunction()")]),t._v(" JavaScript 函数。首先，按照以下实例添加一个button, 就在 "),a("code",[t._v("<script type='text/javascript'>")]),t._v(" 开头标签之前。")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mybutton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("运行我的函数"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.mybutton'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'检查控制台'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ccall")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myFunction'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// name of C function")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return type")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// argument types")]),t._v("\n                             "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// arguments")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("以上就是如何使用 "),a("code",[t._v("ccall()")]),t._v(" 调用导出的函数的方式。")])])}),[],!1,null,null,null);s.default=n.exports}}]);