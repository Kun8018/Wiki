(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{347:function(t,n,a){"use strict";a.r(n);var e=a(14),s=Object(e.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("​      前端框架，快速开发页面，函数式编程，与后端api快速搭建")]),t._v(" "),a("h2",{attrs:{id:"组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[t._v("#")]),t._v(" 组件")]),t._v(" "),a("p",[t._v("react会将以小写字母开头的组件视为原生DOM标签，而组件名称必须以大写字母开口")]),t._v(" "),a("p",[t._v("组件的定义方式")]),t._v(" "),a("p",[t._v("以函数方式定义组件")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Welcome")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("hello,")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("使用ES6的语法class定义组件")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Welcome")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("hello,")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("引用组件")]),t._v(" "),a("p",[t._v("组件可以在输出中引用其他组件。在React中通常会以组件的形式表示。")]),t._v(" "),a("p",[t._v("组件被调用时可以携带参数，称为props，")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Welcome")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("hello,")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n            ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Welcome")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Sara"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n            ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Welcome")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Cahs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n            ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Welcome")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("hara"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"组件api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件api"}},[t._v("#")]),t._v(" 组件APi")]),t._v(" "),a("p",[t._v("在React中，组件以函数声明或者以Class方式声明。以Class方式声明时通常需要从React.Compoenent中继承。")]),t._v(" "),a("p",[t._v("React.Compoenent提供了生命周期api，因为生命周期的使用方式比较重要，这将在后文中介绍，这里首先介绍除了生命周期之外的其他API。")]),t._v(" "),a("p",[t._v("forceupdate：component.forceUpdate(callback)")]),t._v(" "),a("p",[t._v("默认情况下，当组件的 state 或 props 发生变化时，组件将重新渲染。如果 "),a("code",[t._v("render()")]),t._v(" 方法依赖于其他数据，则可以调用 "),a("code",[t._v("forceUpdate()")]),t._v(" 强制让组件重新渲染。")]),t._v(" "),a("p",[t._v("调用 "),a("code",[t._v("forceUpdate()")]),t._v(" 将致使组件调用 "),a("code",[t._v("render()")]),t._v(" 方法，此操作会跳过该组件的 "),a("code",[t._v("shouldComponentUpdate()")]),t._v("。但其子组件会触发正常的生命周期方法，包括 "),a("code",[t._v("shouldComponentUpdate()")]),t._v(" 方法。如果标记发生变化，React 仍将只更新 DOM。")]),t._v(" "),a("p",[t._v("通常你应该避免使用 "),a("code",[t._v("forceUpdate()")]),t._v("，尽量在 "),a("code",[t._v("render()")]),t._v(" 中使用 "),a("code",[t._v("this.props")]),t._v(" 和 "),a("code",[t._v("this.state")]),t._v("。")]),t._v(" "),a("p",[t._v("错误处理api")]),t._v(" "),a("p",[t._v("static getDerivedStateFromError(error)")]),t._v(" "),a("p",[t._v("此生命周期会在后代组件抛出错误后被调用。 它将抛出的错误作为参数，并返回一个值以更新 state")]),t._v(" "),a("p",[t._v("componentDidCatch(error, info)")]),t._v(" "),a("p",[t._v("此生命周期在后代组件抛出错误后被调用。 它接收两个参数：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("error")]),t._v(" —— 抛出的错误。")]),t._v(" "),a("li",[a("code",[t._v("info")]),t._v(" —— 带有 "),a("code",[t._v("componentStack")]),t._v(" key 的对象，")])]),t._v(" "),a("p",[a("code",[t._v("componentDidCatch()")]),t._v(" 会在“提交”阶段被调用，因此允许执行副作用。 它应该用于记录错误之类的情况：")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // 更新 state 使下一次渲染可以显降级 UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // "组件堆栈" 例子:\n    //   in ComponentThatThrows (created by App)\n    //   in ErrorBoundary (created by App)\n    //   in div (created by App)\n    //   in App\n    logComponentStackToMyService(info.componentStack);\n  }\n  \n  render() {\n    if (this.state.hasError) {\n      // 你可以渲染任何自定义的降级  UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n')])])]),a("p",[t._v("如果发生错误，你可以通过调用 "),a("code",[t._v("setState")]),t._v(" 使用 "),a("code",[t._v("componentDidCatch()")]),t._v(" 渲染降级 UI，但在未来的版本中将不推荐这样做。 可以使用静态 "),a("code",[t._v("getDerivedStateFromError()")]),t._v(" 来处理降级渲染。")]),t._v(" "),a("h3",{attrs:{id:"受控组件与非受控组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#受控组件与非受控组件"}},[t._v("#")]),t._v(" 受控组件与非受控组件")]),t._v(" "),a("h4",{attrs:{id:"派生state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#派生state"}},[t._v("#")]),t._v(" 派生state")]),t._v(" "),a("p",[t._v("大部分使用派生 state 导致的问题，不外乎两个原因：1，直接复制 props 到 state 上；2，如果 props 和 state 不一致就更新 state")]),t._v(" "),a("p",[t._v("受控和非受控")]),t._v(" "),a("p",[t._v("名词"),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/forms.html#controlled-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("“受控”"),a("OutboundLink")],1),t._v("和"),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/uncontrolled-components.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("“非受控”"),a("OutboundLink")],1),t._v("通常用来指代表单的 inputs，但是也可以用来描述数据频繁更新的组件。用 props 传入数据的话，组件可以被认为是"),a("strong",[t._v("受控")]),t._v("（因为组件被父级传入的 props 控制）。数据只保存在组件内部的 state 的话，是"),a("strong",[t._v("非受控")]),t._v("组件（因为外部没办法直接控制 state）。")]),t._v(" "),a("p",[t._v("当一个派生 state 值也被 "),a("code",[t._v("setState")]),t._v(" 方法更新时，这个值就不是一个单一来源的值了。")]),t._v(" "),a("p",[t._v("如果组件的状态只能由用户控制，那么就是非受控组件，如果组件的状态可以由用户和通过代码两种方式控制，那么就是受控组件")]),t._v(" "),a("p",[t._v("在React中没有类似于Vue中v-model的双向绑定功能。")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class TestComponent extends React.Component {\n  constructor (props){\n    super(props);\n    this.state = {username: 'lindaidai' }\n  }\n  render () {\n\t\treturn <input name=\"username\" value={this.state.username} />\n  }\n}\n")])])]),a("p",[t._v("受控组件的完整定义：")]),t._v(" "),a("p",[t._v("在Html的表单元素中，它们通常自己维护一套state，并随着用户的数据自己进行UI上的更新，这种行为不被我们程序所控制。而如果将React的state属性和表单元素的值建立依赖关系，再通过onChange事件与setState()结合更新state属性，就能达到控制用户输入过程中表单发生的操作，被react以这种方式控制取值的表单输入元素就是受控组件")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class TestComponent extends React.Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      username: 'lindaidai' \n    }\n  }\n  onChange (e){\n    this.setState({\n      username: e.target.value\n    })\n  }\n  render () {\n\t\treturn <input name=\"username\" value={this.state.username} \n             onChange={(e)=> this.onChange(e)} />\n  }\n}\n")])])]),a("h4",{attrs:{id:"受控组件注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#受控组件注意事项"}},[t._v("#")]),t._v(" 受控组件注意事项")]),t._v(" "),a("p",[t._v("受控组件中有时会有派生state，即state的状态是根据props的值来进行变化")]),t._v(" "),a("p",[t._v("不建议将props直接复制到state中")]),t._v(" "),a("p",[t._v("最常见的误解就是 "),a("code",[t._v("getDerivedStateFromProps")]),t._v(" 和 "),a("code",[t._v("componentWillReceiveProps")]),t._v(" 只会在 props “改变”时才会调用。实际上只要父级重新渲染时，这两个生命周期函数就会重新调用，不管 props 有没有“变化”。所以，在这两个方法内直接复制（"),a("em",[t._v("unconditionally")]),t._v("）props 到 state 是不安全的。"),a("strong",[t._v("这样做会导致 state 后没有正确渲染")]),t._v("。")]),t._v(" "),a("p",[t._v("错误使用1：在componentWillReceiveProps中直接使用prop初始化state")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class EmailInput extends Component {\n  state = { email: this.props.email };\n\n  render() {\n    return <input onChange={this.handleChange} value={this.state.email} />;\n  }\n\n  handleChange = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    // 这会覆盖所有组件内的 state 更新！\n    // 不要这样做。\n    this.setState({ email: nextProps.email });\n  }\n}\n")])])]),a("p",[t._v("乍看之下还可以。 state 的初始值是 props 传来的，当在 "),a("code",[t._v("<input>")]),t._v(" 里输入时，修改 state。但是如果父组件重新渲染，我们输入的所有东西都会丢失！("),a("a",{attrs:{href:"https://codesandbox.io/s/m3w9zn1z8x",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看这个示例"),a("OutboundLink")],1),t._v(")，即使在重置 state 前比较 "),a("code",[t._v("nextProps.email !== this.state.email")]),t._v(" 仍然会导致更新。")]),t._v(" "),a("p",[t._v("这个小例子中，使用 "),a("code",[t._v("shouldComponentUpdate")]),t._v(" ，比较 props 的 email 是不是修改再决定要不要重新渲染。但是在实践中，一个组件会接收多个 prop，任何一个 prop 的改变都会导致重新渲染和不正确的状态重置。加上行内函数和对象 prop，创建一个完全可靠的 "),a("code",[t._v("shouldComponentUpdate")]),t._v(" 会变得越来越难。"),a("a",{attrs:{href:"https://codesandbox.io/s/jl0w6r9w59",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个示例展示了这个情况"),a("OutboundLink")],1),t._v("。而且 "),a("code",[t._v("shouldComponentUpdate")]),t._v(" 的最佳实践是用于性能提升，而不是改正不合适的派生 state。")]),t._v(" "),a("p",[t._v("错误使用1：在componentWillReceiveProps中比较前后两次props再初始化state")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class EmailInput extends Component {\n  state = {\n    email: this.props.email\n  };\n\n  componentWillReceiveProps(nextProps) {\n    // 只要 props.email 改变，就改变 state\n    if (nextProps.email !== this.props.email) {\n      this.setState({\n        email: nextProps.email\n      });\n    }\n  }\n  \n  // ...\n}\n")])])]),a("p",[t._v("现在组件只会在 prop 改变时才会改变。")]),t._v(" "),a("p",[t._v("但是仍然有个问题。想象一下，如果这是一个密码输入组件，拥有同样 email 的两个账户进行切换时，这个输入框不会重置（用来让用户重新登录）。因为父组件传来的 prop 值没有变化！这会让用户非常惊讶，因为这看起来像是帮助一个用户分享了另外一个用户的密码，")]),t._v(" "),a("p",[t._v("建议1:把组件包装成完全可控的组件")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function EmailInput(props) {\n  return <input onChange={props.onChange} value={props.email} />;\n}\n")])])]),a("p",[t._v("建议2：为了在不同的页面切换不同的值，我们可以使用 "),a("code",[t._v("key")]),t._v(" 这个特殊的 React 属性。当 "),a("code",[t._v("key")]),t._v(" 变化时， React 会"),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/reconciliation.html#keys",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建一个新的而不是更新一个既有的组件"),a("OutboundLink")],1),t._v("。 Keys 一般用来渲染动态列表，但是这里也可以使用。")]),t._v(" "),a("p",[t._v("每次 ID 更改，都会重新创建 "),a("code",[t._v("EmailInput")]),t._v(" ，并将其状态重置为最新的 "),a("code",[t._v("defaultEmail")]),t._v(" 值。("),a("a",{attrs:{href:"https://codesandbox.io/s/6v1znlxyxn",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看这个模式的演示"),a("OutboundLink")],1),t._v(") 使用此方法，不用为每次输入都添加 "),a("code",[t._v("key")]),t._v("，在整个表单上添加 "),a("code",[t._v("key")]),t._v(" 更有位合理。每次 key 变化，表单里的所有组件都会用新的初始值重新创建。")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class EmailInput extends Component {\n  state = { email: this.props.defaultEmail };\n\n  handleChange = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  render() {\n    return <input onChange={this.handleChange} value={this.state.email} />;\n  }\n}\n\n<EmailInput\n  defaultEmail={this.props.user.email}\n  key={this.props.user.id}\n/>\n")])])]),a("p",[t._v("https://zh-hans.reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html")]),t._v(" "),a("h4",{attrs:{id:"封装组件为受控组件和非受控组件两种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#封装组件为受控组件和非受控组件两种"}},[t._v("#")]),t._v(" 封装组件为受控组件和非受控组件两种")]),t._v(" "),a("h3",{attrs:{id:"组件间通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件间通信"}},[t._v("#")]),t._v(" 组件间通信")]),t._v(" "),a("p",[t._v("父组件向子组件通讯: 父组件可以向子组件通过传 props 的方式，向子组件进行通讯")]),t._v(" "),a("p",[t._v("子组件向父组件通讯: props+回调的方式,父组件向子组件传递props进行通讯，此props为作用域为父组件自身的函数，子组件调用该函数，将子组件想要传递的信息，作为参数，传递到父组件的作用域中")]),t._v(" "),a("p",[t._v("兄弟组件通信: 找到这两个兄弟节点共同的父节点,结合上面两种方式由父节点转发信息进行通信")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Child1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("兄弟1接收到的文本：")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fatherText"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"兄弟2文本"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//调用了父组件传入的 changeFatherText 方法")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("changeText")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("changeFatherText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("changeText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("点击更新兄弟1文本为兄弟2文本")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化父组件的 state")]),t._v("\n  state "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"父组件的文本"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 传给 Child2 组件按钮的监听函数，用于更新父组件 text 值（这个 text 值同时也是 Child1 的 props）")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("changeText")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("text")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" newText "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 渲染父组件")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("father"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 引入 Child1 组件，并通过 props 中下发具体的状态值 实现父-子通信 */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child1")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("fatherText")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n\n        ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 引入 Child2 组件，并通过 props 中下发可传参的函数 实现子-父通信 */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n        ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child2")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("changeFatherText")]),a("span",{pre:!0,attrs:{class:"token script language-javascript"}},[a("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("changeText"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n      ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("跨层级通信: "),a("code",[t._v("Context")]),t._v("设计目的是为了共享那些对于一个组件树而言是“全局”的数据，例如当前认证的用户、主题或首选语言,\b对于跨越多层的全局数据通过"),a("code",[t._v("Context")]),t._v("通信再适合不过")]),t._v(" "),a("p",[t._v("全局状态管理工具: 借助Redux或者Mobx等全局状态管理工具进行通信,这种工具会维护一个全局状态中心Store,并根据不同的事件产生新的状态")]),t._v(" "),a("h3",{attrs:{id:"context-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#context-api"}},[t._v("#")]),t._v(" context api")]),t._v(" "),a("p",[t._v("组件间层层嵌套时，传props的过程中会产生大量的...props或者propName={this.props.propValue}，导致代码异常丑陋，比如exzzzzz")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<App>\n   <Switcher toggleState = {this.state.toggle}>\n       <Pannel toggleState = {props.toggleState}>\n           <div onClick={handleClick}>\n             {props.toggleState?'1':'0'}\n         \t </div>\n     \t\t</Pannel>\n  </Switcher>\n</App>\n")])])]),a("p",[t._v("引入context api代码")]),t._v(" "),a("p",[t._v("简易版,通过provide的value传值，通过consumer的props接收值")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React,{createContext} from 'react'\n\nconst {Provider,Consumer} = createContext('color');\n\nclass DeliverComponent extends React.component{\n  state = {\n    color:'orange',\n    handleClick:() =>{\n      this.setState({ color:'red'})\n    }\n  }\n  render(){\n    return (\n      <Provider value= {this.state}>\n         <MidComponent/>\n      </Provider>\n    )\n  }\n}\n\nconst MidComponent = () => <Receiver />\n\nconst Receiver = () =>(\n    <Consumer>\n      {({color,handleClick}) =>\n  \t\t<div style ={{color}} onClick={()=>{handleClick()}}>\n       hello,world\n      </div>}\n    </Consumer>\n)\n\nconst App =()=> <DeliverComponent/>\n\nexport default App;\n")])])]),a("p",[t._v("复杂版")]),t._v(" "),a("p",[t._v("引入context api，创建provider和consumer")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//togglecontext.js\nimport React,{createContext} from 'react'\n//创建上下文\nconst ToggleContext = createContext({\n  toggle:true,\n  handleToggle:()=>{}\n})\n\n//创建provider\nexport class ToggleProvider extends React.component{\n  state = {\n    toggle:true,\n    handleToggle:this.handleToggle\n  }\n\n  render() {\n    return (\n      <ToggleContext.Provider value={this.state}>\n        {this.props.children}\n      </ToggleContext.Provider>\n    )\n  }\n}\n//创建consumer\nexport const ToggleConsumer = ToggleContext.Consumer\n")])])]),a("p",[t._v("通过provider包裹组件传递value值可以使组件共享provider中的state，通过consumer获取props进行渲染")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react';\nimport {ToggleProvider,ToggleConsumer} from './ToggleContext'\n\nfunction App(){\n  return (\n    <ToggleProvider>\n       <Switcher></Switcher>\n    </ToggleProvider>\n  )\n}\n\nconst Switcher = () =>{\n  return <Pannel/>\n}\n\nconst Pannel = () =>{\n  return (\n    <ToggleConsumer>\n      {({toggle.handleToggle})=>\n         <div onClick={()=>handleToggle()}>\n         {toggle?'1':'0'}\n    \t\t</div>\n      }\n    </ToggleConsumer>\n  )\n}\n\nexport default App\n")])])]),a("h3",{attrs:{id:"ref、onref与forwardref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref、onref与forwardref"}},[t._v("#")]),t._v(" ref、OnRef与forwardRef")]),t._v(" "),a("p",[t._v("在典型的 React 数据流中，props 是父组件与子组件交互的唯一方式。要修改一个子组件，你需要使用新的 props 来重新渲染它。但是，在某些情况下，你需要在典型数据流之外强制修改子组件/元素")]),t._v(" "),a("p",[t._v("适合使用 refs 的情况：")]),t._v(" "),a("ul",[a("li",[t._v("管理焦点，文本选择或媒体播放。")]),t._v(" "),a("li",[t._v("触发强制动画。")]),t._v(" "),a("li",[t._v("集成第三方 DOM 库。")])]),t._v(" "),a("p",[t._v("ref 的值根据节点的类型而有所不同：")]),t._v(" "),a("ul",[a("li",[t._v("当 ref 属性用于 HTML 元素时，构造函数中使用 React.createRef() 创建的 ref 接收底层 DOM 元素作为其 current 属性。")]),t._v(" "),a("li",[t._v("当 ref 属性用于自定义 class 组件时，ref 对象接收组件的挂载实例作为其 current 属性。")]),t._v(" "),a("li",[t._v("默认情况下，你不能在函数组件上使用 ref 属性（可以在函数组件内部使用），因为它们没有实例：\n"),a("ul",[a("li",[t._v("如果要在函数组件中使用 ref，你可以使用 forwardRef（可与 useImperativeHandle 结合使用）")]),t._v(" "),a("li",[t._v("或者可以将该组件转化为 class 组件。")])])])]),t._v(" "),a("p",[t._v("父组件通过ref可以拿到子组件的方法和属性")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import React, { Component, Fragment } from "react";\nimport UncontrolledEmailInput from "./UncontrolledEmailInput";\n\nexport default class AccountsList extends Component {\n  inputRef = React.createRef();\n\n  state = {\n    selectedIndex: 0\n  };\n\n  handleChange = index => {\n    this.setState({ selectedIndex: index }, () => {\n      const selectedAccount = this.props.accounts[index];\n      this.inputRef.current.resetEmailForNewUser(selectedAccount.email);\n    });\n  };\nrender() {\n    const { accounts } = this.props;\n    const { selectedIndex } = this.state;\n    const selectedAccount = accounts[selectedIndex];\n    return (\n      <Fragment>\n        <h1>\n          This demo illustrates resetting an uncontrolled component with an\n          instance method\n        </h1>\n        <blockquote>First, make an edit to the account "One" email.</blockquote>\n        <UncontrolledEmailInput\n          defaultEmail={selectedAccount.email}\n          ref={this.inputRef}\n        />\n        <blockquote>Next, select account "Two" below.</blockquote>\n        <p>\n          Accounts:\n          {this.props.accounts.map((account, index) => (\n            <label key={account.id}>\n              <input\n                type="radio"\n                name="account"\n                checked={selectedIndex === index}\n                onChange={() => this.handleChange(index)}\n              />{" "}\n              {account.name}\n            </label>\n          ))}\n        </p>\n        <p>\n          Even though both accounts have the same "committed" email, toggling\n          between the two properly resets the "draft" email state. Read the\n          inline comments in <code>UncontrolledEmailInput.js</code> to learn\n          why.\n        </p>\n      </Fragment>\n    );\n  }\n}\n/// 子组件\nimport React, { Component } from "react";\n\n// This is an example of an "uncontrolled" component.\n// We call it this because the component manages its own "draft" state.\nexport default class UncontrolledEmailInput extends Component {\n  // Default the "draft" email to the value passed in via props.\n  state = {\n    email: this.props.defaultEmail\n  };\n\n  // Imperative method to reset "draft" email state.\n  // Call this method using a component ref.\n  resetEmailForNewUser(defaultEmail) {\n    this.setState({ email: defaultEmail });\n  }\n\n  handleChange = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  render() {\n    return (\n      <label>\n        Email: <input onChange={this.handleChange} value={this.state.email} />\n      </label>\n    );\n  }\n}\n')])])]),a("p",[t._v("Onref通过props将子组件的组件实例当作参数，通过回调传到父组件，然后在父组件就可以拿到子组件的实例了，拿到实例就可以调用它的方法了")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import Son from './son'\n\nclass Father extends React.Component {\n  sonRef = (ref) => {\n    this.child = ref\n  }\n  \n  render() {\n    return (\n      <div>\n         <Son onRef={this.sonRef}/>\n      </div>\n    )\n  }\n}\n")])])]),a("p",[t._v("ref可以直接获得dom信息,非受控组件可以采用这种方式获取值而不进行其他操作")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import React,{ Component } from \'react\'\n\nexport class UnControl extends Component {\n  constructor (props) {\n\t\tsuper(props);\n    this.inputRef = React.createRef();\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\'input内的值为\',this.inputRef.current.value);\n  }\n  render () {\n    return (\n    \t<form onSubmit={e => this.handleSubmit(e)}>\n        <input defaultValue="lindaidai" ref={this.inputRef}/>\n        <input type="submit" value="提交"/>\n      </form>\n    )\n  }\n}\n')])])]),a("p",[t._v("forwardRef多用于Ref 转发。Ref 转发是一项将 "),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/refs-and-the-dom.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ref"),a("OutboundLink")],1),t._v(" 自动地通过组件传递到其一子组件的技巧。对于大多数应用中的组件来说，这通常不是必需的。通常不建议这样做，因为它会打破组件的封装，但它偶尔可用于触发焦点或测量子 DOM 节点的大小或位置。但其对某些组件，尤其是可重用的组件库是很有用的。")]),t._v(" "),a("p",[t._v("没有使用"),a("code",[t._v("forwardRef")]),t._v("时，父组件传入子组件"),a("code",[t._v("ref")]),t._v("属性，此时"),a("code",[t._v("ref")]),t._v("指向的是"),a("strong",[t._v("子组件本身")]),t._v("。但是如果想让"),a("code",[t._v("child")]),t._v("指向的是"),a("code",[t._v("Child")]),t._v("的"),a("code",[t._v("button")]),t._v("呢？此时在子组件中新建一个buttonRef，并作为拓展的"),a("code",[t._v("props")]),t._v("由父组件控制，新增一个字段如"),a("code",[t._v("buttonRef")]),t._v("。所以 React 提供了 "),a("code",[t._v("forwardRef")]),t._v("，用于将 ref 转发。这样子组件在"),a("strong",[t._v("提供内部的 dom 时，不用扩充额外的 ref 字段")])]),t._v(" "),a("p",[t._v("Ref 转发是一个可选特性，其允许某些组件接收 "),a("code",[t._v("ref")]),t._v("，并将其向下传递（换句话说，“转发”它）给子组件。")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('const FancyButton = React.forwardRef((props, ref) => (\n  <button ref={ref} className="FancyButton">\n    {props.children}\n  </button>\n));\n\n// 你可以直接获取 DOM button 的 ref：\nconst ref = React.createRef();\n<FancyButton ref={ref}>Click me!</FancyButton>;\n')])])]),a("p",[t._v("转发ref在父组件作为别的组件的子组件时会比较方便, 也就是HOC")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import Button from './Button';\nconst LoggedButton = logProps(Button);\n\nconst ref = React.createRef();\n\n// LoggedButton 组件是高阶组件（HOC）LogProps。\n// 尽管渲染结果将是一样的，\n// 但我们的 ref 将指向 LogProps 而不是内部的 Button 组件！\n// 这意味着我们不能调用例如 ref.current.xxx() 这样的方法\n<LoggedButton label=\"Click Me\" handleClick={handleClick} ref={ref} />;\n\nfunction logProps(WrappedComponent) {\n  class LogProps extends React.Component {\n    componentDidUpdate(prevProps) {\n      console.log('old props:', prevProps);\n      console.log('new props:', this.props);\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return LogProps;\n}\n")])])]),a("p",[t._v("使用forwardRef和useImperativeHandle限制父组件调用子组件的Api")]),t._v(" "),a("p",[t._v("Button组件提供了"),a("code",[t._v("onChange")]),t._v("回调，"),a("strong",[t._v("外部组件可以传入"),a("code",[t._v("onChange")]),t._v("方法获取实时的"),a("code",[t._v("status")]),t._v("，Button内部则通过"),a("code",[t._v("onToggleStatus")]),t._v("控制状态")]),t._v("。")]),t._v(" "),a("p",[t._v("如果现在另一个开发人员开发外部组件时，想要实现在外部实现第二个按钮"),a("strong",[t._v("实时控制和同步显示Button的状态")]),t._v("。此时他已经可以通过"),a("code",[t._v("onChange")]),t._v("实时同步状态，而从外部修改Button状态则一般有两种方式：")]),t._v(" "),a("ol",[a("li",[t._v("修改Button组件为纯函数组件，将其状态和修改状态的方法提升至父组件或者状态管理工具中。")]),t._v(" "),a("li",[t._v("通过ref拿到该组件，通过"),a("code",[t._v("ref.current.onToggleStatus()")]),t._v("的方式修改子组件状态。")])]),t._v(" "),a("h4",{attrs:{id:"ref的其他用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref的其他用法"}},[t._v("#")]),t._v(" ref的其他用法")]),t._v(" "),a("p",[t._v("16.3之前可以通过字符或者回调函数两个方式获取ref")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// string ref\nclass MyComponent extends React.Component {\n  componentDidMount() {\n    this.refs.myRef.focus();\n  }\n\n  render() {\n    return <input ref="myRef" />;\n  }\n}\n\n// callback ref\nclass MyComponent extends React.Component {\n  componentDidMount() {\n    this.myRef.focus();\n  }\n\n  render() {\n    return <input ref={(ele) => {\n      this.myRef = ele;\n    }} />;\n  }\n}\n')])])]),a("p",[t._v("string ref 就已被诟病已久，React 官方文档中如此声明："),a("code",[t._v('"如果你目前还在使用 this.refs.textInput 这种方式访问 refs ，我们建议用回调函数或 createRef API 的方式代替。"')])]),t._v(" "),a("p",[t._v("吐槽内容主要有以下几点:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("string ref 不可组合。 例如一个第三方库的父组件已经给子组件传递了 ref，那么我们就无法在在子组件上添加 ref 了。 另一方面，回调引用没有一个所有者，因此您可以随时编写它们。")])]),t._v(" "),a("li",[a("p",[t._v("string ref 的所有者由当前执行的组件确定。 这意味着使用通用的“渲染回调”模式（例如react），错误的组件将拥有引用（它将最终在react上而不是您的组件定义renderRow）")])]),t._v(" "),a("li",[a("p",[t._v("string ref 不适用于Flow之类的静态分析。 Flow不能猜测框架可以使字符串ref“出现”在react上的神奇效果，以及它的类型（可能有所不同）。 回调引用比静态分析更友好。")])]),t._v(" "),a("li",[a("p",[t._v("string ref 强制React跟踪当前正在执行的组件。 这是有问题的，因为它使react模块处于有状态，并在捆绑中复制react模块时导致奇怪的错误。在 reconciliation 阶段，React Element 创建和更新的过程中，ref 会被封装为一个闭包函数，等待 commit 阶段被执行，这会对 React 的性能产生一些影响。")])])]),t._v(" "),a("p",[t._v("而callback ref则一直可以。React 将在组件挂载时，会调用 ref 回调函数并传入 DOM 元素，当卸载时调用它并传入 null。在 componentDidMount 或 componentDidUpdate 触发前，React 会保证 refs 一定是最新的。")]),t._v(" "),a("p",[t._v("如果 ref 回调函数是以内联函数的方式定义的，在更新过程中它会被执行两次，第一次传入参数 null，然后第二次会传入参数 DOM 元素。这是因为在每次渲染时会创建一个新的函数实例，所以 React 清空旧的 ref 并且设置新的。通过将 ref 的回调函数定义成 class 的绑定函数的方式可以避免上述问题，但是大多数情况下它是无关紧要的。")]),t._v(" "),a("p",[t._v("16.3之后class组件中有了createRef，相比于之前的ref使用方式，优点：")]),t._v(" "),a("ul",[a("li",[t._v("相对于 callback ref 而言 React.createRef 显得更加直观，避免了 callback ref 的一些理解问题。")])]),t._v(" "),a("p",[t._v("React.createRef 的缺点：")]),t._v(" "),a("ol",[a("li",[t._v("性能略低于 callback ref")]),t._v(" "),a("li",[t._v("能力上仍逊色于 callback ref，例如上一节提到的组合问题，createRef 也是无能为力的。")])]),t._v(" "),a("h3",{attrs:{id:"列表组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表组件"}},[t._v("#")]),t._v(" 列表组件")]),t._v(" "),a("p",[t._v("使用key时，不能使用数组的index作为列表组件的key")]),t._v(" "),a("p",[t._v("使用index作为key的列表，向列表中添加或删除某些项时可能导致错误的显示。因为key是连接真实DOM的标识，当更改后的key与更改前的key相同时，react会认为前后的组件是相同的，但其实这两项并不一样")]),t._v(" "),a("h3",{attrs:{id:"constructor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[t._v("#")]),t._v(" Constructor")]),t._v(" "),a("p",[t._v("class组件中有constructor构造函数，有两个目的")]),t._v(" "),a("p",[t._v("1.初始化this.state")]),t._v(" "),a("p",[t._v("2.函数方法绑定到实例")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("constructor(props) {\n  super(props);\n  this.state = { counter: 0 };\n  this.handleClick = this.handleClick.bind(this)\n}\n")])])]),a("p",[t._v("使用箭头函数则不需要将事件在constructor中绑定")]),t._v(" "),a("h3",{attrs:{id:"props默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props默认值"}},[t._v("#")]),t._v(" props默认值")]),t._v(" "),a("p",[t._v("对于函数组件，设置函数的defaultprops属性")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" import React from 'react'\n\n function About (props) {\n   const { name, age } = props\n     return (\n       <div>\n         <p>{ name }</p>\n         <p>{ age }</p>\n       </div>\n     )\n }\n\n About.defaultProps = {\n   name: 'ReoNa',\n   age: 22\n }\n \n export default About\n")])])]),a("p",[t._v("对于类组件，我们直接定义 "),a("code",[t._v("static defaultProps")]),t._v("设置默认值")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" import React, { Component } from 'react'\n \n class Header extends Component {\n \n   static defaultProps = {\n     name: 'Aimyon',\n     age: 25\n   }\n \n   render () {\n     const { name, age } = this.props\n     return (\n       <div>\n         <p>{ name }</p>\n         <p>{ age }</p>\n       </div>\n     )\n   }\n }\n \n export default Header\n")])])]),a("h3",{attrs:{id:"修改props的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改props的方法"}},[t._v("#")]),t._v(" 修改props的方法")]),t._v(" "),a("p",[t._v("父组件使用ref")]),t._v(" "),a("p",[t._v("父组件对子组件传入改变props的方法，由自组件调用")]),t._v(" "),a("h3",{attrs:{id:"高级-正交组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级-正交组件"}},[t._v("#")]),t._v(" 高级：正交组件")]),t._v(" "),a("p",[t._v("如果A和B正交的，则更改A不会更改B（反之亦然）。这就是正交性的概念。在广播设备中，音量和电台选择控件是正交的。音量控制仅更改音量，而电台选择控件仅更改接收到的电台")]),t._v(" "),a("p",[t._v("一个好的React应用程序设计是正交的：")]),t._v(" "),a("ul",[a("li",[t._v("UI元素")]),t._v(" "),a("li",[t._v("全局状态管理")]),t._v(" "),a("li",[t._v("持久性逻辑（本地存储，cookie）")]),t._v(" "),a("li",[t._v("获取数据 （fetch library, REST or GraphQL）")])]),t._v(" "),a("p",[t._v("将组件隔离，并独立封装。这将使你的组件正交，并且你所做的任何更改都将被隔离，并且仅集中在一个组件上。这就是可预测且易于开发的系统的诀窍")]),t._v(" "),a("ul",[a("li",[t._v("使用React hooks？它们使"),a("strong",[t._v("UI渲染逻辑")]),t._v("与"),a("strong",[t._v("state")]),t._v("和"),a("strong",[t._v("副作用逻辑")]),t._v("正交")]),t._v(" "),a("li",[t._v("为什么Suspense获取？它使获取的细节和组件正交")])]),t._v(" "),a("p",[t._v("正交组件的好处：")]),t._v(" "),a("p",[t._v("易于修改：当组件是正交设计时，对组件所做的任何更改都将隔离在组件内。")]),t._v(" "),a("p",[t._v("易读：由于正交组件仅负责一个任务，因此更容易了解该组件的功能，它不被不属于这里的细节所困扰。")]),t._v(" "),a("p",[t._v("易测试：正交组件仅专注于执行单个任务，你要做的只是测试组件是否正确执行任务。通常，非正交组件需要大量的模拟和手动设置才能进行测试，而且，如果难以测试。而现在你只需修改单个组件。")]),t._v(" "),a("h3",{attrs:{id:"ui组件、业务组件与增强组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui组件、业务组件与增强组件"}},[t._v("#")]),t._v(" UI组件、业务组件与增强组件")]),t._v(" "),a("p",[t._v("纯UI组件是指组件中没有或者只有较少逻辑且完全受控的组件")]),t._v(" "),a("p",[t._v("业务组件与增强组件：")]),t._v(" "),a("p",[t._v("业务组件中一般会写一些与业务强相关的接口/逻辑，这些逻辑在别的系统就不可以使用了，所以称为业务组件")]),t._v(" "),a("p",[t._v("增强组件是一个增强功能的组件，组件中没有单独的逻辑，基本上props是一些通用的api或者数据。")]),t._v(" "),a("h4",{attrs:{id:"为什么函数式组件必须引入react"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么函数式组件必须引入react"}},[t._v("#")]),t._v(" 为什么函数式组件必须引入React")]),t._v(" "),a("p",[t._v("react的函数式组件中必须引入React，比如像这样")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello World"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" App"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("原因是Babel在转译app.js时会把jsx语法糖转换为React.createElement方法")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("App")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!!!"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("那能不能直接写函数组件，而不需要在组件顶部引入React组件呢")]),t._v(" "),a("p",[t._v("可以。通过babel的插件babel-plugin-react-require 自动分别无状态组件，如果是则自动引入react")]),t._v(" "),a("p",[t._v("安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" babel-plugin-react-require --save-dev\n")])])]),a("p",[t._v("在 "),a("code",[t._v(".babelrc")]),t._v(" 加入 "),a("code",[t._v("react-require")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react-require"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("也可以修改插件，使得编译后的代码生成自己的虚拟Dom函数。比如deku等")]),t._v(" "),a("p",[t._v("https://juejin.cn/post/6844903783655276557")]),t._v(" "),a("h3",{attrs:{id:"react哲学"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react哲学"}},[t._v("#")]),t._v(" react哲学")]),t._v(" "),a("p",[t._v("在react官网上看到一篇很好的博客，摘要一些东西放这里")]),t._v(" "),a("p",[t._v("React 是用 JavaScript 构建快速响应的大型 Web 应用程序的首选方式。它在 Facebook 和 Instagram 上表现优秀")]),t._v(" "),a("p",[t._v("React 最棒的部分之一是引导我们思考如何构建一个应用。")]),t._v(" "),a("p",[t._v("假设我们已经有了一个返回 JSON 的 API，以及设计师提供的组件设计稿，应该如何设计代码/组件呢")]),t._v(" "),a("p",[t._v("第一步，将设计好的UI划分组件层级")]),t._v(" "),a("p",[t._v("首先，你需要在设计稿上用方框圈出每一个组件（包括它们的子组件），并且以合适的名称命名。如果你是和设计师一起完成此任务，那么他们可能已经做过类似的工作，所以请和他们进行交流！他们的 Photoshop 的图层名称可能最终就是你编写的 React 组件的名称！")]),t._v(" "),a("p",[t._v("但你如何确定应该将哪些部分划分到一个组件中呢？你可以将组件当作一种函数或者是对象来考虑，根据"),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Single_responsibility_principle",target:"_blank",rel:"noopener noreferrer"}},[t._v("单一功能原则"),a("OutboundLink")],1),t._v("来判定组件的范围。也就是说，一个组件原则上只能负责一个功能。如果它需要负责更多的功能，这时候就应该考虑将它拆分成更小的组件")]),t._v(" "),a("p",[t._v("在实践中，因为你经常是在向用户展示 JSON 数据模型，所以如果你的模型设计得恰当，UI（或者说组件结构）便会与数据模型一一对应，这是因为 UI 和数据模型都会倾向于遵守相同的"),a("em",[t._v("信息结构")]),t._v("。将 UI 分离为组件，其中每个组件需与数据模型的某部分匹配")]),t._v(" "),a("p",[t._v("现在我们已经确定了设计稿中应该包含的组件，接下来我们将把它们描述为更加清晰的层级。设计稿中被其他组件包含的子组件，在层级上应该作为其子节点")]),t._v(" "),a("p",[t._v("第二步，用React创建一个 静态版本")]),t._v(" "),a("p",[t._v("现在我们已经确定了组件层级，可以编写对应的应用了。最容易的方式，是先用已有的数据模型渲染一个不包含交互功能的 UI。最好将渲染 UI 和添加交互这两个过程分开。这是因为，编写一个应用的静态版本时，往往要编写大量代码，而不需要考虑太多交互细节；添加交互功能时则要考虑大量细节，而不需要编写太多代码。所以，将这两个过程分开进行更为合适。")]),t._v(" "),a("p",[t._v("在构建应用的静态版本时，我们需要创建一些会重用其他组件的组件，然后通过 "),a("em",[t._v("props")]),t._v(" 传入所需的数据。"),a("em",[t._v("props")]),t._v(" 是父组件向子组件传递数据的方式。即使你已经熟悉了 "),a("em",[t._v("state")]),t._v(" 的概念，也"),a("strong",[t._v("完全不应该使用 state")]),t._v(" 构建静态版本。state 代表了随时间会产生变化的数据，应当仅在实现交互时使用。所以构建应用的静态版本时，你不会用到它")]),t._v(" "),a("p",[t._v("你可以自上而下或者自下而上构建应用：自上而下意味着首先编写层级较高的组件（比如 "),a("code",[t._v("FilterableProductTable")]),t._v("），自下而上意味着从最基本的组件开始编写（比如 "),a("code",[t._v("ProductRow")]),t._v("）。当你的应用比较简单时，使用自上而下的方式更方便；对于较为大型的项目来说，自下而上地构建，并同时为低层组件编写测试是更加简单的方式")]),t._v(" "),a("p",[t._v("到此为止，你应该已经有了一个可重用的组件库来渲染你的数据模型。由于我们构建的是静态版本，所以这些组件目前只需提供 "),a("code",[t._v("render()")]),t._v(" 方法用于渲染。最顶层的组件 "),a("code",[t._v("FilterableProductTable")]),t._v(" 通过 props 接受你的数据模型。如果你的数据模型发生了改变，再次调用 "),a("code",[t._v("root.render()")]),t._v("，UI 就会相应地被更新。数据模型变化、调用 "),a("code",[t._v("render()")]),t._v(" 方法、UI 相应变化，这个过程并不复杂，因此很容易看清楚 UI 是如何被更新的，以及是在哪里被更新的。React "),a("strong",[t._v("单向数据流")]),t._v("（也叫"),a("em",[t._v("单向绑定")]),t._v("）的思想使得组件模块化，易于快速开发")]),t._v(" "),a("p",[t._v("第三步，确定UI state的最小表示")]),t._v(" "),a("p",[t._v("想要使你的 UI 具备交互功能，需要有触发基础数据模型改变的能力。React 通过实现 "),a("strong",[t._v("state")]),t._v(" 来完成这个任务")]),t._v(" "),a("p",[t._v("为了正确地构建应用，你首先需要找出应用所需的 state 的最小表示，并根据需要计算出其他所有数据。其中的关键正是 "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Don't_repeat_yourself",target:"_blank",rel:"noopener noreferrer"}},[t._v("DRY: "),a("em",[t._v("Don’t Repeat Yourself")]),a("OutboundLink")],1),t._v("。只保留应用所需的可变 state 的最小集合，其他数据均由它们计算产生。比如，你要编写一个任务清单应用，你只需要保存一个包含所有事项的数组，而无需额外保存一个单独的 state 变量（用于存储任务个数）。当你需要展示任务个数时，只需要利用该数组的 length 属性即可")]),t._v(" "),a("p",[t._v("通过问自己以下三个问题，你可以逐个检查相应数据是否属于 state：")]),t._v(" "),a("ol",[a("li",[t._v("该数据是否是由父组件通过 props 传递而来的？如果是，那它应该不是 state。")]),t._v(" "),a("li",[t._v("该数据是否随时间的推移而保持不变？如果是，那它应该也不是 state。")]),t._v(" "),a("li",[t._v("你能否根据其他 state 或 props 计算出该数据的值？如果是，那它也不是 state")])]),t._v(" "),a("p",[t._v("第四步：确定state放置的位置")]),t._v(" "),a("p",[t._v("我们已经确定了应用所需的 state 的最小集合。接下来，我们需要确定哪个组件能够改变这些 state，或者说"),a("em",[t._v("拥有")]),t._v("这些 state。")]),t._v(" "),a("p",[t._v("注意：React 中的数据流是单向的，并顺着组件层级从上往下传递。哪个组件应该拥有某个 state 这件事，"),a("strong",[t._v("对初学者来说往往是最难理解的部分")]),t._v("。尽管这可能在一开始不是那么清晰，但你可以尝试通过以下步骤来判断：")]),t._v(" "),a("p",[t._v("对于应用中的每一个 state：")]),t._v(" "),a("ul",[a("li",[t._v("找到根据这个 state 进行渲染的所有组件。")]),t._v(" "),a("li",[t._v("找到他们的共同所有者（common owner）组件（在组件层级上高于所有需要该 state 的组件）。")]),t._v(" "),a("li",[t._v("该共同所有者组件或者比它层级更高的组件应该拥有该 state。")]),t._v(" "),a("li",[t._v("如果你找不到一个合适的位置来存放该 state，就可以直接创建一个新的组件来存放该 state，并将这一新组件置于高于共同所有者组件层级的位置。")])]),t._v(" "),a("p",[t._v("第五步：添加反向数据流")]),t._v(" "),a("p",[t._v("到目前为止，我们已经借助自上而下传递的 props 和 state 渲染了一个应用。现在，我们将尝试让数据反向传递：处于较低层级的表单组件更新较高层级的 "),a("code",[t._v("FilterableProductTable")]),t._v(" 中的 state。")]),t._v(" "),a("p",[t._v("React 通过一种比传统的双向绑定略微繁琐的方法来实现反向数据传递。尽管如此，但这种需要显式声明的方法更有助于人们理解程序的运作方式。")]),t._v(" "),a("p",[t._v("如果你尝试在上一个示例的搜索框中输入或勾选复选框（步骤 4），React 不会产生任何响应。这是正常的，因为我们之前已经将 "),a("code",[t._v("input")]),t._v(" 的值设置为了从 "),a("code",[t._v("FilterableProductTable")]),t._v(" 的 "),a("code",[t._v("state")]),t._v(" 传递而来的固定值。")]),t._v(" "),a("p",[t._v("让我们重新梳理一下需要实现的功能：每当用户改变表单的值，我们需要改变 state 来反映用户的当前输入。由于 state 只能由拥有它们的组件进行更改，"),a("code",[t._v("FilterableProductTable")]),t._v(" 必须将一个能够触发 state 改变的回调函数（callback）传递给 "),a("code",[t._v("SearchBar")]),t._v("。我们可以使用输入框的 "),a("code",[t._v("onChange")]),t._v(" 事件来监视用户输入的变化，并通知 "),a("code",[t._v("FilterableProductTable")]),t._v(" 传递给 "),a("code",[t._v("SearchBar")]),t._v(" 的回调函数。然后该回调函数将调用 "),a("code",[t._v("setState()")]),t._v("，从而更新应用")]),t._v(" "),a("p",[t._v("https://zh-hans.reactjs.org/docs/thinking-in-react.html")]),t._v(" "),a("h3",{attrs:{id:"进阶-构建组件的哲学"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进阶-构建组件的哲学"}},[t._v("#")]),t._v(" 进阶：构建组件的哲学")]),t._v(" "),a("h4",{attrs:{id:"自上而下地设计组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自上而下地设计组件"}},[t._v("#")]),t._v(" 自上而下地设计组件")]),t._v(" "),a("p",[t._v("自上而下的设计组件通常能更直接地设计组件，但是要避免设计出巨大的单体组件。与之相对的是自下而上地设计组件。")]),t._v(" "),a("p",[t._v("巨大的单体组件意味着难以组合和抽象，而且会让组件变得臃肿和变得有风险。")]),t._v(" "),a("p",[t._v("https://frontendmastery.com/posts/building-future-facing-frontend-architectures/")]),t._v(" "),a("h4",{attrs:{id:"使用多组件共同完成任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用多组件共同完成任务"}},[t._v("#")]),t._v(" 使用多组件共同完成任务")]),t._v(" "),a("p",[t._v("可以用一个稳定性较高的组件包裹一些较小的组件，好过传递全部props进一个巨大的单体组件")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Tab")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" children "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tabAttributes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useTab")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("tabAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("TabPanel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" children "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tabPanelAttributes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useTabPanel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("tabPanelAttributes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这其中可以使用context传递数据")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("TabsList")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" children "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// provided by top level Tabs component coming up next")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" tabsId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" currentTabIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onTabChange "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useTabList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// store a reference to the DOM element so we can select via id")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and manage the focus states ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ref "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("selectTabByIndex")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" selectedTab "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("[id=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("tabsId"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    selectedTab"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("focus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onTabChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we would handle keyboard events here ")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// things like selecting with left and right arrow keys")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onKeyDown")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .. some other stuff - again we're omitting styles etc")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div role"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tablist"')]),t._v(" ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("children"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" isSelected "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" currentTabIndex\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TabContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider\n              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (!) in real life this would need to be restructured ")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (!) and memoized to use a stable references everywhere")]),t._v("\n              value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("tabsId"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("tabsId"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("role")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tab'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'aria-setsize'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'aria-posinset'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'aria-selected'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" isSelected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'aria-controls'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("tabsId"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("-tab")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// managing focussability")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("tabIndex")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" isSelected "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onClick")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectTabByIndex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                onKeyDown"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TabContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Provider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("也可以多个Context、useState管理数据，像这样")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TabContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TabListContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" TabPanelContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useTab")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tabData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TabContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tabData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A Tab must have a TabList parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tabData\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useTabPanel")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tabPanelData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TabPanelContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tabPanelData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A TabPanel must have a Tabs parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tabPanelData\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useTabList")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" tabListData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TabListContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tabListData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A TabList must have a Tabs parent'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" tabListData\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"设计好组件的api-props的原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计好组件的api-props的原则"}},[t._v("#")]),t._v(" 设计好组件的api/props的原则")]),t._v(" "),a("p",[t._v("1.不要把组件的setState传给子组件")]),t._v(" "),a("p",[t._v("最好使用调用函数的方式")]),t._v(" "),a("p",[t._v("2.不要在同一个props上绑定多个状态，造成难维护的组件。")]),t._v(" "),a("h2",{attrs:{id:"hoc与render-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hoc与render-props"}},[t._v("#")]),t._v(" HOC与render Props")]),t._v(" "),a("h3",{attrs:{id:"包装强化组件的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装强化组件的方式"}},[t._v("#")]),t._v(" 包装强化组件的方式")]),t._v(" "),a("p",[t._v("1.最早的mixin方式，已弃用")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("react")]),t._v("初期提供一种组合方法。通过"),a("code",[t._v("React.createClass")]),t._v(",加入"),a("code",[t._v("mixins")]),t._v("属性，具体用法和"),a("code",[t._v("vue")]),t._v(" 中"),a("code",[t._v("mixins")]),t._v("相似")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const customMixin = {\n  componentDidMount(){\n    console.log( '------componentDidMount------' )\n  },\n  say(){\n    console.log(this.state.name)\n  }\n}\n\nconst APP = React.createClass({\n  mixins: [ customMixin ],\n  getInitialState(){\n    return {\n      name:'alien'\n    }\n  },\n  render(){\n    const { name  } = this.state\n    return <div> hello ,world , my name is { name } </div>\n  }\n})\n")])])]),a("p",[t._v("这种"),a("code",[t._v("mixins")]),t._v("只能存在"),a("code",[t._v("createClass")]),t._v("中，后来"),a("code",[t._v("React.createClass")]),t._v("连同"),a("code",[t._v("mixins")]),t._v("这种模式被废弃了。"),a("code",[t._v("mixins")]),t._v("会带来一些负面的影响。")]),t._v(" "),a("ul",[a("li",[t._v("1 mixin引入了隐式依赖关系。")]),t._v(" "),a("li",[t._v("2 不同mixins之间可能会有先后顺序甚至代码冲突覆盖的问题")]),t._v(" "),a("li",[t._v("3 mixin代码会导致滚雪球式的复杂性")])]),t._v(" "),a("p",[t._v("2.extends继承模式")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("class")]),t._v("组件盛行之后，我们可以通过继承的方式进一步的强化我们的组件。这种模式的好处在于，可以封装基础功能组件，然后根据需要去"),a("code",[t._v("extends")]),t._v("我们的基础组件，按需强化组件，但是值得注意的是，必须要对基础组件有足够的掌握，否则会造成一些列意想不到的情况发生")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class Base extends React.Component{\n  constructor(){\n    super()\n    this.state={\n      name:'alien'\n    }\n  }\n  say(){\n    console.log('base components')\n  }\n  render(){\n    return <div> hello,world <button onClick={ this.say.bind(this) } >点击</button>  </div>\n  }\n}\nclass Index extends Base{\n  componentDidMount(){\n    console.log( this.state.name )\n  }\n  say(){ /* 会覆盖基类中的 say  */\n    console.log('extends components')\n  }\n}\nexport default Index\n")])])]),a("p",[t._v("3.HOC")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function HOC(Component) {\n  return class wrapComponent extends React.Component{\n     constructor(){\n       super()\n       this.state={\n         name:'alien'\n       }\n     }\n     render=()=><Component { ...this.props } { ...this.state } />\n  }\n}\n\n@HOC\nclass Index extends React.Component{\n  say(){\n    const { name } = this.props\n    console.log(name)\n  }\n  render(){\n    return <div> hello,world <button onClick={ this.say.bind(this) } >点击</button>  </div>\n  }\n}\n")])])]),a("h3",{attrs:{id:"hoc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hoc"}},[t._v("#")]),t._v(" HOC")]),t._v(" "),a("p",[t._v("HOC的基本原理可以写成这样：")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const HOCFactory = (Component) => {\n  return class HOC extends React.Component {\n    render(){\n      return <Component {...this.props} />\n    }\n  }\n}\n")])])]),a("p",[t._v("HOC最大的特点就是：接受一个组件作为参数，返回一个新的组件。")]),t._v(" "),a("p",[t._v("组件是把"),a("code",[t._v("prop")]),t._v("渲染成"),a("code",[t._v("UI")]),t._v(",而高阶组件是将组件转换成另外一个组件")]),t._v(" "),a("p",[t._v("高阶组件解决的问题")]),t._v(" "),a("p",[a("strong",[t._v("① 复用逻辑")]),t._v("：高阶组件更像是一个加工"),a("code",[t._v("react")]),t._v("组件的工厂，批量对原有组件进行"),a("strong",[t._v("加工")]),t._v("，"),a("strong",[t._v("包装")]),t._v("处理。我们可以根据业务需求定制化专属的"),a("code",[t._v("HOC")]),t._v(",这样可以解决复用逻辑。")]),t._v(" "),a("p",[a("strong",[t._v("② 强化props")]),t._v("：这个是"),a("code",[t._v("HOC")]),t._v("最常用的用法之一，高阶组件返回的组件，可以劫持上一层传过来的"),a("code",[t._v("props")]),t._v(",然后混入新的"),a("code",[t._v("props")]),t._v(",来增强组件的功能。代表作"),a("code",[t._v("react-router")]),t._v("中的"),a("code",[t._v("withRouter")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("③ 赋能组件")]),t._v("："),a("code",[t._v("HOC")]),t._v("有一项独特的特性，就是可以给被"),a("code",[t._v("HOC")]),t._v("包裹的业务组件，提供一些拓展功能，比如说"),a("strong",[t._v("额外的生命周期，额外的事件")]),t._v("，但是这种"),a("code",[t._v("HOC")]),t._v("，可能需要和业务组件紧密结合。典型案例"),a("code",[t._v("react-keepalive-router")]),t._v("中的 "),a("code",[t._v("keepaliveLifeCycle")]),t._v("就是通过"),a("code",[t._v("HOC")]),t._v("方式，给业务组件增加了额外的生命周期。")]),t._v(" "),a("p",[a("strong",[t._v("④ 控制渲染")]),t._v("：劫持渲染是"),a("code",[t._v("hoc")]),t._v("一个特性，在"),a("code",[t._v("wrapComponent")]),t._v("包装组件中，可以对原来的组件，进行"),a("code",[t._v("条件渲染")]),t._v("，"),a("code",[t._v("节流渲染")]),t._v("，"),a("code",[t._v("懒加载")]),t._v("等功能，后面会详细讲解，典型代表做"),a("code",[t._v("react-redux")]),t._v("中"),a("code",[t._v("connect")]),t._v("和 "),a("code",[t._v("dva")]),t._v("中 "),a("code",[t._v("dynamic")]),t._v(" 组件懒加载")]),t._v(" "),a("p",[t._v("HOC的优点：")]),t._v(" "),a("ul",[a("li",[t._v("支持ES6，光这一项就战胜了mixins")]),t._v(" "),a("li",[t._v("复用性强，HOC是纯函数且返回值仍为组件，在使用时可以多层嵌套，在不同情境下使用特定的HOC组合也方便调试。")]),t._v(" "),a("li",[t._v("同样由于HOC是纯函数，支持传入多个参数，增强了其适用范围。")])]),t._v(" "),a("p",[t._v("HOC的缺点：")]),t._v(" "),a("ul",[a("li",[t._v("当有多个HOC一同使用时，无法直接判断子组件的props是哪个HOC负责传递的。")]),t._v(" "),a("li",[t._v("重复命名的问题：若父子组件有同样名称的props，或使用的多个HOC中存在相同名称的props，则存在覆盖问题，而且react并不会报错。当然可以通过规范命名空间的方式避免。")]),t._v(" "),a("li",[t._v("在react开发者工具中观察HOC返回的结构，可以发现HOC产生了许多无用的组件，加深了组件层级。")]),t._v(" "),a("li",[t._v("同时，HOC使用了静态构建，即当AppWithMouse被创建时，调用了一次withMouse中的静态构建。而在render中调用构建方法才是react所倡导的动态构建。与此同时，在render中构建可以更好的利用react的生命周期。")])]),t._v(" "),a("p",[t._v("render prop 的出现解决了以上问题")]),t._v(" "),a("h4",{attrs:{id:"两种不同的hoc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种不同的hoc"}},[t._v("#")]),t._v(" 两种不同的HOC")]),t._v(" "),a("p",[t._v("常用的高阶组件有两种方式"),a("strong",[t._v("正向的属性代理")]),t._v("和"),a("strong",[t._v("反向的组件继承")]),t._v("，两者之前有一些共性和区别。")]),t._v(" "),a("p",[t._v("所谓正向属性代理，就是用组件包裹一层代理组件，在代理组件上，我们可以做一些，对源组件的代理操作。在"),a("code",[t._v("fiber tree")]),t._v(" 上，先"),a("code",[t._v("mounted")]),t._v("代理组件，然后才是我们的业务组件。我们可以理解为父子组件关系，父组件对子组件进行一系列强化操作")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class Index extends React.Component{\n  render(){\n    return <div> hello,world  </div>\n  }\n}\nIndex.say = function(){\n  console.log('my name is alien')\n}\nfunction HOC(Component) {\n  return class wrapComponent extends React.Component{\n     render(){\n       return <Component { ...this.props } { ...this.state } />\n     }\n  }\n}\nconst newIndex =  HOC(Index) \nconsole.log(newIndex.say)\n")])])]),a("p",[t._v("优点：")]),t._v(" "),a("p",[t._v("① 正常属性代理可以和业务组件低耦合，零耦合，对于"),a("code",[t._v("条件渲染")]),t._v("和"),a("code",[t._v("props属性增强")]),t._v(",只负责控制子组件渲染和传递额外的"),a("code",[t._v("props")]),t._v("就可以，所以无须知道，业务组件做了些什么。所以正向属性代理，更适合做一些开源项目的"),a("code",[t._v("hoc")]),t._v("，目前开源的"),a("code",[t._v("HOC")]),t._v("基本都是通过这个模式实现的。")]),t._v(" "),a("p",[t._v("② 同样适用于"),a("code",[t._v("class")]),t._v("声明组件，和"),a("code",[t._v("function")]),t._v("声明的组件。")]),t._v(" "),a("p",[t._v("③ 可以完全隔离业务组件的渲染,相比反向继承，属性代理这种模式。可以完全控制业务组件渲染与否，可以避免"),a("code",[t._v("反向继承")]),t._v("带来一些副作用，比如生命周期的执行。")]),t._v(" "),a("p",[t._v("④ 可以嵌套使用，多个"),a("code",[t._v("hoc")]),t._v("是可以嵌套使用的，而且一般不会限制包装"),a("code",[t._v("HOC")]),t._v("的先后顺序。")]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("ul",[a("li",[t._v("① 一般无法直接获取业务组件的状态，如果想要获取，需要"),a("code",[t._v("ref")]),t._v("获取组件实例。")]),t._v(" "),a("li",[t._v("② 无法直接继承静态属性。如果需要继承需要手动处理，或者引入第三方库。")])]),t._v(" "),a("p",[t._v("反向继承和属性代理有一定的区别，在于包装后的组件继承了业务组件本身，所以我们我无须在去实例化我们的业务组件。当前高阶组件就是继承后，加强型的业务组件。这种方式类似于组件的强化")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("class Index extends React.Component{\n  render(){\n    return <div> hello,world  </div>\n  }\n}\nIndex.say = function(){\n  console.log('my name is alien')\n}\nfunction HOC(Component) {\n  return class wrapComponent extends Component{\n  }\n}\nconst newIndex =  HOC(Index) \nconsole.log(newIndex.say)\n")])])]),a("p",[t._v("优点：")]),t._v(" "),a("ul",[a("li",[t._v("① 方便获取组件内部状态，比如"),a("code",[t._v("state")]),t._v("，"),a("code",[t._v("props")]),t._v(" ,生命周期,绑定的事件函数等")]),t._v(" "),a("li",[t._v("② "),a("code",[t._v("es6")]),t._v("继承可以良好继承静态属性。我们无须对静态属性和方法进行额外的处理。")])]),t._v(" "),a("p",[t._v("缺点：")]),t._v(" "),a("p",[t._v("① 无状态组件无法使用。")]),t._v(" "),a("p",[t._v("② 和被包装的组件强耦合，需要知道被包装的组件的内部状态，具体是做什么？")]),t._v(" "),a("p",[t._v("③ 如果多个反向继承"),a("code",[t._v("hoc")]),t._v("嵌套在一起，当前状态会覆盖上一个状态。这样带来的隐患是非常大的，比如说有多个"),a("code",[t._v("componentDidMount")]),t._v("，当前"),a("code",[t._v("componentDidMount")]),t._v("会覆盖上一个"),a("code",[t._v("componentDidMount")]),t._v("。这样副作用串联起来，影响很大。")]),t._v(" "),a("h4",{attrs:{id:"强化props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强化props"}},[t._v("#")]),t._v(" 强化props")]),t._v(" "),a("p",[t._v("这个是高阶组件最常用的功能，承接上层的"),a("code",[t._v("props")]),t._v(",在混入自己的"),a("code",[t._v("props")]),t._v("，来强化组件")]),t._v(" "),a("p",[t._v("强化props的案例是"),a("code",[t._v("withRoute")]),t._v("。"),a("code",[t._v("withRoute")]),t._v("用途就是，对于没有被"),a("code",[t._v("Route")]),t._v("包裹的组件，给添加"),a("code",[t._v("history")]),t._v("对象等和路由相关的状态，方便我们在任意组件中，都能够获取路由状态，进行路由跳转，这个"),a("code",[t._v("HOC")]),t._v("目的很清楚，就是强化"),a("code",[t._v("props")]),t._v(",把"),a("code",[t._v("Router")]),t._v("相关的状态都混入到"),a("code",[t._v("props")]),t._v("中")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function classHOC(WrapComponent){\n    return class  Idex extends React.Component{\n        state={\n            name:'alien'\n        }\n        componentDidMount(){\n           console.log('HOC')\n        }\n        render(){\n            return <WrapComponent { ...this.props }  { ...this.state }   />\n        }\n    }\n}\nfunction Index(props){\n  const { name } = props\n  useEffect(()=>{\n     console.log( 'index' )\n  },[])\n  return <div>\n    hello,world , my name is { name }\n  </div>\n}\n\nexport default classHOC(Index)\n\nfunction functionHoc(WrapComponent){\n    return function Index(props){\n        const [ state , setState ] = useState({ name :'alien'  })       \n        return  <WrapComponent { ...props }  { ...state }   />\n    }\n}\n")])])]),a("p",[t._v("高阶组件也可以将"),a("code",[t._v("HOC")]),t._v("的"),a("code",[t._v("state")]),t._v("的配合起来，控制业务组件的更新。这种用法在"),a("code",[t._v("react-redux")]),t._v("中"),a("code",[t._v("connect")]),t._v("高阶组件中用到过，用于处理来自"),a("code",[t._v("redux")]),t._v("中"),a("code",[t._v("state")]),t._v("更改，带来的订阅更新作用")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function classHOC(WrapComponent){\n  return class  Idex extends React.Component{\n      constructor(){\n        super()\n        this.state={\n          name:'alien'\n        }\n      }\n      changeName(name){\n        this.setState({ name })\n      }\n      render(){\n          return <WrapComponent { ...this.props }  { ...this.state } changeName={this.changeName.bind(this)  }  />\n      }\n  }\n}\nfunction Index(props){\n  const [ value ,setValue ] = useState(null)\n  const { name ,changeName } = props\n  return <div>\n    <div>   hello,world , my name is { name }</div>\n    改变name <input onChange={ (e)=> setValue(e.target.value)  }  />\n    <button onClick={ ()=>  changeName(value) }  >确定</button>\n  </div>\n}\n\nexport default classHOC(Index)\n")])])]),a("h4",{attrs:{id:"控制渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制渲染"}},[t._v("#")]),t._v(" 控制渲染")]),t._v(" "),a("p",[t._v("控制渲染是高阶组件的一个很重要的特性")]),t._v(" "),a("p",[t._v("对于属性代理的高阶组件，虽然不能在内部操控渲染状态，但是可以在外层控制当前组件是否渲染，这种情况应用于，动态挂载、"),a("strong",[t._v("权限隔离")]),t._v("，"),a("strong",[t._v("懒加载")]),t._v(" ，"),a("strong",[t._v("延时加载")]),t._v("等场景")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// 动态挂载\nfunction renderHOC(WrapComponent){\n  return class Index  extends React.Component{\n      constructor(props){\n        super(props)\n        this.state={ visible:true }  \n      }\n      setVisible(){\n         this.setState({ visible:!this.state.visible })\n      }\n      render(){\n         const {  visible } = this.state \n         return <div className="box"  >\n           <button onClick={ this.setVisible.bind(this) } > 挂载组件 </button>\n           { visible ? <WrapComponent { ...this.props } setVisible={ this.setVisible.bind(this) }   />  : <div className="icon" ><SyncOutlined spin  className="theicon"  /></div> }\n         </div>\n      }\n  }\n}\n\nclass Index extends React.Component{\n  render(){\n    const { setVisible } = this.props\n    return <div className="box" >\n        <p>hello,my name is alien</p>\n        <img  src=\'https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=294206908,2427609994&fm=26&gp=0.jpg\'   /> \n        <button onClick={() => setVisible()}  > 卸载当前组件 </button>\n    </div>\n  }\n}\nexport default renderHOC(Index)\n\n// 懒加载HOC\nexport default function AsyncRouter(loadRouter) {\n  return class Content extends React.Component {\n    state = {Component: null}\n    componentDidMount() {\n      if (this.state.Component) return\n      loadRouter()\n        .then(module => module.default)\n        .then(Component => this.setState({Component},\n         ))\n    }\n    render() {\n      const {Component} = this.state\n      return Component ? <Component {\n      ...this.props\n      }\n      /> : null\n    }\n  }\n}\n\nconst Index = AsyncRouter(()=>import(\'../pages/index\'))\n')])])]),a("p",[t._v("控制渲染比较典型的使用案例是connect。"),a("code",[t._v("connect")]),t._v("的作用也有"),a("code",[t._v("合并props")]),t._v("，但是更重要的是接受"),a("code",[t._v("state")]),t._v("，来控制更新组件。")]),t._v(" "),a("h4",{attrs:{id:"赋能组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋能组件"}},[t._v("#")]),t._v(" 赋能组件")]),t._v(" "),a("p",[t._v("高阶组件还可以赋能组件，比如加一些"),a("strong",[t._v("额外"),a("code",[t._v("生命周期")])]),t._v("，"),a("strong",[t._v("劫持事件")]),t._v("，"),a("strong",[t._v("监控日志")]),t._v("等等。")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 组件内的事件监听\nfunction ClickHoc (Component){\n  return  function Wrap(props){\n    const dom = useRef(null)\n    useEffect(()=>{\n     const handerClick = () => console.log('发生点击事件') \n     dom.current.addEventListener('click',handerClick)\n     return () => dom.current.removeEventListener('click',handerClick)\n    },[])\n    return  <div ref={dom}  ><Component  {...props} /></div>\n  }\n}\n\n@ClickHoc\nclass Index extends React.Component{\n   render(){\n     return <div  className='index'  >\n       <p>hello，world</p>\n       <button>组件内部点击</button>\n    </div>\n   }\n}\nexport default ()=>{\n  return <div className='box'  >\n     <Index />\n     <button>组件外部点击</button>\n  </div>\n}\n")])])]),a("p",[t._v("开源库"),a("code",[t._v("react-keepalive-router")]),t._v("中使用"),a("code",[t._v("HOC")]),t._v(" 组件"),a("code",[t._v("keepaliveLifeCycle")]),t._v(" 包裹，缓存组件的生命周期")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import {lifeCycles} from '../core/keeper'\nimport hoistNonReactStatic from 'hoist-non-react-statics'\nfunction keepaliveLifeCycle(Component) {\n   class Hoc extends React.Component {\n    cur = null\n    handerLifeCycle = type => {\n      if (!this.cur) return\n      const lifeCycleFunc = this.cur[type]\n      isFuntion(lifeCycleFunc) && lifeCycleFunc.call(this.cur)\n    }\n    componentDidMount() { \n      const {cacheId} = this.props\n      cacheId && (lifeCycles[cacheId] = this.handerLifeCycle)\n    }\n    componentWillUnmount() {\n      const {cacheId} = this.props\n      delete lifeCycles[cacheId]\n    }\n     render=() => <Component {...this.props} ref={cur => (this.cur = cur)}/>\n  }\n  return hoistNonReactStatic(Hoc,Component)\n}\n")])])]),a("p",[t._v("https://juejin.cn/post/6940422320427106335#heading-24")]),t._v(" "),a("h3",{attrs:{id:"render-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render-props"}},[t._v("#")]),t._v(" render-props")]),t._v(" "),a("p",[t._v("相比于直接将 "),a("code",[t._v("<Cat>")]),t._v(" 写死在 "),a("code",[t._v("<Mouse>")]),t._v(" 组件中，并且有效地更改渲染的结果，我们可以为 "),a("code",[t._v("<Mouse>")]),t._v(" 提供一个函数 prop 来动态的确定要渲染什么 —— 一个 render prop")]),t._v(" "),a("p",[t._v("Render Props 的核心思想是，通过一个函数将class组件的state作为props传递给纯函数组件")]),t._v(" "),a("p",[t._v("具有 render prop 的组件接受一个返回 React 元素的函数，并在组件内部通过调用此函数来实现自己的渲染逻辑")]),t._v(" "),a("p",[t._v("render prop 是因为模式才被称为 "),a("em",[t._v("render")]),t._v(" prop ，你不一定要用名为 "),a("code",[t._v("render")]),t._v(" 的 prop 来使用这种模式。事实上， "),a("a",{attrs:{href:"https://cdb.reacttraining.com/use-a-render-prop-50de598f11ce",target:"_blank",rel:"noopener noreferrer"}},[a("em",[t._v("任何")]),t._v("被用于告知组件需要渲染什么内容的函数 prop 在技术上都可以被称为 “render prop”"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[a("code",[t._v("children")]),t._v(" prop 并不真正需要添加到 JSX 元素的 “attributes” 列表中。相反，你可以直接放置到元素的"),a("em",[t._v("内部")])]),t._v(" "),a("p",[t._v("由于这一技术的特殊性，当你在设计一个类似的 API 时，你或许会要直接地在你的 propTypes 里声明 children 的类型应为一个函数")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<Mouse children={mouse => (\n  <p>鼠标的位置是 {mouse.x}，{mouse.y}</p>\n)}/>\n\n<Mouse>\n  {mouse => (\n    <p>鼠标的位置是 {mouse.x}，{mouse.y}</p>\n  )}\n</Mouse>\n")])])]),a("p",[t._v("注意：")]),t._v(" "),a("p",[t._v("将 Render Props 与 React.PureComponent 一起使用时要小心")]),t._v(" "),a("p",[t._v("如果你在 render 方法里创建函数，那么使用 render prop 会抵消使用 "),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/react-api.html#reactpurecomponent",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("React.PureComponent")]),a("OutboundLink")],1),t._v(" 带来的优势。因为浅比较 props 的时候总会得到 false，并且在这种情况下每一个 "),a("code",[t._v("render")]),t._v(" 对于 render prop 将会生成一个新的值。")]),t._v(" "),a("p",[t._v("render prop的优点：")]),t._v(" "),a("ul",[a("li",[t._v("支持ES6，和HOC一样")]),t._v(" "),a("li",[t._v("不用担心prop的命名问题，在render函数中只取需要的state")]),t._v(" "),a("li",[t._v("相较于HOC，不会产生无用的空组件加深层级")]),t._v(" "),a("li",[t._v("最重要的是，这里的构建模型是动态的，所有改变都在render中触发，能更好的利用react的生命周期。")])]),t._v(" "),a("h2",{attrs:{id:"组件懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件懒加载"}},[t._v("#")]),t._v(" 组件懒加载")]),t._v(" "),a("p",[t._v("在React应用中，有些组件可能不经常用到，比如法律条款的弹窗，我们几乎不看，这些组件也就没有必要首次加载，可以在点击它们的时候再加载，这就需要动态引入组件，需要组件的时候，才引入组件，加载它们，进行渲染，也称为懒加载")]),t._v(" "),a("h3",{attrs:{id:"react-lazy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-lazy"}},[t._v("#")]),t._v(" React.Lazy")]),t._v(" "),a("p",[t._v("React.lazy + Suspense")]),t._v(" "),a("p",[t._v("React 16.6添加了一个新的特性: React.lazy(), 它可以让代码分割(code splitting)更加容易")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const stockChartPromise = import(\"./StockChart\");\n// const OtherComponent = React.lazy(() => import('./OtherComponent'));\nconst StockChart = React.lazy(() => stockChartPromise);\n")])])]),a("p",[t._v("原理：")]),t._v(" "),a("p",[t._v("import()函数返回的是promise, promise resolve后返回的是module对象(showMessage.js中暴露出来的对象)，通过module对象就可以调用showMessage中暴露的方法。当 Webpack 解析到该"),a("code",[t._v("import()")]),t._v("语法时，会自动进行代码分割。")]),t._v(" "),a("p",[t._v("对于最初 "),a("code",[t._v("React.lazy()")]),t._v(" 所返回的 LazyComponent 对象，其 _status 默认是 -1，所以"),a("strong",[t._v("首次渲染")]),t._v("时，会进入 readLazyComponentType 函数中的 default 的逻辑，这里才会真正异步执行 "),a("code",[t._v("import(url)")]),t._v("操作，由于并未等待，随后会检查模块是否 Resolved，如果已经Resolved了（已经加载完毕）则直接返回"),a("code",[t._v("moduleObject.default")]),t._v("（动态加载的模块的默认导出），否则将通过 throw 将 thenable 抛出到上层")]),t._v(" "),a("p",[t._v("https://juejin.cn/post/6844904191853494280")]),t._v(" "),a("p",[t._v("其他懒加载的库")]),t._v(" "),a("h3",{attrs:{id:"react-lazyload"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-lazyload"}},[t._v("#")]),t._v(" react-lazyload")]),t._v(" "),a("p",[t._v("安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--save")]),t._v(" react-lazyload\n")])])]),a("p",[t._v("懒加载图片")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LazyLoad from 'react-lazyload';\nimport MyComponent from './MyComponent';\n\nconst App = () => {\n  return (\n    <div className=\"list\">\n      <LazyLoad height={200}>\n        <img src=\"tiger.jpg\" /> /*\n                                  Lazy loading images is supported out of box,\n                                  no extra config needed, set `height` for better\n                                  experience\n                                 */\n      </LazyLoad>\n      <LazyLoad height={200} once >\n                                /* Once this component is loaded, LazyLoad will\n                                 not care about it anymore, set this to `true`\n                                 if you're concerned about improving performance */\n        <MyComponent />\n      </LazyLoad>\n      <LazyLoad height={200} offset={100}>\n                              /* This component will be loaded when it's top\n                                 edge is 100px from viewport. It's useful to\n                                 make user ignorant about lazy load effect. */\n        <MyComponent />\n      </LazyLoad>\n      <LazyLoad>\n        <MyComponent />\n      </LazyLoad>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.body);\n")])])]),a("p",[t._v("默认懒加载组件")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import { lazyload } from 'react-lazyload';\n\n@lazyload({\n  height: 200,\n  once: true,\n  offset: 100\n})\nclass MyComponent extends React.Component {\n  render() {\n    return <div>this component is lazyloaded by default!</div>;\n  }\n}\n")])])]),a("h3",{attrs:{id:"react-imported-component"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-imported-component"}},[t._v("#")]),t._v(" react-imported-component")]),t._v(" "),a("p",[t._v("懒加载组件，相似组件有React.lazy react-loadable @loadable/component")]),t._v(" "),a("p",[t._v("使用预加载")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import importedComponent from 'react-imported-component';\nconst Component = importedComponent( () => import('./Component'));\n\nconst Component = importedComponent( () => import('./Component'), {\n  LoadingComponent: Spinner, // what to display during the loading\n  ErrorComponent: FatalError // what to display in case of error\n});\n\nComponent.preload(); // force preload\n\n// render it\n<Component... />\n")])])]),a("p",[t._v("懒加载与React.lazy基本相同")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import { lazy, LazyBoundary } from 'react-imported-component';\nconst Component = lazy(() => import('./Component'));\n\nconst ClientSideOnly = () => (\n  <Suspense>\n    <Component />\n  </Suspense>\n);\n\n// or let's make it SSR friendly\nconst ServerSideFriendly = () => (\n  <LazyBoundary>\n    {' '}\n    // LazyBoundary is Suspense* on the client, and \"nothing\" on the server\n    <Component />\n  </LazyBoundary>\n);\n")])])]),a("p",[t._v("hooks")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('import {useImported} from \'react-imported-component\'\n\nconst MyCalendarComponent = () => {\n  const {\n      imported: moment,\n      loading\n    } = useImported(() => import("moment"));\n\n  return loading ? "..." : <span>today is {moment(Date.now).format()}</span>\n}\n\n// or we could make it a bit more interesting...\n\nconst MyCalendarComponent = () => {\n  const {\n      imported: format  = x => "---", // default value is used while importing library\n    } = useImported(\n      () => import("moment"),\n      moment => x => moment(x).format // masking everything behind\n    );\n\n  return <span>today is {format(Date.now())</span>\n}\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);