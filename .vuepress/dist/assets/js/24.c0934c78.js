(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{382:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("​      基于React的衍生库")]),t._v(" "),a("h2",{attrs:{id:"immutablejs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#immutablejs"}},[t._v("#")]),t._v(" immutablejs")]),t._v(" "),a("p",[t._v("Immutable数据就是一旦创建，就不能更改的数据。每当对Immutable对象进行修改的时候，就会返回一个新的Immutable对象，以此来保证数据的不可变")]),t._v(" "),a("p",[t._v("有人说 Immutable 可以给 React 应用带来数十倍的提升，也有人说 Immutable 的引入是近期 JavaScript 中伟大的发明，因为同期 React 太火，它的光芒被掩盖了。这些至少说明 Immutable 是很有价值的。")]),t._v(" "),a("p",[t._v("Immutable的优点：")]),t._v(" "),a("p",[t._v("1.降低复杂度，避免副作用")]),t._v(" "),a("p",[t._v("2.节省内存。Immutable采用了结构共享机制，所以会尽量复用内存")]),t._v(" "),a("p",[t._v("3.方便回溯。Immutable每次修改都会创建新对象，且对象不变，那么变更记录就能够被保存下来。应用的状态变得可控、可追溯，方便撤销和重做功能的实现")]),t._v(" "),a("p",[t._v("4.函数式编程。Immutable本身就是函数式编程中的概念。纯函数式编程比面向对象更适用于前端开发，因为只要输入一致，输出必然是一致的，这样开发的组件更易于调试和组装")]),t._v(" "),a("p",[t._v("5.丰富的API")]),t._v(" "),a("p",[t._v("JavaScript 中的对象一般是可变的（Mutable），因为使用了引用赋值，新的对象简单的引用了原始对象，改变新的对象将影响到原始对象，比如")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//999")]),t._v("\n")])])]),a("p",[t._v("改变了obj1.a的值，同时也会更改到obj.a的值。")]),t._v(" "),a("p",[t._v("一般的解法就是使用「深拷贝」(deep copy)而非浅拷贝(shallow copy)，来避免被修改,但是这样造成了 CPU和内存的浪费.")]),t._v(" "),a("p",[t._v("immutable可以很好地解决这些问题")]),t._v(" "),a("p",[t._v("Immutable Data 就是一旦创建，就不能再被更改的数据。对 Immutable 对象的任何修改或添加删除操作都会返回一个新的 Immutable 对象。Immutable 实现的原理是 Persistent Data Structure（持久化数据结构），也就是使用旧数据创建新数据时，要保证旧数据同时可用且不变。同时为了避免 deepCopy 把所有节点都复制一遍带来的性能损耗，Immutable 使用了 Structural Sharing（结构共享），即如果对象树中一个节点发生变化，只修改这个节点和受它影响的父节点，其它节点则进行共享。")]),t._v(" "),a("p",[t._v("Immutable 的几种数据类型：")]),t._v(" "),a("ul",[a("li",[t._v("List: 有序索引集，类似JavaScript中的Array。")]),t._v(" "),a("li",[t._v("Map: 无序索引集，类似JavaScript中的Object。")]),t._v(" "),a("li",[t._v("OrderedMap: 有序的Map，根据数据的set()进行排序。")]),t._v(" "),a("li",[t._v("Set: 没有重复值的集合。")]),t._v(" "),a("li",[t._v("OrderedSet: 有序的Set，根据数据的add进行排序。")]),t._v(" "),a("li",[t._v("Stack: 有序集合，支持使用unshift（）和shift（）添加和删除。")]),t._v(" "),a("li",[t._v("Range(): 返回一个Seq.Indexed类型的集合，这个方法有三个参数，start表示开始值，默认值为0，end表示结束值，默认为无穷大，step代表每次增大的数值，默认为1.如果start = end,则返回空集合。")]),t._v(" "),a("li",[t._v("Repeat(): 返回一个vSeq.Indexe类型的集合，这个方法有两个参数，value代表需要重复的值，times代表要重复的次数，默认为无穷大。")]),t._v(" "),a("li",[t._v("Record: 一个用于生成Record实例的类。类似于JavaScript的Object，但是只接收特定字符串为key，具有默认值。")]),t._v(" "),a("li",[t._v("Seq: 序列，但是可能不能由具体的数据结构支持。")]),t._v(" "),a("li",[t._v("Collection: 是构建所有数据结构的基类，不可以直接构建。")])]),t._v(" "),a("p",[t._v("方法：")]),t._v(" "),a("p",[t._v("fromJS()：")]),t._v(" "),a("p",[a("code",[t._v("作用")]),t._v(" : 将一个js数据转换为Immutable类型的数据 "),a("code",[t._v("用法")]),t._v(" : "),a("code",[t._v("fromJS(value, converter)")]),t._v(" "),a("code",[t._v("简介")]),t._v(" : value是要转变的数据，converter是要做的操作。第二个参数可不填，默认情况会将数组准换为List类型，将对象转换为Map类型，其余不做操作。")]),t._v(" "),a("p",[t._v("is()")]),t._v(" "),a("p",[a("code",[t._v("作用")]),t._v(" : 对两个对象进行比较 "),a("code",[t._v("用法")]),t._v(" : "),a("code",[t._v("is(map1,map2)")]),t._v(" "),a("code",[t._v("简介")]),t._v(" : 和js中对象的比较不同，在js中比较两个对象比较的是地址，但是在Immutable中比较的是这个对象hashCode和valueOf，只要两个对象的hashCode相等，值就是相同的，避免了深度遍历，提高了性能")]),t._v(" "),a("h3",{attrs:{id:"在react中使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在react中使用"}},[t._v("#")]),t._v(" 在react中使用")]),t._v(" "),a("p",[t._v("react中通常使用purecomponent进行props的浅比较，从而控制shouldComponentUpdate的返回值")]),t._v(" "),a("p",[t._v("但是当传入prop或者state不止一层，或者传入的是Array和Object类型时，浅比较就失效了，当然也可以在shouldComponentUpdate中使用deepCopy和deepCompare来避免不必要的render，但是深拷贝和深比较都是非常消耗性能的，此时可以用Immutable来进行优化")]),t._v(" "),a("p",[t._v("Immutable提供了简洁高效的判断数据是否变化的方法，只需===和is就能比较是否需要执行render，而这个操作几乎是零成本的，所以可以极大提高性能")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { is, Map } from 'immutable';\n\nclass Caculator extends Component {\n  state = {\n    counter: Map({ number: 0})\n  }\n\n\thandleClick = () => {\n    let amount = this.amount.value ? Number(this.amount.value): 0;\n    let counter = this.state.counter.update('number', val => val + amount);\n    this.setState({counter});\n  }\n\n\tshouldComponentUpdate(nextProps={},nextState={}{\n    if(Object.keys[this.state].length !== Object.keys(nextState).length){\n    \treturn true;\n  \t}\n  \tfor ( const key in nextState ) {\n    \tif( !is(this.state[key], nextState[key])) {\n        return true;\n      }\n  \t}    \n\t\treturn false\n  })\n  render() {\n    return (\n    \t<div>\n      \t<p>{ this.state.counter.get('number')}</p>\n        <input ref={input => this.amout = input} />\n        <button onClick=\"this.handleClick\">+</button>\n      </div>\n    )\n  }\n}\nReactDOM.render(\n\t<Caculator/>,\n  document.getElementById('root')\n)\n")])])]),a("h3",{attrs:{id:"在redux中使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在redux中使用"}},[t._v("#")]),t._v(" 在redux中使用")]),t._v(" "),a("p",[t._v("可以使用redux-immutable中间件的方式实现redux与immutable搭配使用")]),t._v(" "),a("p",[t._v("建议把整个Redux的state树作为Immutable对象")]),t._v(" "),a("h3",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[t._v("#")]),t._v(" 注意")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不要混合普通的JS对象和Immutable对象")])]),t._v(" "),a("li",[a("p",[t._v("把整个Redux的state树作为Immutable对象")])]),t._v(" "),a("li",[a("p",[t._v("除了展示组件，其他大部分组件都可以使用immutable对象提高效率")])]),t._v(" "),a("li",[a("p",[t._v("少用toJS方法，这个方法非常耗费性能，它会深度遍历数据转换成JS对象")])]),t._v(" "),a("li",[a("p",[t._v("你的Selector应该永远返回immutable对象")])])]),t._v(" "),a("h2",{attrs:{id:"rxjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rxjs"}},[t._v("#")]),t._v(" rxjs")]),t._v(" "),a("p",[t._v("rxjs是一个库，它通过使用observable序列来编写异步和基于事件的程序。它提供了核心类型Observable，附属类型(observer、schedulers、subjects)和类似于数组的操作符(map、filter、reduce、every)等，这些操作符可以把异步事件作为集合来处理")]),t._v(" "),a("p",[t._v("可以把rxjs当作用来处理事件的lodash")]),t._v(" "),a("p",[t._v("rxjs中的基本概念：")]),t._v(" "),a("p",[t._v("Observable(是一个可观察对象)：表示一个概念，这个概念是一个可调用的未来值或事件的集合")]),t._v(" "),a("p",[t._v("Observer(观察者)：一个回调函数的集合，它指定如何监听由Observable提供的值")]),t._v(" "),a("p",[t._v("Subscription(订阅)：表示Observable的执行，它主要用于取消Obervable的执行")]),t._v(" "),a("p",[t._v("Operator(操作符)：")]),t._v(" "),a("p",[t._v("Subject(主体)：")]),t._v(" "),a("p",[t._v("Scheduler(调度器)：")]),t._v(" "),a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("通过npm安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" rxjs\n")])])]),a("p",[t._v("通过es6或者commonjs导入")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Rx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/Rx'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Rx "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/Rx'")]),t._v("\n\nRx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("observable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等等")]),t._v("\n")])])]),a("p",[t._v("按需导入函数(可以减少打包体积)")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Observable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/observable'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/add/observable/of'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/add/operator/map'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" Observable "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/Observable'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/add/observable/of'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rxjs/add/operator/map'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nObservable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!!!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//等等")]),t._v("\n")])])]),a("h3",{attrs:{id:"注册事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册事件"}},[t._v("#")]),t._v(" 注册事件")]),t._v(" "),a("p",[t._v("常规写法")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" button "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("rxjs写法")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" button "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nRx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("observable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"操作变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作变量"}},[t._v("#")]),t._v(" 操作变量")]),t._v(" "),a("p",[t._v("常规写法是非纯函数，状态管理较乱")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" button "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("click ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Rxjs将应用状态隔离起来")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" button "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'button'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nRx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("observable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("count")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("count")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("click ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("其他对变量的操作函数")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取输入框")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" input "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Rx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Observable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传递一个新值")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传递两个新值")]),t._v("\ninput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plunk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'target'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pairwise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subsribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只通过唯一的值")]),t._v("\ninput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plunk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("distinct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("subsribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//不传递重复值")]),t._v("\ninput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("plunk")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h3",{attrs:{id:"观察者模式与迭代器模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#观察者模式与迭代器模式"}},[t._v("#")]),t._v(" 观察者模式与迭代器模式")]),t._v(" "),a("p",[t._v("Rxjs中包含两个基本概念：Observable和Observer")]),t._v(" "),a("p",[t._v("Observable作为被观察者，是一个可调用的未来值或事件的集合，支持异步或者同步数据流")]),t._v(" "),a("p",[t._v("Observer作为观察者，是一个回调函数的集合，他知道如何去监听由Observable提供的值")]),t._v(" "),a("p",[t._v("Observer与Observable之间是观察者模式，Observer通过Observable提供的subscribe方法订阅，Observable通过Observer提供的next方法向Observer发布事件")]),t._v(" "),a("p",[t._v("在Rxjs中，Observer除了有next方法来接收Observable的事件外，还提供了另外的两个方法：error方法和complete方法，来完成异常和完成状态，这个就是迭代器模式，类似于ES6中的Iterator遍历器")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import { Observable } from 'rxjs'\n\nconst observer = {\n  next: (value) => console.log(value);\n  error: err => console.error('Observer got an error' + err);\n\tcomplete: () => console.log('Observer got a complete notification')\n}\n\nconst observable = new Observable (function(observer) {\n  observer.next('a');\n  observer.next('b');\n  observer.complete();\n  \n  observer.next('c')\n})\n\nconst subscription = observable.subscribe(observer)\n")])])]),a("h3",{attrs:{id:"react使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react使用"}},[t._v("#")]),t._v(" react使用")]),t._v(" "),a("p",[t._v("在react中，在componentDidMount生命周期中订阅observable，在componentWillUnmount中取消订阅")]),t._v(" "),a("div",{staticClass:"language-react extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import messages from './someObservable'\n\nclass Mycomponent extends ObservableComponent{\n  constructor(props){\n    super(props);\n    this.state = {message:[]};\n  }\n  componentDidMount(){\n    this.messages = messages\n       .scan(messages,messages) => [messages].concat(messages,[])\n       .subscribe(messages => this.setState({messages:messages}))\n  }\n  componentWillUnmount(){\n    this.messages.unsubscribe();\n  }\n  render() {\n    return (\n      <div>\n        <ul>\n           {this.state.messages.map(message => <li>{message.text}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n \nexport default MyComponent;\n")])])]),a("p",[t._v("https://www.jianshu.com/p/273e7ab02fa1")]),t._v(" "),a("h2",{attrs:{id:"cyclejs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cyclejs"}},[t._v("#")]),t._v(" cyclejs")]),t._v(" "),a("h2",{attrs:{id:"测试框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试框架"}},[t._v("#")]),t._v(" 测试框架")]),t._v(" "),a("h2",{attrs:{id:"nextjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextjs"}},[t._v("#")]),t._v(" Nextjs")]),t._v(" "),a("p",[t._v("Https://juejin.cn/post/6844904017487724557")]),t._v(" "),a("p",[a("code",[t._v("Next.js")]),t._v("是一个基于"),a("code",[t._v("React")]),t._v("的一个服务端渲染简约框架。它使用"),a("code",[t._v("React")]),t._v("语法，可以很好的实现代码的模块化，有利于代码的开发和维护")]),t._v(" "),a("p",[t._v("Next的优点：")]),t._v(" "),a("ul",[a("li",[t._v("默认服务端渲染模式，以文件系统为基础的客户端路由")]),t._v(" "),a("li",[t._v("代码自动分隔使页面加载更快")]),t._v(" "),a("li",[t._v("以页面为基础的简洁的客户端路由")]),t._v(" "),a("li",[t._v("以"),a("code",[t._v("webpack")]),t._v("的热替换为基础的开发环境")]),t._v(" "),a("li",[t._v("使用"),a("code",[t._v("React")]),t._v("的"),a("code",[t._v("JSX")]),t._v("和"),a("code",[t._v("ES6")]),t._v("的"),a("code",[t._v("module")]),t._v("，模块化和维护更方便")]),t._v(" "),a("li",[t._v("可以运行在"),a("code",[t._v("Express")]),t._v("和其他"),a("code",[t._v("Node.js")]),t._v("的"),a("code",[t._v("HTTP")]),t._v(" 服务器上")]),t._v(" "),a("li",[t._v("可以定制化专属的"),a("code",[t._v("babel")]),t._v("和"),a("code",[t._v("webpack")]),t._v("配置")])]),t._v(" "),a("p",[t._v("创建next项目")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" --save react react-dom next\n")])])]),a("p",[a("code",[t._v("Next.js")]),t._v("是从服务器生成页面，再返回给前端展示。"),a("code",[t._v("Next.js")]),t._v("默认从 "),a("code",[t._v("pages")]),t._v(" 目录下取页面进行渲染返回给前端展示，并默认取 "),a("code",[t._v("pages/index.js")]),t._v(" 作为系统的首页进行展示。注意，"),a("code",[t._v("pages")]),t._v(" 是默认存放页面的目录，路由的根路径也是"),a("code",[t._v("pages")]),t._v("目录")]),t._v(" "),a("p",[t._v("在pages目录下创建indexjs")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// next-Link用于引入文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Link "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'next/link'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Index")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Link href"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/about"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("About Page"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello Next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" Index\n")])])]),a("h3",{attrs:{id:"多页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多页面"}},[t._v("#")]),t._v(" 多页面")]),t._v(" "),a("h3",{attrs:{id:"使用redux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用redux"}},[t._v("#")]),t._v(" 使用redux")]),t._v(" "),a("h3",{attrs:{id:"路由遮盖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由遮盖"}},[t._v("#")]),t._v(" 路由遮盖")]),t._v(" "),a("p",[a("code",[t._v("Next.js")]),t._v("上提供了一个独特的特性：路由遮盖（Route Masking）。它可以使得在浏览器上显示的是路由"),a("code",[t._v("A")]),t._v("，而"),a("code",[t._v("App")]),t._v("内部真正的路由是"),a("code",[t._v("B")]),t._v("。这个特性可以让我们来设置一些比较简洁的路由显示在页面，而系统背后是使用一个带参数的路由。比如上面的例子中，地址栏中显示的是 "),a("code",[t._v("http://localhost:3000/post?title=Hello%20Next.js")]),t._v(" ，这个地址含有一个"),a("code",[t._v("title")]),t._v("参数，看着很不整洁。下面我们就用"),a("code",[t._v("Next.js")]),t._v("来改造路由，使用路由遮盖来创建一个更加简洁的路由地址。比如我们将该地址改造成 `http://localhost:3000/p/hello-nextjs")]),t._v(" "),a("h3",{attrs:{id:"部署next项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署next项目"}},[t._v("#")]),t._v(" 部署next项目")]),t._v(" "),a("p",[a("code",[t._v("Next.js")]),t._v(" 项目的部署，需要一个 "),a("code",[t._v("Node.js")]),t._v("的服务器，可以选择 "),a("code",[t._v("Express")]),t._v(", "),a("code",[t._v("Koa")]),t._v("或其他 "),a("code",[t._v("Nodejs")]),t._v(" 的Web服务器。本文中以 "),a("code",[t._v("Express")]),t._v(" 为例来部署 "),a("code",[t._v("Next")]),t._v(" 项目。")]),t._v(" "),a("h2",{attrs:{id:"dvajs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dvajs"}},[t._v("#")]),t._v(" Dvajs")]),t._v(" "),a("p",[t._v("dva 首先是一个基于 redux 和 redux-saga的数据流方案，然后为了简化开发体验，dva 还额外内置了 react-router和 fetch，所以也可以理解为一个轻量级的应用框架。")]),t._v(" "),a("p",[t._v("dva把redux的action、reducer、createActions、actionType等不同目录的文件组织在一个modle文件中。")]),t._v(" "),a("p",[t._v("安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" dva-cli@next -g\n")])])]),a("p",[t._v("创建项目")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("dva new myapp\n")])])]),a("p",[t._v("进入目录，运行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])])]),a("h2",{attrs:{id:"blitz-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blitz-js"}},[t._v("#")]),t._v(" blitz.js")]),t._v(" "),a("p",[t._v("安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g blitz\n")])])]),a("p",[t._v("创建项目")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("blitz new AppName\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" \n")])])]),a("h2",{attrs:{id:"umijs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#umijs"}},[t._v("#")]),t._v(" Umijs")]),t._v(" "),a("p",[t._v("和creat-react-app的不同")]),t._v(" "),a("p",[t._v("create-react-app 是基于 webpack 的打包层方案，包含 build、dev、lint 等，他在打包层把体验做到了极致，但是不包含路由，不是框架，也不支持配置。所以，如果大家想基于他修改部分配置，或者希望在打包层之外也做技术收敛时，就会遇到困难。")]),t._v(" "),a("p",[t._v("和nextjs的不同")]),t._v(" "),a("p",[t._v("next.js 是个很好的选择，Umi 很多功能是参考 next.js 做的。要说有哪些地方不如 Umi，我觉得可能是不够贴近业务，不够接地气。比如 antd、dva 的深度整合，比如国际化、权限、数据流、配置式路由、补丁方案、自动化 external 方面等等一线开发者才会遇到的问题。")]),t._v(" "),a("h2",{attrs:{id:"ramda"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ramda"}},[t._v("#")]),t._v(" Ramda")]),t._v(" "),a("p",[t._v("ramda的主要特性：")]),t._v(" "),a("p",[t._v("Ramda强调更加纯粹的函数式编程风格，数据不变性和无副作用是其核心设计理念，可以帮助你使用简洁优雅的代码完成工作")]),t._v(" "),a("p",[t._v("Ramda函数本身都是自动柯里化的，这可以让你在只提供部分参数的情况下，轻松在已有函数的基础上创建新的函数")]),t._v(" "),a("p",[t._v("Ramda函数参数的排列顺序更便于柯里化，要操作的数据通常在最后面。")]),t._v(" "),a("h3",{attrs:{id:"安装-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ramda \n")])])]),a("p",[t._v("全部引入")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ramda'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("R")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ramda'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("identity"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])]),a("p",[t._v("部分引入")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" identity "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ramda/src/identity'")]),t._v("\n")])])]),a("h2",{attrs:{id:"preact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#preact"}},[t._v("#")]),t._v(" Preact")]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[t._v("启动-安装preact-cli")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g preact-cli\n")])])]),a("p",[t._v("创建应用")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("preact create my-first-preact-app\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" my-first-preact-app\n")])])]),a("p",[t._v("启动")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" start\n")])])]),a("p",[t._v("在本地端口8080就可以访问")]),t._v(" "),a("p",[t._v("打包构建")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n")])])]),a("p",[t._v("preact打包构建很快，且和pwa配合很好，一些移动端的页面以及活动页建议可以尝试一下，性能确实会比React好一些，开发与构建流程也很简单高效。")]),t._v(" "),a("p",[t._v("传统有状态组件与无状态组件")]),t._v(" "),a("p",[t._v("有状态组件")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Link")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("a href"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面的代码就用到了"),a("strong",[t._v("PReact可以直接在render中传入props和state")]),t._v("的特性，从一定程度上简化了写法，提升了可读性。")]),t._v(" "),a("p",[t._v("无状态组件")]),t._v(" "),a("p",[a("strong",[t._v("关联状态")])]),t._v(" "),a("p",[t._v("在优化 state 改变的方面，Preact 比 React 走得更超前一点。在 ES2015 React 代码中，通常的模式是在 render() 方法中使用箭头函数，以便响应事件，更新状态。"),a("strong",[t._v("每次渲染都再局部创建一个函数闭包，效率十分低下，而且会迫使垃圾回收器作许多不必要的工作。")])]),t._v(" "),a("p",[t._v("在 Preact 的 Form 中，提供了 linkState() 作为解决方案。linkState() 是 Component 类的一个内置方法。")]),t._v(" "),a("p",[t._v("当发生一个事件时，调用 .linkState('text') 将返回一个处理器函数，这个函数把它相关的值更新到组件状态内指定的值。 "),a("strong",[t._v("多次调用 linkState(name)时，如果 name 参数相同，那么结果会被缓存起来")]),t._v("。所以就必然不存在"),a("strong",[t._v("性能")]),t._v("问题，如:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" text "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" onInput"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("linkState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("外部DOM修改")])]),t._v(" "),a("p",[t._v("有时，需要用到一些第三方库，这些"),a("strong",[t._v("第三方库需要能够自由的修改 DOM，并且在 DOM 内部持久化状态，或这些第三方库根本就没有组件化")]),t._v("。有许多优秀的 UI 工具或可复用的元素都是处于这种无组件化的状态。在 Preact 中 (React 中也类似), 使用这样的库需要告诉 Virtual DOM 的 rendering/diffing 算法：在给定的组件(或者该组件所呈现的 DOM) 中不要去撤销任何外部 DOM 的改变。")]),t._v(" "),a("p",[t._v("可以在组件中定义一个 shouldComponentUpdate() 方法并让其返回值为 fasle：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Block")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("shouldComponentUpdate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("有了这个生命周期的钩子（shouldComponentUpdate），并"),a("strong",[t._v("告诉 Preact 当 VDOM tree 发生状态改变的时候, 不要去再次渲染该组件")]),t._v("。这样"),a("strong",[t._v("组件就有了一个自身的根 DOM")]),t._v(" 元素的引用。你"),a("strong",[t._v("可以把它当做一个静态组件")]),t._v("，直到被移除。因此，任何的组件引用都可以简单通过 this.base 被调用，并且对应从 render() 函数返回的根 JSX 元素。")]),t._v(" "),a("h3",{attrs:{id:"性能监控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能监控"}},[t._v("#")]),t._v(" 性能监控")]),t._v(" "),a("p",[t._v("Preact 很适用于 PWA，它也可以与许多其他工具和技术一起使用以进一步提升和监控性能，")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://webpack.github.io/docs/code-splitting.html",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("webpack的代码拆分按需加载")]),a("OutboundLink")],1),t._v(" 来分解代码，以便"),a("strong",[t._v("只发送用户页面需要的代码")]),t._v("。根据需要延迟加载其余部分可提高页面加载时间。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developers.google.com/web/fundamentals/getting-started/primers/service-workers",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Service Worker 缓存")]),a("OutboundLink")],1),t._v("允许"),a("strong",[t._v("离线缓存应用程序中的静态和动态资源")]),t._v("，实现即时加载和重复访问时更快的交互性。使用"),a("a",{attrs:{href:"https://github.com/GoogleChrome/sw-precache#wrappers-and-starter-kits",target:"_blank",rel:"noopener noreferrer"}},[t._v("sw-precache"),a("OutboundLink")],1),t._v("或"),a("a",{attrs:{href:"https://github.com/NekR/offline-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("offline-plugin"),a("OutboundLink")],1),t._v("完成此操作。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developers.google.com/web/fundamentals/performance/prpl-pattern/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("PRPL")]),a("OutboundLink")],1),t._v("鼓励"),a("strong",[t._v("向浏览器预先推送或预加载资源")]),t._v("，从而加快后续页面的加载速度。它基于代码拆分和 SW 缓存。")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/GoogleChrome/lighthouse/",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Lighthouse")]),a("OutboundLink")],1),t._v("允许你"),a("strong",[t._v("审计（监控）渐进式 Web 应用程序的性能和最佳实践")]),t._v("，因此你能知道你的应用程序的表现情况。")])]),t._v(" "),a("h3",{attrs:{id:"把react替换为preact"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把react替换为preact"}},[t._v("#")]),t._v(" 把React替换为Preact")]),t._v(" "),a("p",[t._v("两种方式：\n（1）安装 preact-compat\n（2）把 React 的入口替换为 preact，并解决代码冲突")]),t._v(" "),a("h3",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[t._v("#")]),t._v(" 优缺点")]),t._v(" "),a("p",[t._v("优点：")]),t._v(" "),a("p",[t._v("1.接近于实质：Preact 实现了一个可能是最薄的一层虚拟 DOM。它将虚拟 DOM 与 DOM 本身区别开，注册真实的事件处理函数，很好地与其它库一起工作。")]),t._v(" "),a("p",[t._v("2.小体积、轻量：大多数 UI 框架相当大，在应用程序js代码中占比较高。Preact却足够小，你的业务代码，是应用程序中最大的部分。"),a("strong",[t._v("preact本身的bundle在gzip压缩后大概只有3kb，比React小很多")]),t._v("。更少js代码的加载，解析和执行，可以有效的提升应用的性能与体验。")]),t._v(" "),a("p",[t._v("3.快速、高性能：Preact 是快速的，不仅因为它的体积，"),a("strong",[t._v("一个更简单和可预测的 diff 实现")]),t._v("，使它成为最快的虚拟 DOM 框架之一。它也包含"),a("strong",[t._v("额外的性能优化特性")]),t._v("，如：批量自定义更新，可选的异步渲染，DOM 回收和通过关连状态优化的事件处理等。")]),t._v(" "),a("p",[t._v("4.易于开发和生产：在不需要牺牲生产力的前提，preact包含了有一些额外而便捷的功能以使得开发更简单高效，如：")]),t._v(" "),a("p",[t._v("props, state 和 context 可以被传递给 render()；\n"),a("strong",[t._v("可使用标准的 HTML 属性")]),t._v("，如 class 和 for；\n可使用 React 开发工具等。")]),t._v(" "),a("p",[t._v("5.与react生态兼容：可以无缝使用 React 生态系统中可用的数千个组件。增加一个简单的兼容层 preact-compat 到绑定库中，甚至可以在系统中使用非常复杂的 React 组件。")]),t._v(" "),a("p",[t._v("6.可以很容易的和"),a("a",{attrs:{href:"https://developers.google.com/web/progressive-web-apps/",target:"_blank",rel:"noopener noreferrer"}},[t._v("PWA（渐进式 Web 应用程序）"),a("OutboundLink")],1),t._v("配合工作，提供更好的用户体验：PReact官方的脚手架"),a("a",{attrs:{href:"https://github.com/developit/preact-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("preact-cli"),a("OutboundLink")],1),t._v("可以直接快速的构建一个PReact的渐进式 Web 应用程序。使得页面在加载的 "),a("a",{attrs:{href:"https://infrequently.org/2016/09/what-exactly-makes-something-a-progressive-web-app/",target:"_blank",rel:"noopener noreferrer"}},[t._v("5 秒内就进行交互"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"与react对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与react对比"}},[t._v("#")]),t._v(" 与react对比")])])}),[],!1,null,null,null);s.default=n.exports}}]);