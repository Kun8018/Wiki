(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{350:function(t,s,n){"use strict";n.r(s);var a=n(14),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("​      前端框架，快速开发页面，函数式编程，与后端api快速搭建")]),t._v(" "),n("h2",{attrs:{id:"hooks-原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hooks-原理"}},[t._v("#")]),t._v(" Hooks 原理")]),t._v(" "),n("h3",{attrs:{id:"hooks与闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hooks与闭包"}},[t._v("#")]),t._v(" hooks与闭包")]),t._v(" "),n("p",[n("strong",[t._v("闭包是一个特殊的对象")])]),t._v(" "),n("p",[n("strong",[t._v("它由两部分组成，执行上下文A以及在A中创建的函数B")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("当B执行时，如果访问了A中的变量对象，那么闭包就会产生。")])]),t._v(" "),n("p",[n("strong",[t._v("本质上，JavaScript中并没有自己的模块概念，我们只能使用函数/自执行函数来模拟模块。")])]),t._v(" "),n("p",[t._v("现在的前端工程中（ES6的模块语法规范），使用的模块，本质上都是函数或者自执行函数。")]),t._v(" "),n("p",[t._v("webpack等打包工具会帮助我们将其打包成为函数")]),t._v(" "),n("p",[t._v("在react中，一个函数组件调用另一个函数组件，就必然产生闭包")]),t._v(" "),n("p",[t._v("比如说")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// Counter.jsx\nexport default function Counter() {}\n\n\n// App.jsx\nimport Counter from './Counter';\nexport default function App() {\n // todo\n   return (\n    <Counter />\n  )\n}\n")])])]),n("p",[t._v("转换成伪代码")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CounterModule "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Counter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" AppModule "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Counter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CounterModule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Counter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("每一个JS模块都可以认为是一个独立的作用域，当代码执行时，该词法作用域创建执行上下文，如果在模块内部，创建了可供外部引用访问的函数时，就为闭包的产生提供了条件，只要该函数在外部执行访问了模块内部的其他变量，闭包就会产生。")])]),t._v(" "),n("p",[t._v("那hooks呢？")]),t._v(" "),n("p",[t._v("useState的简单代码如下")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// state.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useState")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一次调用时没有初始值，因此使用传入的初始值赋值")]),t._v("\n  state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 假设此方法能触发页面渲染")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dispatch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在其他模块中引入时")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import React from 'react';\nimport {useState} from './state';\n\nfunction Demo() {\n  // 使用数组解构的方式，定义变量\n  const [counter, setCounter] = useState(0);\n\n  return (\n    <div onClick={() => setCounter(counter + 1)}>hello world, {counter}</div>\n  )\n}\n\nexport default Demo();\n")])])]),n("p",[n("strong",[t._v("当useState在Demo中执行时，访问了state中的变量对象，那么闭包就会产生")]),t._v("。")]),t._v(" "),n("p",[t._v("根据闭包的特性，state模块中的state变量，会持久存在。因此当Demo函数再次执行时，我们也能获取到上一次Demo函数执行结束时state的值。")]),t._v(" "),n("p",[t._v("https://mp.weixin.qq.com/s/IMgHzeDXIbxMsVomnqx7AQ")]),t._v(" "),n("h3",{attrs:{id:"hook的使用规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook的使用规则"}},[t._v("#")]),t._v(" hook的使用规则")]),t._v(" "),n("p",[t._v("hook有以下使用规则：")]),t._v(" "),n("ol",[n("li",[t._v("不要在循环，条件或嵌套函数中调用 Hook")]),t._v(" "),n("li",[t._v("确保总是在你的 React 函数的最顶层调用他们。")]),t._v(" "),n("li",[t._v("顺序调用。遵守这条规则，你就能确保 Hook 在每一次渲染中都按照同样的顺序被调用。这让 React 能够在多次的 useState 和 useEffect 调用之间保持 hook 状态的正确。")])]),t._v(" "),n("p",[t._v("在单个组件中可以使用多个 State Hook 或 Effect Hook，但是React 怎么知道哪个 state 对应哪个 "),n("code",[t._v("useState")]),t._v("？答案是 React 靠的是 Hook 调用的顺序。因为我们的示例中，Hook 的调用顺序在每次渲染中都是相同的，所以它能够正常工作。只要 Hook 的调用顺序在多次渲染之间保持一致，React 就能正确地将内部 state 和对应的 Hook 进行关联。")]),t._v(" "),n("p",[t._v("如果在语句中使用hook")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 🔴 在条件语句中使用 Hook 违反第一条规则")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("persistForm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      localStorage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setItem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'formData'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在第一次渲染中 "),n("code",[t._v("name !== ''")]),t._v(" 这个条件值为 "),n("code",[t._v("true")]),t._v("，所以我们会执行这个 Hook。但是下一次渲染时我们可能清空了表单，表达式值变为 "),n("code",[t._v("false")]),t._v("。此时的渲染会跳过该 Hook，Hook 的调用顺序发生了改变：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mary'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 读取变量名为 name 的 state（参数被忽略）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// useEffect(persistForm)  // 🔴 此 Hook 被忽略！")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Poppins'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 🔴 2 （之前为 3）。读取变量名为 surname 的 state 失败")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 🔴 3 （之前为 4）。替换更新标题的 effect 失败")]),t._v("\n")])])]),n("p",[t._v("React 不知道第二个 "),n("code",[t._v("useState")]),t._v(" 的 Hook 应该返回什么。React 会以为在该组件中第二个 Hook 的调用像上次的渲染一样，对应的是 "),n("code",[t._v("persistForm")]),t._v(" 的 effect，但并非如此。从这里开始，后面的 Hook 调用都被提前执行，导致 bug 的产生。")]),t._v(" "),n("h4",{attrs:{id:"为什么不能在条件语句和循环语句中使用hook"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么不能在条件语句和循环语句中使用hook"}},[t._v("#")]),t._v(" 为什么不能在条件语句和循环语句中使用hook")]),t._v(" "),n("p",[t._v("react hook执行时以数组的结构执行，按顺序执行，如果使用条件语句就会出现缺少某一个hook，然后出现错位导致错误。")]),t._v(" "),n("p",[t._v("react hook底层是链表，每一个hook的next是指向下一个hook的，if会导致顺序不正确，从而导致报错，所以react是不允许这样使用hook的。")]),t._v(" "),n("p",[t._v("循环语句也是一样，不能绝对保证hook的执行顺序。如果非要在循环中使用，可以使用react官方的lint")]),t._v(" "),n("h3",{attrs:{id:"hook的闭包陷阱-useeffect中定时器的使用-过期闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook的闭包陷阱-useeffect中定时器的使用-过期闭包"}},[t._v("#")]),t._v(" Hook的闭包陷阱(useEffect中定时器的使用，过期闭包)")]),t._v(" "),n("p",[t._v("闭包陷阱就是在React Hook进行开发时，通过useState定义的值拿到的都不是最新的值")]),t._v(" "),n("p",[t._v("上代码")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const App = () =>{\n   const [count,setCount] = useState(0)\n   useEffect(()=>{\n     const timeId = setInterval(()=>{\n        setCount(count+1)\n     },1000)\n     return ()=>{clearInterval(timeId)}\n   },[])\n   return (\n      <span>{count}</span>\n   )\n}\n")])])]),n("p",[t._v("上面的代码中，count并不会和理想中一样每过一秒自动+1并更新DOM，而是从0变成1后，console打印出的count一直是设立的默认值0")]),t._v(" "),n("p",[t._v("因为useEffect的依赖数组是空数组，那setInterval里面的count是通过闭包取得的值，他读取到的第一次的count，并且useEffect并没有更新，因为每次都是0")]),t._v(" "),n("p",[t._v("如果去掉useEffect的依赖数组可以解决这个问题，然而会造成每次App组件渲染都会运行useEffect里面的函数，就会造成不必要的浪费和隐藏的bug")]),t._v(" "),n("h4",{attrs:{id:"产生的原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#产生的原因"}},[t._v("#")]),t._v(" 产生的原因")]),t._v(" "),n("p",[t._v("React从react16之后，更换了fiber架构，引入了hooks。Fiber架构中，一个 Fiber节点就对应的是一个组件。对于 "),n("code",[t._v("classComponent")]),t._v(" 而言，有 "),n("code",[t._v("state")]),t._v(" 是一件很正常的事情，Fiber对象上有一个 "),n("code",[t._v("memoizedState")]),t._v(" 用于存放组件的 "),n("code",[t._v("state")]),t._v("。ok，现在看 hooks 所针对的 "),n("code",[t._v("FunctionComponnet")]),t._v("。 无论开发者怎么折腾，一个对象都只能有一个 "),n("code",[t._v("state")]),t._v(" 属性或者 "),n("code",[t._v("memoizedState")]),t._v("  属性，可是，谁知道可爱的开发者们会在 "),n("code",[t._v("FunctionComponent")]),t._v(" 里写上多少个 "),n("code",[t._v("useState")]),t._v("，"),n("code",[t._v("useEffect")]),t._v(" 等等 ? 所以，react用了链表这种数据结构来存储 "),n("code",[t._v("FunctionComponent")]),t._v(" 里面的 hooks")]),t._v(" "),n("p",[t._v("比如")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function App(){\n    const [count, setCount] = useState(1)\n    const [name, setName] = useState('chechengyi')\n    useEffect(()=>{\n        \n    }, [])\n    const text = useMemo(()=>{\n        return 'ddd'\n    }, [])\n}\n")])])]),n("p",[t._v("在组件第一次渲染的时候，为每个hooks都创建了一个对象")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hook")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  memoizedState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  baseState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  baseUpdate"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Update"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  queue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UpdateQueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  next"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Hook "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("这个对象的"),n("code",[t._v("memoizedState")]),t._v("属性就是用来存储组件上一次更新后的 "),n("code",[t._v("state")]),t._v(","),n("code",[t._v("next")]),t._v("毫无疑问是指向下一个hook对象。在组件更新的过程中，hooks函数执行的顺序是不变的，就可以根据这个链表拿到当前hooks对应的"),n("code",[t._v("Hook")]),t._v("对象，函数式组件就是这样拥有了state的能力。")]),t._v(" "),n("p",[t._v("所以hooks不能写到if else语句中了。因为这样可能会导致顺序错乱，导致当前hooks拿到的不是自己对应的Hook对象。")]),t._v(" "),n("p",[t._v("回到useEffect中闭包的问题。")]),t._v(" "),n("p",[t._v("比如组件第一次渲染执行 "),n("code",[t._v("App()")]),t._v("，执行 "),n("code",[t._v("useState")]),t._v(" 设置了初始状态为1，所以此时的 "),n("code",[t._v("count")]),t._v(" 为1。然后执行了 "),n("code",[t._v("useEffect")]),t._v("，回调函数执行，设置了一个定时器每隔 1s 打印一次 "),n("code",[t._v("count")]),t._v("。")]),t._v(" "),n("p",[t._v("接着想象如果 "),n("code",[t._v("click")]),t._v(" 函数被触发了，调用 "),n("code",[t._v("setCount(2)")]),t._v(" 肯定会触发react的更新，更新到当前组件的时候也是执行 "),n("code",[t._v("App()")]),t._v("，之前说的链表已经形成了哈，此时 "),n("code",[t._v("useState")]),t._v(" 将 "),n("code",[t._v("Hook")]),t._v(" 对象 上保存的状态置为2， 那么此时 "),n("code",[t._v("count")]),t._v(" 也为2了。然后在执行 "),n("code",[t._v("useEffect")]),t._v(" 由于依赖数组是一个空的数组，所以此时回调并不会被执行。")]),t._v(" "),n("p",[t._v("ok，这次更新的过程中根本就没有涉及到这个定时器，这个定时器还在坚持的，默默的，每隔1s打印一次 "),n("code",[t._v("count")]),t._v("。 注意这里打印的 "),n("code",[t._v("count")]),t._v(" ，是组件第一次渲染的时候 "),n("code",[t._v("App()")]),t._v(" 时的 "),n("code",[t._v("count")]),t._v("， "),n("code",[t._v("count")]),t._v("的值为1，"),n("strong",[t._v("因为在定时器的回调函数里面被引用了，形成了闭包一直被保存")])]),t._v(" "),n("p",[t._v("所以useEffect或者useMemo依赖数组存在的意义，是react为了判定，在"),n("strong",[t._v("本次更新")]),t._v("中，是否需要执行其中的回调函数，这里依赖了的num2，而num2改变了。回调函数自然会执行， 这时形成的闭包引用的就是最新的num1和num2，所以，自然能够拿到新鲜的值。问题的关键，在于回调函数执行的时机，闭包就像是一个照相机，把回调函数执行的那个时机的那些值保存了下来。")]),t._v(" "),n("p",[t._v("useRef的原理")]),t._v(" "),n("p",[t._v("初始化的 "),n("code",[t._v("useRef")]),t._v(" 执行之后，返回的都是同一个对象。")]),t._v(" "),n("p",[t._v("也就是说，在组件每一次渲染的过程中。 比如 "),n("code",[t._v("ref = useRef()")]),t._v(" 所返回的都是同一个对象，每次组件更新所生成的"),n("code",[t._v("ref")]),t._v("指向的都是同一片内存空间， 那么当然能够每次都拿到最新鲜的值了。")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("    /* 将这些相关的变量写在函数外 以模拟react hooks对应的对象 */\n\tlet isC = false\n\tlet isInit = true; // 模拟组件第一次加载\n\tlet ref = {\n\t\tcurrent: null\n\t}\n\n\tfunction useEffect(cb){\n\t\t// 这里用来模拟 useEffect 依赖为 [] 的时候只执行一次。\n \t\tif (isC) return\n\t\tisC = true\t\n\t\tcb()\t\n\t}\n\n\tfunction useRef(value){\n\t\t// 组件是第一次加载的话设置值 否则直接返回对象\n\t\tif ( isInit ) {\n\t\t\tref.current = value\n\t\t\tisInit = false\n\t\t}\n\t\treturn ref\n\t}\n\n\tfunction App(){\n\t\tlet ref_ = useRef(1)\n\t\tref_.current++\n\t\tuseEffect(()=>{\n\t\t\tsetInterval(()=>{\n\t\t\t\tconsole.log(ref.current) // 3\n\t\t\t}, 2000)\n\t\t})\n\t}\n\n\t\t// 连续执行两次 第一次组件加载 第二次组件更新\n\tApp()\n\tApp()\n")])])]),n("p",[t._v("另外的解决方式是，只要我们能保证每次组件更新的时候，"),n("code",[t._v("useState")]),t._v(" 返回的是同一个对象的话？我们也能绕开闭包陷阱这个情景")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function App() {\n  // return <Demo1 />\n  return <Demo2 />\n}\n\nfunction Demo2(){\n  const [obj, setObj] = useState({name: 'chechengyi'})\n\n  useEffect(()=>{\n    setInterval(()=>{\n      console.log(obj)\n    }, 2000)\n  }, [])\n  \n  function handClick(){\n    setObj((prevState)=> {\n      var nowObj = Object.assign(prevState, {\n        name: 'baobao',\n        age: 24\n      })\n      console.log(nowObj == prevState)\n      return nowObj\n    })\n  }\n  return (\n    <div>\n      <div>\n        <span>name: {obj.name} | age: {obj.age}</span>\n        <div><button onClick={handClick}>click!</button></div>\n      </div>\n    </div>\n  )\n}\n")])])]),n("h4",{attrs:{id:"解决方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),n("p",[n("strong",[t._v("使用setstate回调")])]),t._v(" "),n("p",[t._v("把setCount(count+1)改成setCount(count=>count+1)，函数式更新")]),t._v(" "),n("p",[t._v("它允许我们指定state如何改变而不引用当前的state，因为回调函数中的参数是最新的count值")]),t._v(" "),n("p",[n("strong",[t._v("使用useReducer代替")])]),t._v(" "),n("p",[t._v("把setCount改成useReducer的dispatch，因为useReducer的dispatch的身份永远是稳定的。即使reducer函数是定义在函数内部且依赖props")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const setCountReducer = (state,action)=>{\n   switch(action.type){\n     case 'add':\n       return state+action.value \n     case 'minus':\n       return state-action.value\n     default: \n       return state\n   }\n}\n\nconst App = () =>{\n  const [count,dispatch] = useReducer(setCountReducer,0)\n  useEffect(()=>{\n    const timeId = setInterval(()=>{\n      dispatch({type:'add',value:1})\n    },1000)\n    return ()=> clearInterval(timeId)\n  },[])\n  return (\n     <span>{count}</span>\n  )\n} \n")])])]),n("p",[n("strong",[t._v("使用useRef存储变量")])]),t._v(" "),n("p",[t._v("通过useRef生成的对象默认都是{current:{}},每次组件重新渲染时，他也是同一个对象的引用，不会因为组件的重新渲染导致取得闭包的对象引用，因此它不仅可以绑定DOM，也可以绑定任意我们想绑定的数据")]),t._v(" "),n("p",[t._v("改造代码如下")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const App = () =>{\n  const [count,setCount] = useState(0)\n  const countRef = useRef()\n  countRef.current = count\n  useEffect(()=>{\n    const timeId = setInterval(()=>{\n      setCount(countRef.current+1)\n    },1000)\n    return ()=> clearInterval(timeId)\n  },[])\n  return (\n     <span>{countRef.current}</span>\n  )\n}\n")])])]),n("h4",{attrs:{id:"其他会导致闭包陷阱的情况"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他会导致闭包陷阱的情况"}},[t._v("#")]),t._v(" 其他会导致闭包陷阱的情况")]),t._v(" "),n("p",[t._v("异步函数")]),t._v(" "),n("p",[t._v("使用setInterval和setTimeout函数时，内部的变量读取的是异步函数在运行时组件处在闭包情况下的当前值，因为在异步函数内部的数据并不会在dom更新之后更新为新的值，他们的变量引用已经不是同一个了")]),t._v(" "),n("p",[t._v("上代码")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const App = ()=>{\n  const [count,setCount] = useState(0)\n  const consoleCount = ()=>{\n    const timeId = setTimeout(()=>{\n       console.log(count)\n    },2000)\n    return ()=> clearTimeout(timeId)\n  }\n  return (\n    <div>\n      <span>{count}</span>\n      <button onClick={()=>setCount(count+1)}>按我加1</button>\n      <button onClick={consoleCount}>输出count</button>\n    </div>\n  )\n}\n")])])]),n("p",[t._v("先点击三次加1按钮，把count变成3，然后点击输出按钮，此时再点击加1按钮，可以看到输出的count还是3，即输出的count是旧值")]),t._v(" "),n("p",[t._v("dom监听函数事件中的匿名函数")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const App = () =>{\n    const [count,setCount] = useState(0)\n    const consoleCount = ()=>{\n      console.log(count)\n    }\n    useEffect(()=>{\n      window.addEventListener('scroll',consoleCount)\n      return ()=>{\n         window.removeEventListener('scroll',consoleCount)\n      }\n    },[])\n  \n    return (\n       <div style={{height:'400vh'}}>\n         <span>{count}</span>\n        <button onClick={()=>setCount(count+1)}>按我加1</button>\n      <button onClick={consoleCount}>输出count</button>\n      </div>\n    )\n}\n")])])]),n("p",[t._v("可以看到不管页面怎么滚动，输出的count永远是0。因为addEventListener只在useEffect初始化的时候进行了绑定，执行函数的时候，count读取的是绑定函数时的旧值")]),t._v(" "),n("p",[t._v("使用useRef()存储实例变量也能解决这两个问题，也是react官方推荐的方法。")]),t._v(" "),n("p",[t._v("比如上面的count，我们可以添加useref与state进行对比")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import React, { useState, useRef, useEffect } from "react";\n\nexport default function App() {\n\n  const [count, setCount] = useState(0);\n  const latestCount = useRef(count);\n\n  useEffect(() => {\n    latestCount.current = count;\n  });\n\n  function handleAlertclick() {\n    setTimeout(() => {\n      alert("latestCount.current:" + latestCount.current + \'.. count: \' + count);\n    }, 2000);\n  }\n  \n  return (\n    <div>\n      <p>当前count： {count} </p>\n      <button onClick={() => setCount(count + 1)}>count + 1</button>\n      <button onClick={handleAlertclick}> 提示 </button>\n    </div>\n  )\n}\n')])])]),n("h3",{attrs:{id:"使用react-hooks如何让下面的子组件只render一次"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用react-hooks如何让下面的子组件只render一次"}},[t._v("#")]),t._v(" 使用react hooks如何让下面的子组件只render一次")]),t._v(" "),n("p",[t._v("使用useRef保存子组件状态，当父组件更新时，直接更新ref值，当子组件click时，在更新ref值后，再调用一次update触发子组件渲染")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import React,{useEffect,useMemo,useState,useRef} from 'react'\nfunction A(){\n   const [count,setCount] = useState(0);\n   \n   return (\n      <div>\n        <p>我是父组件</p>\n        <p>父组件的count是{count}</p>\n        <button>click</button>\n        <B count={count}/>\n      </div>\n   );\n}\n\nconst B = React.memo(({count:}{count:number})=>{\n  const numberRef = useRef(0);\n  const [,update] = useState({});\n  const updateNumber = () =>{\n    numberRef.current++;\n    update({});\n  };\n  \n  useMemo(()=>{\n    numberRef.current = count;\n  },[count])\n  \n  console.log('子组件Render')\n  \n  return(\n     <div>\n       <p>我是子组件</p>\n       <p>子组件的number是{numberRef.current}</p>\n       <button onClick={updateNumber}>click</button>\n     </div>\n  )\n})\n")])])]),n("h3",{attrs:{id:"hook与普通函数的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook与普通函数的区别"}},[t._v("#")]),t._v(" Hook与普通函数的区别")]),t._v(" "),n("p",[t._v("Hook本身是一个函数，它与普通函数有什么区别呢")]),t._v(" "),n("p",[t._v("1。调用时机和调用方法不同")]),t._v(" "),n("p",[t._v("在FC中使用时，自定义hook和common function都通过import作为FC的一部分，但是调用的时机不同，hook是在每次渲染的时候都会调用，而通用函数则需要手动调用")]),t._v(" "),n("p",[t._v("2.命名方式不同")]),t._v(" "),n("p",[t._v("hook一般使用useXXX命名，CF就会比较灵活")]),t._v(" "),n("p",[t._v("3.能使用的工具不同")]),t._v(" "),n("p",[t._v("自定义hook中一般会调用其他hook，比如useeffect、useState，但是普通函数只能处理没有hook的逻辑")]),t._v(" "),n("p",[t._v("4.使用场景不同")]),t._v(" "),n("p",[t._v("CF可以被使用在任何地方，但hook只能被用在FC或其他hook中")]),t._v(" "),n("h3",{attrs:{id:"更新次数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#更新次数"}},[t._v("#")]),t._v(" 更新次数")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function setStateProps () {\n  const [count, setCount] = useState(-1);\n  \n  useEffect(()=> {\n    setCount(1)\n  })\n  \n  console.log('render') \n  \n  return (\n \t\t<div>\n    \t<h3>page</h3>\n      <p>{count}</p>\n    </div>\n  )\n}\n")])])]),n("p",[t._v("上面的代码会log三次，一次在初始化，一次在setState，还有一次是比较props，相同则不再执行")]),t._v(" "),n("h2",{attrs:{id:"hook写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook写法"}},[t._v("#")]),t._v(" Hook写法")]),t._v(" "),n("h3",{attrs:{id:"hook调用异步接口写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook调用异步接口写法"}},[t._v("#")]),t._v(" Hook调用异步接口写法")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction App() {\n  const [data, setData] = useState({ products: [{\n    productId: '123',\n    productName: 'macbook'\n  }] });\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError,setIsError] = useState(false);\n  \n  useEffect(()=> {\n    const fetchData = async()=> {\n      setIsError(false);\n      setIsLoading(true);\n      \n      try {\n        const result = await axios (\n        \t'https://c.com/api/products?date=today',\n        )\n        setData(result.data);\n      }catch(e){\n        setIsError(true);\n      }\n      \n      setIsLoading(false);\n    }\n    fetchData();\n  },[]);\n  \n  return (\n  \t<div>\n      { isError && <div></div>}\n      { isLoading ? (\n      \t<div>Loading...</div>\n      ):(\n      \t<ul>\n        \t{data.products.map(i=> (\n          \t<li key=\"{i.productId}\">\n              {i.productName}\n            </li>\n          ))}\n        </ul>\n      )};\n    </div>\n  )\n}\n\nexport default App;\n")])])]),n("p",[t._v("也可以使用立即执行函数")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const MyFunctionnalComponent: React.FC = props => {\n  useEffect(()=>{\n    (async function anyNameFunction() {\n      await loadContent();\n    })();\n  },[]);\n  return <div></div>\n}\n")])])]),n("h3",{attrs:{id:"hook-ts写法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook-ts写法"}},[t._v("#")]),t._v(" hook ts写法")]),t._v(" "),n("p",[t._v("usestate如果初始值不是null/undefined，是具备类型推导能力的。根据传入的初始值推断出类型。初始值如果是null/undefined则需要传递类型定义才能进行约束。一般情况下还是推荐传入类型")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const [value, setValue] = useState(0)\n\nconst [value, setValue] = useState<number>(0)\n\nconst [string, setString] = useState<string>('')\n\nconst [array, setArray] = useState<any[]>([])\n")])])]),n("p",[t._v("useContext一般根据传入的context值就可以推断出返回类型，不需要传递类型")]),t._v(" "),n("p",[t._v("useEffect和useLayoutEffect无返回值，无需传递类型")]),t._v(" "),n("p",[t._v("useMemo无需传递类型，根据函数的返回值可以判断类型")]),t._v(" "),n("p",[t._v("useCallback无需传递类型，根据函数的返回值可以推断类型，但是注意函数的入参需要定义类型，不然就是推断为any")]),t._v(" "),n("p",[t._v("useRef需要约束ref.current的类型")]),t._v(" "),n("p",[t._v("useReducer需要对reducer函数的入参state和action进行类型约束推断类型")]),t._v(" "),n("h3",{attrs:{id:"hooks实现请求状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hooks实现请求状态"}},[t._v("#")]),t._v(" hooks实现请求状态")]),t._v(" "),n("p",[t._v("useState")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\ninterface postType {\n  userId: number\n  id: number\n  title: string\n  body: string\n}\n\nfunction DataFetchingOne() {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const [post, setPost] = useState({} as postType)\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/posts/1').then((res) => {\n      setLoading(false)\n      setPost(res.data)\n      setError('')\n    }).catch(() => {\n      setLoading(false)\n      setPost({} as postType)\n      setError('something went wrong')\n    })\n  }, [])\n\n  return (\n    <div>\n      {\n        loading\n          ? 'Loading...'\n          : post.title\n      }\n      {\n        error\n          ? error\n          : null\n      }\n    </div>\n  )\n}\n\nexport default DataFetchingOne\n")])])]),n("p",[t._v("useReducer")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import React, { useEffect, useReducer } from 'react'\nimport axios from 'axios'\n\ninterface postType {\n  userId: number\n  id: number\n  title: string\n  body: string\n}\n\ntype stateType = {\n  loading: boolean\n  error: string\n  post?: postType | {}\n}\n\ntype actionType = {\n  type: 'FETCH_SUCCESS' | 'FETCH_ERROR'\n  payload?: postType | {}\n}\n\nconst initialState = {\n  loading: true,\n  error: '',\n  post: {},\n}\n\nconst reducer = (state: stateType, action: actionType) => {\n  switch (action.type) {\n    case 'FETCH_SUCCESS':\n      return {\n        loading: false,\n        error: '',\n        post: action.payload,\n      }\n    case 'FETCH_ERROR':\n      return {\n        loading: false,\n        error: 'something went wrong',\n        post: {},\n      }\n    default:\n      return state\n  }\n}\n\nfunction DataFetchingTwo() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/posts/1').then((res) => {\n      dispatch({\n        type: 'FETCH_SUCCESS',\n        payload: res.data,\n      })\n    }).catch(() => {\n      dispatch({\n        type: 'FETCH_ERROR'\n      })\n    })\n  }, [])\n\n  return (\n    <div>\n      {\n        state.loading\n          ? 'Loading...'\n          // @ts-ignore\n          : state.post.title\n      }\n      {\n        state.error\n          ? state.error\n          : null\n      }\n    </div>\n  )\n}\n\nexport default DataFetchingTwo\n")])])]),n("h3",{attrs:{id:"使用react-hook重写react-redux"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用react-hook重写react-redux"}},[t._v("#")]),t._v(" 使用react-hook重写react-redux")]),t._v(" "),n("p",[t._v("react-redux主要提供的功能是将redux和react链接起来。 使用提供的connect方法可以使得任意一个react组件获取到全局的store上的状态。 实现方法是将store存放于由provider提供的context上，在调用connect时， 就可将组件的props替换， 让其可以访问到定制化的数据或者方法")]),t._v(" "),n("p",[t._v("重写要实现：")]),t._v(" "),n("ul",[n("li",[t._v("全局维护一个store。")]),t._v(" "),n("li",[t._v("任何组件都可以获取到store，最好props可以定制（mapStatetoProps）。")]),t._v(" "),n("li",[t._v("提供可以派发action的能力（mapDispatchtoProps）")])]),t._v(" "),n("p",[t._v("先使用useContext创建一个上下文")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useContext "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" StoreProvider "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("provider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("创建一个dispatch分发状态")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useDispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dispatch\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("然后使用useStoreState拿到状态")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useStoreState")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("mapState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useContext")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("mapStateFn")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mappedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setMappedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapStateFn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the store or mapState change, rerun mapState    ")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prevStore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setPrevStore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prevMapState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setPrevMapState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" mapState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevStore "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" store "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" prevMapState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" mapState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrevStore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrevMapState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" mapState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMappedState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapStateFn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" lastRenderedMappedState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set the last mapped state after rendering.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       lastRenderedMappedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mappedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Run the mapState callback and if the result has changed, make the      ")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// component re-render with the new state.         ")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("checkForUpdates")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" newMappedState "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapStateFn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shallowEqual")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newMappedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lastRenderedMappedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setMappedState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newMappedState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Pull data from the store on first render.")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkForUpdates")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        \n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Subscribe to the store to be notified of subsequent changes.")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" unsubscribe "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("subscribe")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("checkForUpdates"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The return value of useEffect will be called when unmounting, so           ")]),t._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we use it to unsubscribe from the store.")]),t._v("\n\n       "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" unsubscribe"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mapState"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mappedState\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当store变化过后，并没有和视图关联起来。另一个问题是没有关注mapState变化的情况。 我们可以利用useEffect这个内置hook，在组件mount时完成在store上的订阅，并在unmont的时候取消订阅。 mapState的变更可以使用useState来监听， 每次有变更时就执行向对应的setter方法")]),t._v(" "),n("h2",{attrs:{id:"hook包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hook包"}},[t._v("#")]),t._v(" Hook包")]),t._v(" "),n("h3",{attrs:{id:"ahooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ahooks"}},[t._v("#")]),t._v(" ahooks")]),t._v(" "),n("p",[t._v("安装")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--save")]),t._v(" ahooks\n")])])]),n("p",[t._v("ahooks 默认支持基于 ES module 的 tree shaking，对于 js 部分，直接引入 "),n("code",[t._v("import { useToggle } from 'ahooks'")]),t._v(" 也会有按需加载的效果。")]),t._v(" "),n("p",[t._v("常用hook")]),t._v(" "),n("h4",{attrs:{id:"增强版state"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#增强版state"}},[t._v("#")]),t._v(" 增强版state")]),t._v(" "),n("p",[n("code",[t._v("useRequest")]),t._v(" 是一个强大的异步数据管理的 Hooks，React 项目中的网络请求场景使用 "),n("code",[t._v("useRequest")]),t._v(" 就够了。")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const { data, error, loading } = useRequest(getUsername, {\n  manaul: true;\n});\n")])])]),n("p",[n("code",[t._v("useRequest")]),t._v(" 提供了以下几个生命周期配置项，供你在异步函数的不同阶段做一些处理。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("onBefore")]),t._v("：请求之前触发")]),t._v(" "),n("li",[n("code",[t._v("onSuccess")]),t._v("：请求成功触发")]),t._v(" "),n("li",[n("code",[t._v("onError")]),t._v("：请求失败触发")]),t._v(" "),n("li",[n("code",[t._v("onFinally")]),t._v("：请求完成触发")])]),t._v(" "),n("p",[t._v("通过设置 "),n("code",[t._v("options.pollingInterval")]),t._v("，进入轮询模式，"),n("code",[t._v("useRequest")]),t._v(" 会定时触发 service 执行。")]),t._v(" "),n("p",[t._v("通过设置 "),n("code",[t._v("options.debounceWait")]),t._v("，进入防抖模式，此时如果频繁触发 "),n("code",[t._v("run")]),t._v(" 或者 "),n("code",[t._v("runAsync")]),t._v("，则会以防抖策略进行请求。")]),t._v(" "),n("p",[t._v("通过设置 "),n("code",[t._v("options.throttleWait")]),t._v("，进入节流模式，此时如果频繁触发 "),n("code",[t._v("run")]),t._v(" 或者 "),n("code",[t._v("runAsync")]),t._v("，则会以节流策略进行请求。")]),t._v(" "),n("p",[t._v("如果设置了 "),n("code",[t._v("options.cacheKey")]),t._v("，"),n("code",[t._v("useRequest")]),t._v(" 会将当前请求成功的数据缓存起来。下次组件初始化时，如果有缓存数据，我们会优先返回缓存数据，然后在背后发送新请求，也就是 SWR 的能力。")]),t._v(" "),n("p",[t._v("你可以通过 "),n("code",[t._v("options.staleTime")]),t._v(" 设置数据保持新鲜时间，在该时间内，我们认为数据是新鲜的，不会重新发起请求。")]),t._v(" "),n("p",[t._v("你也可以通过 "),n("code",[t._v("options.cacheTime")]),t._v(" 设置数据缓存时间，超过该时间，我们会清空该条缓存数据。")]),t._v(" "),n("p",[t._v("通过设置 "),n("code",[t._v("options.retryCount")]),t._v("，指定错误重试次数，则 useRequest 在失败后会进行重试。")]),t._v(" "),n("p",[t._v("useTitle")]),t._v(" "),n("p",[t._v("改变页面在tab页中的标题")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import React, { useState } from "react";\nimport { useTitle } from "react-use";\n\nconst Demo = () => {\n  useTitle("Hello world!", {\n    restoreOnUnmount: true,\n  });\n\n  return <h1>document.title has changed</h1>;\n};\n\nexport default () => {\n  const [showDemo, setShowDemo] = useState(true);\n\n  return (\n    <div>\n      <button onClick={() => setShowDemo(!showDemo)}>\n        {showDemo ? "unmount" : "mount"}\n      </button>\n      {showDemo ? <Demo /> : ""}\n    </div>\n  );\n};\n')])])]),n("p",[t._v("源码")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/useTitle.ts")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* eslint-disable */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useRef"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" useEffect "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UseTitleOptions")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  restoreOnUnmount"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEFAULT_USE_TITLE_OPTIONS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UseTitleOptions "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  restoreOnUnmount"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useTitle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  options"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" UseTitleOptions "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEFAULT_USE_TITLE_OPTIONS")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prevTitleRef "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useRef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" title"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restoreOnUnmount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prevTitleRef"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" document "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("useTitle")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_title"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("useBoolean")]),t._v(" "),n("p",[t._v("useToggle")]),t._v(" "),n("p",[t._v("用于在两个状态值间切换的 Hook。")]),t._v(" "),n("p",[t._v("useUrlState")]),t._v(" "),n("p",[t._v("通过 url query 来管理 state 的 Hook。")]),t._v(" "),n("p",[t._v("该 Hooks 基于 "),n("code",[t._v("react-router")]),t._v(" 的 useLocation & useHistory & useNavigate 进行 query 管理，所以使用该 Hooks 之前，你需要保证")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("你项目正在使用 "),n("code",[t._v("react-router")]),t._v(" 5.x 或 6.x 版本来管理路由")])]),t._v(" "),n("li",[n("p",[t._v("独立安装了 @ahooksjs/use-url-state")])])]),t._v(" "),n("p",[t._v("该hooks可以改变当前url中的query")]),t._v(" "),n("h4",{attrs:{id:"存储相关的hooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#存储相关的hooks"}},[t._v("#")]),t._v(" 存储相关的hooks")]),t._v(" "),n("p",[t._v("useCookieState")]),t._v(" "),n("p",[t._v("将状态存储在 Cookie 中的 Hook 。")]),t._v(" "),n("p",[t._v("useLocalStorageState")]),t._v(" "),n("p",[t._v("将状态存储在 localStorage 中的 Hook 。")]),t._v(" "),n("p",[t._v("useSessionStorageState")]),t._v(" "),n("p",[t._v("将状态存储在 sessionStorage中的 Hook 。")]),t._v(" "),n("h4",{attrs:{id:"性能优化hooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#性能优化hooks"}},[t._v("#")]),t._v(" 性能优化hooks")]),t._v(" "),n("p",[n("code",[t._v("useCreation")]),t._v(" 是 "),n("code",[t._v("useMemo")]),t._v(" 或 "),n("code",[t._v("useRef")]),t._v(" 的替代品。")]),t._v(" "),n("p",[t._v("因为 "),n("code",[t._v("useMemo")]),t._v(" 不能保证被 memo 的值一定不会被重计算，而 "),n("code",[t._v("useCreation")]),t._v(" 可以保证这一点。")]),t._v(" "),n("p",[t._v("而相比于 "),n("code",[t._v("useRef")]),t._v("，你可以使用 "),n("code",[t._v("useCreation")]),t._v(" 创建一些常量，这些常量和 "),n("code",[t._v("useRef")]),t._v(" 创建出来的 ref 有很多使用场景上的相似，但对于复杂常量的创建，"),n("code",[t._v("useRef")]),t._v(" 却容易出现潜在的性能隐患。")]),t._v(" "),n("p",[t._v("useMemoizedFn")]),t._v(" "),n("p",[t._v("持久化 function 的 Hook，理论上，可以使用 useMemoizedFn 完全代替 useCallback。")]),t._v(" "),n("p",[t._v("在某些场景中，我们需要使用 useCallback 来记住一个函数，但是在第二个参数 deps 变化时，会重新生成函数，导致函数地址变化。")]),t._v(" "),n("p",[t._v("使用 useMemoizedFn，可以省略第二个参数 deps，同时保证函数地址永远不会变化。")]),t._v(" "),n("p",[t._v("useThrottleFn")]),t._v(" "),n("p",[t._v("处理函数节流的hooks")]),t._v(" "),n("p",[t._v("useThrottleEffect")]),t._v(" "),n("p",[t._v("为 "),n("code",[t._v("useEffect")]),t._v(" 增加节流的能力。")]),t._v(" "),n("p",[t._v("useDebounceFn")]),t._v(" "),n("p",[t._v("用来处理防抖函数的 Hook。")]),t._v(" "),n("p",[n("strong",[t._v("防抖实现")]),t._v("：useDebounceFn的内部是使用useMemo + lodash的debounce方法")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" debounced "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useMemo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Parameters"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ReturnType"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fnRef"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("current")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        wait"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("useDebounceEffect")]),t._v(" "),n("p",[t._v("为 "),n("code",[t._v("useEffect")]),t._v(" 增加防抖的能力。")]),t._v(" "),n("p",[n("strong",[t._v("实现")]),t._v("：useState + useDebounce")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setFlag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" run "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useDebounceFn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setFlag")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useUpdateEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("effect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"dom相关-功能型hook"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dom相关-功能型hook"}},[t._v("#")]),t._v(" Dom相关 功能型Hook")]),t._v(" "),n("p",[t._v("useKeyPress")]),t._v(" "),n("p",[t._v("监听键盘按键，支持组合键，支持按键别名。")]),t._v(" "),n("p",[t._v("useLongPress")]),t._v(" "),n("p",[t._v("监听目标元素的长按事件。")]),t._v(" "),n("p",[t._v("useMouse")]),t._v(" "),n("p",[t._v("监听鼠标位置")]),t._v(" "),n("p",[t._v("useResponsive")]),t._v(" "),n("p",[t._v("获取屏幕宽度响应式信息。")]),t._v(" "),n("p",[t._v("useSize")]),t._v(" "),n("p",[t._v("监听 DOM 节点尺寸变化的 Hook。")]),t._v(" "),n("p",[t._v("useFavicon")]),t._v(" "),n("p",[t._v("设置页面的 favicon。")]),t._v(" "),n("p",[t._v("useInViewport")]),t._v(" "),n("p",[t._v("观察元素是否在可见区域，以及元素可见比例。")]),t._v(" "),n("p",[t._v("useFocusWithin")]),t._v(" "),n("p",[t._v("监听当前焦点是否在某个区域之内，同 css 属性 focus-within")]),t._v(" "),n("p",[t._v("useScroll")]),t._v(" "),n("p",[t._v("监听元素的滚动位置。")]),t._v(" "),n("p",[t._v("useFullscreen")]),t._v(" "),n("p",[t._v("管理 DOM 全屏的 Hook。")]),t._v(" "),n("p",[t._v("useLockFn")]),t._v(" "),n("p",[t._v("给异步函数加并发锁。如果当前异步函数正在执行中没有返回，那么不能执行，上一次异步函数有返回后才能再次执行")]),t._v(" "),n("h4",{attrs:{id:"开发者hook"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开发者hook"}},[t._v("#")]),t._v(" 开发者hook")]),t._v(" "),n("p",[t._v("useWhyDidYouUpdate")]),t._v(" "),n("p",[t._v("帮助开发者排查是那个属性改变导致了组件的 rerender。")]),t._v(" "),n("p",[t._v("useTrackedEffect")]),t._v(" "),n("p",[t._v("追踪是哪个依赖变化触发了 "),n("code",[t._v("useEffect")]),t._v(" 的执行。")]),t._v(" "),n("h3",{attrs:{id:"react-use"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-use"}},[t._v("#")]),t._v(" react-use")]),t._v(" "),n("h3",{attrs:{id:"react-hooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-hooks"}},[t._v("#")]),t._v(" react-hooks")]),t._v(" "),n("p",[t._v("https://github.com/ecomfe/react-hooks")]),t._v(" "),n("h3",{attrs:{id:"usehooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#usehooks"}},[t._v("#")]),t._v(" usehooks")]),t._v(" "),n("p",[t._v("https://github.com/uidotdev/usehooks")]),t._v(" "),n("p",[t._v("https://usehooks-ts.com/react-hook/use-window-size")]),t._v(" "),n("h3",{attrs:{id:"react-router"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-router"}},[t._v("#")]),t._v(" react-router")]),t._v(" "),n("p",[t._v("useHistory useLocation useParams useRouteMatch")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from "react-router-dom"\n\nfunction HomeButton() {\n  let history = useHistory();\n  function haddleClick() {\n    history.push("/home");\n  }\n  \n  function usePageViews() {\n      let location = useLocation();\n    \tReact.useEffect(()=>{\n        ga.send(["pageview", location.pathname]);\n      },[location])\n  }\n  \n  let { slug } = useParams();\n  return <div>Now showing post {slug}</div>\n  \n  let match = useRouteMatch("/blog/:slug")\n  const match = useRouteMatch({\n    path: "/BLOG/:slug",\n    strict: true,\n    sensitive: true\n  })\n}\n')])])]),n("p",[t._v("useRoutes")]),t._v(" "),n("div",{staticClass:"language-react extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import * as React from "react";\nimport { useRoutes } from "react-router-dom";\n\nfunction App() {\n  let element = useRoutes([\n    {\n      path: "/",\n      element: <Dashboard />,\n      children: [\n        {\n          path: "messages",\n          element: <DashboardMessages />,\n        },\n        { path: "tasks", element: <DashboardTasks /> },\n      ],\n    },\n    { path: "team", element: <AboutPage /> },\n  ]);\n\n  return element;\n}\n')])])])])}),[],!1,null,null,null);s.default=e.exports}}]);