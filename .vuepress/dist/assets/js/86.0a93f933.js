(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{367:function(s,t,a){"use strict";a.r(t);var e=a(14),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("Git是最常用的版本管理工具，利于协同开发")]),s._v(" "),a("p",[s._v("​        原来的标题是Github使用技巧，但是后来开发之后发现github和gitlab都是基于Git，因此改为Git")]),s._v(" "),a("h2",{attrs:{id:"多人协同开发流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多人协同开发流程"}},[s._v("#")]),s._v(" 多人协同开发流程")]),s._v(" "),a("p",[s._v("​        一般在开发产品适合，通常挑选一个分支作为可以上线的正式版本分支，比如master或者release，develop是用来开发的，可能带有bug。 当很多人参与同一个项目的时候，如果给每个人都有Commit到master和release分支的权c限是非常不合理的。这个时候，就可以使用Fork + PR/MR的方式来实现多人协作开发。 每个开发者先Fork一份代码到自己的账号下，功能完成后发PR给项目管理者，项目管理者Code Review后确认无误后即可进行Merge操作，这样协作开发效率高，问题少。")]),s._v(" "),a("h2",{attrs:{id:"安装git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装git"}},[s._v("#")]),s._v(" 安装Git")]),s._v(" "),a("p",[s._v("windows端")]),s._v(" "),a("p",[s._v("下载git工具，"),a("code",[s._v("[这里是链接](https://git-scm.com/downloads)")]),s._v("，选择适合自己的版本进行安装。")]),s._v(" "),a("p",[s._v("mac端")]),s._v(" "),a("p",[s._v("苹果电脑自带Git。")]),s._v(" "),a("p",[s._v("linux")]),s._v(" "),a("p",[s._v("以centos为例")]),s._v(" "),a("p",[s._v("下载git源代码压缩文件")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.23.0.tar.xz\n")])])]),a("p",[s._v("解压缩和解归档")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("xz "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" git-2.23.0.tar.xz\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-xvf")]),s._v(" git-2.23.0.tar\n")])])]),a("p",[s._v("安装底层依赖库")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-y")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" libcurl-devel\n")])])]),a("p",[s._v("构建和安装")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])])]),a("h2",{attrs:{id:"git本地设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git本地设置"}},[s._v("#")]),s._v(" Git本地设置")]),s._v(" "),a("p",[s._v("Windows新安装Git需要设置github账户。Mac默认没有修改的情况mac使用icloud账户登录系统，提交时会提示"),a("code",[s._v("Your name and email address were configured automatically based on your username and hostname. Please check that they are accurate")]),s._v(".也需要将提交用户改为github账户。")]),s._v(" "),a("p",[s._v("windows在cmd窗口输入命令，mac在终端输入。")]),s._v(" "),a("p",[s._v("方式一：直接设置自己的用户名和邮箱")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"coliyin@163.com"')]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"coliyin@163.com"')]),s._v("\n")])])]),a("p",[s._v("设置SSHkey")]),s._v(" "),a("p",[s._v("方式二：修改配置文件")]),s._v(" "),a("p",[s._v("在终端输入")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--edit")]),s._v("\n")])])]),a("p",[s._v("然后会进入vi修改配置文件，将name=和email=之后的内容修改为自己的用户名和邮箱。记得将首列的#号去掉。")]),s._v(" "),a("p",[s._v("修改完后渐入命令使配置生效")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--amend")]),s._v(" --reset-author\n")])])]),a("p",[s._v("也可以按照windows设置，最后使其")]),s._v(" "),a("p",[a("strong",[s._v("通常来说，本地的Git只能建议只有一个版本，否则提交代码或者pr时会显示多个账号，会造成混乱")])]),s._v(" "),a("h3",{attrs:{id:"邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#邮箱"}},[s._v("#")]),s._v(" 邮箱")]),s._v(" "),a("p",[s._v("邮箱是GitHub验证账户的重要标识，包括SSH key的生成。所以一般入职公司之后，如果使用GitHub都会要求改成公司的，所以更换邮箱之后都要重新生成一次public key,直接使用原来的会报错，像这样子")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("fatal: unable to access "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://github.com/Kun8018/Kun8018.github.io.git/'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" LibreSSL SSL_connect: SSL_ERROR_SYSCALL "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" connection to github.com:443 \n")])])]),a("p",[s._v("在本地环境执行")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("ssh-keygen "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-t")]),s._v(" rsa "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-C")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your-github@email.com"')]),s._v("\n")])])]),a("p",[s._v("然后找到对应的ssh key")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" .ssh\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" ~/.ssh\n")])])]),a("p",[s._v("查看key中的内容")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" id_rsa.pub\n")])])]),a("p",[s._v("复制输出并且在GitHub常见ssh key")]),s._v(" "),a("p",[s._v("在GitHub。account -> settings -> create a SSH and GPG keys，把本地的key粘贴进去就好")]),s._v(" "),a("p",[s._v("现在已经可以运行了，可以在本地验证一下")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-vT")]),s._v(" git@github.com\n")])])]),a("p",[s._v("输出是这样就代表可以")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("debug1: channel "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(": free: client-session, nchannels "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nTransferred: sent "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3848")]),s._v(", received "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2040")]),s._v(" bytes, "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.2")]),s._v(" seconds\nBytes per second: sent "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16032.4")]),s._v(", received "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8499.5")]),s._v("\ndebug1: Exit status "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])])]),a("h2",{attrs:{id:"从远程仓库拉取项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从远程仓库拉取项目"}},[s._v("#")]),s._v(" 从远程仓库拉取项目")]),s._v(" "),a("p",[s._v("GitHub可以使用http和ssh两种方式获取代码")]),s._v(" "),a("p",[s._v("https比较简单，但是每次fetch和push都需要账号密码")]),s._v(" "),a("p",[s._v("sshfetch和push不需要在输入账号密码：")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("ssh-keygen -t rsa -b 4096 -C "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1027690173@qq.com"')]),s._v("\n")])])]),a("p",[s._v("会请求你输入文件名和设置密码，可以不设置直接enter跳过，文件名为默认id_rsa，密码默认为空")]),s._v(" "),a("p",[s._v("在.ssh下查看文件，有id_rsa或id_dsa命名的文件即是，后缀为.pub的是公钥，没有的是私钥")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("cd ~/.ssh\nls\n")])])]),a("p",[s._v("运行ssh-agent")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("eval "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(ssh-agent -s)"')]),s._v("\n")])])]),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("Host * IdentityFile ~/.ssh/id_rsa\n")])])]),a("p",[s._v("添加ssh key到github或gitlab")]),s._v(" "),a("p",[s._v("复制公钥")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("pbcopy < ~/.ssh/id_rsa.pub\n")])])]),a("p",[s._v("粘贴到github ssh-key或者gitlab")]),s._v(" "),a("p",[s._v("首次下载项目")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git clone \n")])])]),a("p",[s._v("获取远程修改到本地")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git  git@github.com:anyangxaut/LearnGit.git\n")])])]),a("h2",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[s._v("#")]),s._v(" 基本操作")]),s._v(" "),a("p",[s._v("将文件夹变成git仓库")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init \n")])])]),a("p",[s._v("当你完成了上述操作后，本地目录就变成了工作区（正在操作的工作目录）、仓库和工作区和本地仓库之间的暂存区（也称为缓存区）。")]),s._v(" "),a("p",[s._v("通过"),a("code",[s._v("git add")]),s._v("可以将指定的文件或所有文件添加到暂存区。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("如果不希望将文件添加到暂存区，可以按照提示，使用"),a("code",[s._v("git rm --cached <file>")]),s._v("命令将文件从暂存区放回到工作区。")]),s._v(" "),a("p",[s._v("如果这个时候对工作区的文件又进行了修改使得工作区和暂存区的内容并不相同了，再次执行"),a("code",[s._v("git status")]),s._v("可以看到哪个或哪些文件被修改了，如果希望用暂存区的内容恢复工作区，可以使用下面的命令。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" restore "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" restore "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])])]),a("p",[s._v("通过下面的命令可以将暂存区的内容纳入本地仓库，")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'本次提交的说明'")]),s._v("\n")])])]),a("p",[s._v("提交commit可以直接关联issue，在issue下面可以直接显示关联的commit代码")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'说明 #issue链接'")]),s._v("\n")])])]),a("p",[s._v("在pr的comment中添加issue的链接可以关联pr与issue，当pr被合并时issue会被自动关闭")]),s._v(" "),a("p",[s._v("如果提交之后才发现之前的修改少了一些内容，回到过去，修改上一次提交的那个文件。如此一来，你的commit记录只会有一条。对于一些有代码洁癖并且看中git commit记录的程序员，这点很重要")]),s._v(" "),a("p",[s._v("执行"),a("code",[s._v("git commit --amend --no-edit")]),s._v("之后，hash值由"),a("code",[s._v("c56f680")]),s._v("变成了"),a("code",[s._v("eb6c8cb")]),s._v("，但是message内容并没有发生变化，并且最重要的是只有一条commit记录。")]),s._v(" "),a("p",[s._v("如果要修改上一条的message，那么去掉"),a("code",[s._v("--no-edit")]),s._v("选项即可，"),a("code",[s._v('git commit --amend -m "xxxx"')]),s._v("。同理，commit记录同样只会有一条。")]),s._v(" "),a("p",[s._v("可以通过"),a("code",[s._v("git log")]),s._v("查看每次提交对应的日志。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--graph")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--oneline")]),s._v(" --abbrev-commit\n")])])]),a("p",[s._v("gitlog不能显示已经删除的commit记录，需要查看时使用git reflog命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog\n")])])]),a("p",[s._v("reflog可以显示所有分支的操作记录，包括已经删除的commit，要回复已经删除的commit使用cherry-pick")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherru-pick 4c97ff3\n")])])]),a("h2",{attrs:{id:"远程操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程操作"}},[s._v("#")]),s._v(" 远程操作")]),s._v(" "),a("p",[s._v("添加远程仓库（Git服务器）")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin git@gitee.com:jackfrued/python.git\n")])])]),a("p",[s._v("从远程仓库取回代码。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master\n")])])]),a("p",[s._v("将本地代码（工作成果）推送到远程仓库。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" origin master:master\n")])])]),a("p",[s._v("删除远程分支")]),s._v(" "),a("p",[s._v("执行此命令时慎重操作")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-r")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" origin/develop\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin :develop\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--delete")]),s._v(" develop\n")])])]),a("h2",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[s._v("#")]),s._v(" 分支")]),s._v(" "),a("p",[s._v("创建分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("切换分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("分支合并")]),s._v(" "),a("p",[s._v("在"),a("code",[s._v("dev")]),s._v("分支上完成开发任务之后，如果希望将"),a("code",[s._v("dev")]),s._v("分支上的成果合并到"),a("code",[s._v("master")]),s._v("，可以先切回到"),a("code",[s._v("master")]),s._v("分支然后使用"),a("code",[s._v("git merge")]),s._v("来做分支合并，合并的结果如下图右上方所示。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge --no-ff dev\n")])])]),a("p",[s._v("在合并分支时，没有冲突的部分Git会做自动合并。如果发生了冲突（如"),a("code",[s._v("dev")]),s._v("和"),a("code",[s._v("master")]),s._v("分支上都修改了同一个文件），会看到"),a("code",[s._v("CONFLICT (content): Merge conflict in <filename>. Automatic merge failed; fix conflicts and then commit the result")]),s._v("（自动合并失败，修复冲突之后再次提交）的提示，这个时候我们可以用"),a("code",[s._v("git diff")]),s._v("来查看产生冲突的内容。解决冲突通常需要当事人当面沟通之后才能决定保留谁的版本，冲突解决后需要重新提交代码。")]),s._v(" "),a("p",[s._v("删除分支")]),s._v(" "),a("p",[s._v("如果分支上的工作成果还没有合并，那么在删除分支时会看到"),a("code",[s._v("error: The branch '<branch-name>' is not fully merged.")]),s._v("这样的错误提示。如果希望强行删除分支，可以使用"),a("code",[s._v("-D")]),s._v("参数。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nerror: The branch "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<branch-name>'")]),s._v(" is not fully merged.\nIf you are sure you want to delete it, run "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch -D <branch-name>'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("分支变基")]),s._v(" "),a("p",[s._v("分支合并操作可以将多个分支上的工作成果最终合并到一个分支上，但是再多次合并操作之后，分支可能会变得非常的混乱和复杂，为了解决这个问题，可以使用"),a("code",[s._v("git rebase")]),s._v("操作来实现分支变基。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge dev\n")])])]),a("p",[s._v("关联远程分支")]),s._v(" "),a("p",[s._v("如果当前所在的分支还没有关联到远程分支，可以使用下面的命令为它们建立关联。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --set-upstream-to origin/develop\n")])])]),a("p",[s._v("也可以指定别的分支关联到远程分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --set-upstream-to origin/develop "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("也创建分支时使用了"),a("code",[s._v("--track")]),s._v("参数，直接指定与本地分支关联的远程分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--track")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" origin/develop\n")])])]),a("p",[s._v("解除关联远程分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--track")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" origin/develop\n")])])]),a("h3",{attrs:{id:"rebase、squash与merge的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rebase、squash与merge的区别"}},[s._v("#")]),s._v(" rebase、squash与merge的区别")]),s._v(" "),a("p",[s._v("rebase可以尽可能保持master分支干净，并且易于识别author")]),s._v(" "),a("p",[s._v("squash也可以保持master分支干净，但是master中author都是maintainer，而不是原owner")]),s._v(" "),a("p",[s._v("merge不能保持master分支干净，但是保持了所有的commit history，大多数情况下都是不好的，个别情况好")]),s._v(" "),a("h2",{attrs:{id:"子模块submodule"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子模块submodule"}},[s._v("#")]),s._v(" 子模块submodule")]),s._v(" "),a("p",[s._v("当你在一个git项目上工作时，你需要在其中使用另一个Git项目。也许它是一个第三方开发的库或者是你独立开发合并在多个父项目中使用。")]),s._v(" "),a("p",[s._v("在git中可以用子模块submodule来管理这些项目，submodule允许你将一个git仓库当作另外一个git仓库的子目录，这允许你克隆另外一个仓库到你的项目中并且保持你的提交相对独立")]),s._v(" "),a("p",[s._v("克隆含有子模块的项目")]),s._v(" "),a("p",[s._v("克隆含有子模块的项目可以先克隆父项目，再更新子模块，另一种是直接递归克隆整个项目")]),s._v(" "),a("p",[s._v("先克隆父项目，再更新子模块")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("./.git assets\n")])])]),a("p",[s._v("此时子模块子模块还未初始化")]),s._v(" "),a("p",[s._v("初始化子模块")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule init\n")])])]),a("p",[s._v("更新子模块")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule update\n")])])]),a("p",[s._v("直接递归克隆整个项目")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("./.git assets "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--recursive")]),s._v("\n")])])]),a("p",[s._v("添加子模块")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" https://"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("./.git assets\n")])])]),a("p",[s._v("查看子模块")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule\n")])])]),a("p",[s._v("更新子模块")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 更新项目内子模块到最新版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule update\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 更新子模块为远程项目的最新版本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule update "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--remote")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 更新所有子模块")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" submodule foreach "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n")])])]),a("p",[s._v("修改子模块")]),s._v(" "),a("p",[s._v("在子模块中修改文件后，直接提交到远程项目分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" ci "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin HEAD:master\n")])])]),a("p",[s._v("删除子模块")]),s._v(" "),a("p",[s._v("删除子模块比较麻烦，需要手动删除相关的文件，否则在添加子模块时有可能出现错误。")]),s._v(" "),a("p",[s._v("首先删除子模块文件夹")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--cached")]),s._v(" assets\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" assets\n")])])]),a("p",[s._v("删除相关子模块信息")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("submodule "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\tpath "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" assets\n\turl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://github.com/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/.git\n")])])]),a("p",[s._v("删除相关子模块信息")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("submodule "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"assets"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\turl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" https://github.com/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/.git\n")])])]),a("p",[s._v("删除相关子模块文件")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" ./git/modules/assets\n")])])]),a("h2",{attrs:{id:"子仓库subtree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子仓库subtree"}},[s._v("#")]),s._v(" 子仓库subtree")]),s._v(" "),a("p",[s._v("与submodule的异同")]),s._v(" "),a("p",[s._v("git submodule:")]),s._v(" "),a("p",[s._v("允许其他仓库指定以一个commit嵌入仓库的子目录")]),s._v(" "),a("p",[s._v("仓库clone下来要init和update")]),s._v(" "),a("p",[s._v("会产生文件记录和submodule版本信息")]),s._v(" "),a("p",[s._v("git submodule删除起来比较费劲")]),s._v(" "),a("p",[s._v("git subtree：")]),s._v(" "),a("p",[s._v("避免以上问题")]),s._v(" "),a("p",[s._v("管理和更新流程比较方便")]),s._v(" "),a("p",[s._v("git subtree合并子仓库到项目中的子目录，不用像submodule一样每次子目录修改之后都要init和update，万一每次没update就直接add，将")]),s._v(" "),a("p",[s._v("git 1.5之后建议使用git submodule")]),s._v(" "),a("p",[s._v("使用方法")]),s._v(" "),a("p",[s._v("如果p1项目和p2项目共用S项目")]),s._v(" "),a("p",[s._v("添加subtree")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--prefix")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--squash")]),s._v("\n")])])]),a("p",[s._v("修改代码，可以改subtree里面的代码，添加相关commit")]),s._v(" "),a("p",[s._v("pull&push")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree pull "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--prefix")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--squash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--prefix")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--squash")]),s._v("\n")])])]),a("p",[s._v("拆分已有项目,比如P项目拆分出s项目")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-P")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("S project path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-b")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tmp branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("git会遍历所有commit，分离与S项目有关的commit，并存入临时分支branch中")]),s._v(" "),a("p",[s._v("创建子repo")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" s new path\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("S project path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tmp branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("S github"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" master\n")])])]),a("p",[s._v("清理原项目中的子项目数据")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" P project\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v(" \n")])])]),a("p",[s._v("在新项目中添加subtree")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" subtree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--prefix")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("s project url"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--squash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master\n")])])]),a("h2",{attrs:{id:"其他操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他操作"}},[s._v("#")]),s._v(" 其他操作")]),s._v(" "),a("p",[a("code",[s._v("git fetch")]),s._v("：下载远程仓库的所有变动，可以将远程仓库下载到一个临时分支，然后再根据需要进行合并操作，"),a("code",[s._v("git fetch")]),s._v("命令和"),a("code",[s._v("git merge")]),s._v("命令可以看作是之前讲的"),a("code",[s._v("git pull")]),s._v("命令的分解动作。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin master:temp\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge temp\n")])])]),a("p",[a("code",[s._v("git push -f")]),s._v("：强制提交，完全以自己的提交为准，之前其他人的提交都会被覆盖，适用于pr被block之后重新提交，提交后不需要重新提pr.")]),s._v(" "),a("p",[a("code",[s._v("git rebase dev")]),s._v("：解决合并冲突。rebase之后如果有冲突，会进入临时变基分支，手动消除冲突之后在rebase")]),s._v(" "),a("p",[a("code",[s._v("git checkou branch")]),s._v(": 切换分支")]),s._v(" "),a("p",[a("code",[s._v("git checkou -b｜B branch")]),s._v(": 创建新分支并切换到该分支")]),s._v(" "),a("p",[a("code",[s._v("git checkout -- a.txt")]),s._v(" ： 将文件迁出修改到上一次提交的内容")]),s._v(" "),a("p",[a("code",[s._v("git checkout commit_id -- a.txt")]),s._v(" ： 将文件迁出修改到指定的提交历史中某次提交的内容")]),s._v(" "),a("p",[a("code",[s._v("git checkout branch -- a.txt")]),s._v("：将文件迁出修改到指定分支的该文件的内容")]),s._v(" "),a("p",[a("code",[s._v("git checkout -- *.txt")]),s._v("将根目录下所有指定后缀的文件都迁出")]),s._v(" "),a("p",[a("code",[s._v("git checkout -- *.txt")]),s._v("将根目录下所有指定目录的文件都迁出")]),s._v(" "),a("p",[a("code",[s._v("git diff")]),s._v("：常用于比较工作区和仓库、暂存区与仓库、两个分支之间有什么差别。")]),s._v(" "),a("p",[a("code",[s._v("git diff --cached")]),s._v("：查看有add但没有commit的改动")]),s._v(" "),a("p",[a("code",[s._v("git diff HEAD")]),s._v(":是上面两条命令的合并")]),s._v(" "),a("p",[a("code",[s._v("git stash")]),s._v("：将当前工作区和暂存区发生的变动放到一个临时的区域，让工作区变干净。这个命令适用于手头工作还没有提交，但是突然有一个更为紧急的任务（如线上bug需要修正）需要去处理的场景。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 保存当前的工作进度，会把暂存区和工作区的改动保存起来，使用git stash sava ‘message’ 添加一些注释")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash list "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 显示保存进度的列表，git stash可以执行多次")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 通过git stash pop命令恢复进度后，会删除当前进度。")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 恢复最新的进度到工作区，git默认会把工作区和暂存区的改动都恢复到工作区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 恢复最新的进度到工作区和暂存区")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash pop stash@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 恢复指定的进度到工作区，stash_id为通过git stash list命令得到的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash apply "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##恢复最新的进度到工作区，除了不删除恢复的进度外，其他和git stash pop命令一样")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash drop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("stash_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 删除一个存储的进度，如果不执行stash_id则默认保存最新的存储进度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" stash "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clear")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 删除所有存储进度")]),s._v("\n")])])]),a("p",[a("code",[s._v("git reset")]),s._v("：回退到指定的版本。")]),s._v(" "),a("p",[a("code",[s._v("git revert")]),s._v("：撤回提交信息。")]),s._v(" "),a("p",[a("code",[s._v("git cherry-pick")]),s._v("：挑选某个分支的提交并作为一个新的提交引入到你当前分支上。")]),s._v(" "),a("p",[s._v("默认cherry-pick只挑选单次的commit，如果想转移多个commit，使用命令git cherry-pick commitid1...commitid100")]),s._v(" "),a("p",[s._v("...命令默认不包含第一个commit id，如果你想包含第一个commit，也就是闭区间，使用git cherry-pick A^...B")]),s._v(" "),a("p",[s._v("Cherry-pick的过程中如果有冲突，需要先修改冲突文件，再git add .，然后继续执行git cherry-pick --continue")]),s._v(" "),a("p",[s._v("在任何阶段都可以执行"),a("code",[s._v("git cherry-pick --abort")]),s._v("放弃本次cherry-pick")]),s._v(" "),a("p",[a("code",[s._v("git tag")]),s._v("：经常用于查看或新增一个标签。")]),s._v(" "),a("p",[a("code",[s._v("git rebase")]),s._v("：分支变基，多用于合并commit和重新合并master分支的代码")]),s._v(" "),a("p",[s._v("如果一次开发提交过多commit，会有很多弊端：")]),s._v(" "),a("p",[s._v("1.不利于代码review：如果做一个很小的功能有很多commit，会很多。")]),s._v(" "),a("p",[s._v("2.会造成分支污染：如果项目充满了无用的commit，有一天项目出现紧急问题需要回滚代码，却发现海量commit，会很崩溃")]),s._v(" "),a("p",[s._v("合并最近四次commit")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-i")]),s._v(" HEAD~4\n")])])]),a("p",[s._v("rebase之后进入vim模式，把不需要的commit前面的pick改为squash就可以")]),s._v(" "),a("p",[s._v("合并其他分支")]),s._v(" "),a("p",[s._v("每次开发完都要先在master分支下拉取别的同事的远程代码，然后当前分支对master分支进行合并才不会冲突")]),s._v(" "),a("p",[s._v("具体操作")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("git:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("feature1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":git rebase master\n")])])]),a("p",[s._v("执行命令后：")]),s._v(" "),a("p",[s._v("首先git会把feature1分支里面的每个commit取消掉")]),s._v(" "),a("p",[s._v("然后把上面的操作临时保存成一个patch文件，存在"),a("code",[s._v(".git/rebase")]),s._v("目录下")]),s._v(" "),a("p",[s._v("然后把feature1分支更新到最新的master分支下")]),s._v(" "),a("p",[s._v("最后把上面保存的patch文件应用到feature1分支上")]),s._v(" "),a("p",[s._v("出现冲突时需要先解决冲突，然后执行命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--continue")]),s._v("\n")])])]),a("p",[s._v("在任何时候都可以随时取消rebase操作")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--abort")]),s._v("\n")])])]),a("p",[a("code",[s._v("git alias")]),s._v("可以配置命令的别名，简化命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" alias.co checkout\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" alias.ci commit\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--global")]),s._v(" alias.br branch\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" ci "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit message"')]),s._v("\n")])])]),a("p",[s._v("查看文件修改历史")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--follow")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-p")]),s._v(" 想要查看的文件\n")])])]),a("h2",{attrs:{id:"worktree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#worktree"}},[s._v("#")]),s._v(" worktree")]),s._v(" "),a("p",[s._v("在大型软件开发过程中可能经常需要维护一个古老的分支，比如三年前的分支，当然 git 允许你每个分支维护一个版本，但是切换 branch 的成本太高，尤其是当代码变动很大的时候，有可能改变了项目结构，甚至可能变更了 build system，如果切换 branch，IDE 可能需要花费大量的时间来重新索引和设置。")]),s._v(" "),a("p",[s._v("但是通过 worktree, 可以避免频繁的切换分支，将老的分支 checkout 到单独的文件夹中作为 worktree，每一个分支都可以有一个独立的 IDE 工程。当然像过去一样你也可以在磁盘上 clone 这个 repo 很多次，但这意味着很多硬盘空间的浪费，甚至需要在不同的仓库中拉取相同的变更很多次。")]),s._v(" "),a("p",[s._v("回到原来的问题，使用 git worktree 确实能够解决最上面提及的问题。")]),s._v(" "),a("p",[s._v("git worktree 的命令只有几行非常容易记住")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" worktree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("/new-dir some-existing-branch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" worktree "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("branch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[s._v("这行命令将在 new-dir 目录中将 some-existing-branch 中的内容 check out 出来，就像在该目录中 clone 了一份新代码一样。新的文件地址可以在文件系统中的任何位置，但是注意千万不要将目录放到主仓库中。在此之后新目录中的内容就可以和主仓库中的内容一样，新建分支，push 到远端。")]),s._v(" "),a("p",[s._v("当工作结束后可以直接删除该目录，然后运行 "),a("code",[s._v("git worktree prune")]),s._v(".")]),s._v(" "),a("p",[s._v("git worktree 非常适合大型项目又需要维护多个分支，想要避免来回切换的情况，这里总结一些优点：")]),s._v(" "),a("ul",[a("li",[s._v("git worktree 可以快速进行并行开发，同一个项目多个分支同时并行演进")]),s._v(" "),a("li",[s._v("git worktree 的提交可以在同一个项目中共享")]),s._v(" "),a("li",[s._v("git worktree 和单独 clone 项目相比，节省了硬盘空间，又因为 git worktree 使用 hard link 实现，要远远快于 clone")])]),s._v(" "),a("h2",{attrs:{id:"pr与mr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pr与mr"}},[s._v("#")]),s._v(" pr与mr")]),s._v(" "),a("p",[s._v("合并代码的操作在github中叫pr，在gitlab中成为mr，本质上都是合并代码")]),s._v(" "),a("p",[s._v("GitHub pr")]),s._v(" "),a("p",[s._v("强制push之后pr不能重开")]),s._v(" "),a("h2",{attrs:{id:"git-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-alias"}},[s._v("#")]),s._v(" Git Alias")]),s._v(" "),a("p",[s._v("开启zsh git plugin之后，会获得一群好用的git alias")]),s._v(" "),a("h2",{attrs:{id:"gitflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitflow"}},[s._v("#")]),s._v(" Gitflow")]),s._v(" "),a("p",[s._v("进入本地文件夹，打开Git bash,")]),s._v(" "),a("p",[s._v("执行指令进行初始化，会在原始文件夹中生成一个隐藏的文件夹.git")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" .git//删掉原来的.git目录\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n")])])]),a("p",[s._v("将文件添加到本地仓库,运行命令：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" \n")])])]),a("p",[s._v("输入本次提交说明")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"layout"')]),s._v("\n")])])]),a("p",[s._v("将本地仓库与远程仓库相关联，")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" origin https://github.com/CongliYin/CSS.git\n")])])]),a("p",[s._v("如果出现错误：fatal: remote origin already exists，则执行以下语句：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" origin\n")])])]),a("p",[s._v("执行上传命令")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master\n")])])]),a("p",[s._v("新建远程仓库需要添加-u参数")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-u")]),s._v(" origin master\n")])])]),a("p",[s._v("如果出现错误failed to push som refs to…….，则执行以下语句，先把远程服务器github上面的文件拉先来，再push 上去。：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master\n")])])]),a("p",[s._v("如果出现错误fatal: refusing to merge unrelated histories，后面加上--allow-unrelated-histories")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull origin master --allow-unrelated-histories\n")])])]),a("p",[s._v("特别注意：执行命令后，git会弹出一个GitHub登陆的小界面，你登录成功后要求你输入用户名和密码。这里的密码并不是你的GitHub的密码或者本地git的密码。"),a("strong",[s._v("而是GitHub的Personal access tokens")])]),s._v(" "),a("p",[s._v("https://github.com/settings/tokens")]),s._v(" "),a("h3",{attrs:{id:"错误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误"}},[s._v("#")]),s._v(" 错误")]),s._v(" "),a("p",[s._v("GitHub pull之后有冲突")]),s._v(" "),a("p",[s._v("尚未完成合并(MERGE_HEAD存在)？")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-rf")]),s._v(" .git/MERGE*\n")])])]),a("p",[s._v("或者")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--quit")]),s._v("\n")])])]),a("h2",{attrs:{id:"git-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks"}},[s._v("#")]),s._v(" Git Hooks")]),s._v(" "),a("h2",{attrs:{id:"更新不了代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新不了代码"}},[s._v("#")]),s._v(" 更新不了代码")]),s._v(" "),a("p",[s._v("代码加入本地仓库后，上传后显示everything -up-date，但是远程仓库没有更新")]),s._v(" "),a("p",[s._v("先创建新分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch newbranch\n")])])]),a("p",[s._v("检查分支创建是否成功")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n")])])]),a("p",[s._v("此时输出")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("* master\n  newbranch\n")])])]),a("p",[s._v("切换到新创建的分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout newbranch\n")])])]),a("p",[s._v("将改动提交到新分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-a")]),s._v("\n")])])]),a("p",[s._v("回到主分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n")])])]),a("p",[s._v("将新分支与原分支合并")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge newbranch \n")])])]),a("p",[s._v("正常合并没有冲突，如果产生冲突，查看冲突文件修改后再一次提交")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git diff\n")])])]),a("p",[s._v("解决后就正常提交")]),s._v(" "),a("div",{staticClass:"language-git extra-class"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git push -u origin master\n")])])]),a("p",[s._v("删除分支")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-d")]),s._v(" newbranch\n")])])]),a("h2",{attrs:{id:"检查版本信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#检查版本信息"}},[s._v("#")]),s._v(" 检查版本信息")]),s._v(" "),a("p",[s._v("查看远程仓库信息")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" remote "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-v")]),s._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\n")])])]),a("p",[s._v("检查文件或者文件夹在工作区或暂存区的状态，有三种")]),s._v(" "),a("p",[s._v("文件已经从工作区add到暂存区，git restore --staged filename")]),s._v(" "),a("p",[s._v("文件在工作区、暂存区都有，并且在工作区进行了修改或删除，没有add到暂存区")]),s._v(" "),a("p",[s._v("git add file")]),s._v(" "),a("p",[s._v("文件只在工作区")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),a("p",[s._v("拉取暂存区文件为工作区文件")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log\n")])])]),a("p",[s._v("git log 会按提交时间列出所有的更新，最近的更新排在最上面")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v("\n")])])]),a("p",[s._v("在git目录输入git open就能打开github对于的页面")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" git-open\n")])])]),a("p",[s._v("将本地仓库文件撤回至工作区")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--hard")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reser "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--mixed")]),s._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" revert HEAD\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" fetch origin\n")])])]),a("p",[s._v("创建并更新远程分支，并拉取代码到origin，一般默认是master")]),s._v(" "),a("p",[s._v("git pull可以认为是git fetch和git merge的组合体")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase origin/master\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("\n")])])]),a("p",[s._v("git-diff能在命令行显示当前代码与上次提交时代码的修改，可以逐行见检查代码")]),s._v(" "),a("h2",{attrs:{id:"代码检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码检查"}},[s._v("#")]),s._v(" 代码检查")]),s._v(" "),a("h3",{attrs:{id:"husky"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[s._v("#")]),s._v(" husky")]),s._v(" "),a("p",[s._v("使用husky")]),s._v(" "),a("p",[s._v("安装")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" husky "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n")])])]),a("p",[s._v("编辑package。json 》 prepare 脚本并且运行")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" set-script prepare "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky install"')]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run prepare\n")])])]),a("p",[s._v("添加钩子函数")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("npx husky "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" .husky/pre-commit "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm test"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" ./husky/pre-commit\n")])])]),a("p",[s._v("然后提交commit就会检查")]),s._v(" "),a("p",[s._v("如果不想检查使用no-verify")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" --no-verify\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## git commit -n -m ''")]),s._v("\n")])])]),a("p",[s._v("如果husky报错，可以使用husky-init")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("npx husky-init\n")])])]),a("h3",{attrs:{id:"commitizen"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitizen"}},[s._v("#")]),s._v(" commitizen")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcommitizen%2Fcz-cli",target:"_blank",rel:"noopener noreferrer"}},[s._v("commitizen/cz-cli"),a("OutboundLink")],1),s._v("是一个可以实现规范的"),a("strong",[s._v("提交说明")]),s._v("的工具")]),s._v(" "),a("p",[s._v("提供选择的提交信息类别，快速生成"),a("strong",[s._v("提交说明")]),s._v("。安装cz工具")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-g")]),s._v(" commitizen\n")])])]),a("p",[s._v("如果需要在项目中使用"),a("strong",[s._v("commitizen")]),s._v("生成符合AngularJS规范的"),a("strong",[s._v("提交说明")]),s._v("，初始化"),a("strong",[s._v("cz-conventional-changelog")]),s._v("适配器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("commitizen init cz-conventional-changelog "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--save")]),s._v(" --save-exact\n")])])]),a("p",[s._v("初始化命令主要进行了3件事情")]),s._v(" "),a("ol",[a("li",[s._v("在项目中安装"),a("strong",[s._v("cz-conventional-changelog")]),s._v(" 适配器依赖")]),s._v(" "),a("li",[s._v("将适配器依赖保存到"),a("code",[s._v("package.json")]),s._v("的"),a("code",[s._v("devDependencies")]),s._v("字段信息")]),s._v(" "),a("li",[s._v("在"),a("code",[s._v("package.json")]),s._v("中新增"),a("code",[s._v("config.commitizen")]),s._v("字段信息，主要用于配置cz工具的适配器路径：")])]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"devDependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cz-conventional-changelog"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^2.1.0"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commitizen"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./node_modules/cz-conventional-changelog"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("如果想定制项目的"),a("strong",[s._v("提交说明")]),s._v("，可以使用"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fleonardoanalista%2Fcz-customizable",target:"_blank",rel:"noopener noreferrer"}},[s._v("cz-customizable"),a("OutboundLink")],1),s._v("适配器")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" cz-customizable --save-dev\n")])])]),a("p",[s._v("将之前符合Angular规范的"),a("strong",[s._v("cz-conventional-changelog")]),s._v("适配器路径改成"),a("strong",[s._v("cz-customizable")]),s._v("适配器路径")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"devDependencies"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cz-customizable"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^5.3.0"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"commitizen"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node_modules/cz-customizable"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("官方提供了一个"),a("code",[s._v(".cz-config.js")]),s._v("示例文件"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fleonardoanalista%2Fcz-customizable%2Fblob%2Fmaster%2Fcz-config-EXAMPLE.js",target:"_blank",rel:"noopener noreferrer"}},[s._v("cz-config-EXAMPLE.js"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'use strict'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("types")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'特性'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'特性:    一个新的特性'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'修复'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'修复:    修复一个Bug'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'文档'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'文档:    变更的只有文档'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'格式'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'格式:    空格, 分号等格式修复'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'重构'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'重构:    代码重构，注意和特性、修复区分开'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'性能'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'性能:    提升性能'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'测试:    添加一个测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'工具'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'工具:    开发工具变动(构建、脚手架工具等)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'回滚'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'回滚:    代码回退'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("scopes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'模块1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'模块2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'模块3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'模块4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// it needs to match the value for field type. Eg.: 'fix'")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n  scopeOverrides: {\n    fix: [\n      {name: 'merge'},\n      {name: 'style'},\n      {name: 'e2eTest'},\n      {name: 'unitTest'}\n    ]\n  },\n  */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// override the messages, defaults are as follows")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("messages")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'选择一种你的提交类型:'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("scope")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'选择一个scope (可选):'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// used if allowCustomScopes is true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("customScope")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Denote the SCOPE of this change:'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("subject")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'短说明:\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("body")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'长说明，使用\"|\"换行(可选)：\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("breaking")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'非兼容性说明 (可选):\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("footer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'关联关闭的issue，例如：#31, #34(可选):\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("confirmCommit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'确定提交说明?'")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("allowCustomScopes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("allowBreakingChanges")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'特性'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'修复'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// limit subject length")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("subjectLimit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"commitlint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[s._v("#")]),s._v(" commitLint")]),s._v(" "),a("p",[s._v("校验提交说明是否符合规范，安装校验工具"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmarionebl%2Fcommitlint",target:"_blank",rel:"noopener noreferrer"}},[s._v("commitlint"),a("OutboundLink")],1),s._v("：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save-dev @commitlint/cli\n")])])]),a("p",[s._v("安装符合Angular风格的校验规则")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --save-dev @commitlint/config-conventional \n")])])]),a("p",[s._v("在项目中新建"),a("code",[s._v("commitlint.config.js")]),s._v("文件并设置校验规则")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@commitlint/config-conventional'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("如果是使用"),a("strong",[s._v("cz-customizable")]),s._v("适配器做了破坏Angular风格的提交说明配置，那么不能使用**@commitlint/config-conventional**规则进行提交说明校验，可以使用"),a("a",{attrs:{href:"https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fwhizark%2Fcommitlint-config-cz",target:"_blank",rel:"noopener noreferrer"}},[s._v("commitlint-config-cz"),a("OutboundLink")],1),s._v("对定制化提交说明进行校验")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" commitlint-config-cz --save-dev\n")])])]),a("p",[s._v("然后加入commitlint校验规则配置：")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cz'")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("Validate-commit-msg")]),s._v(" "),a("p",[s._v("除了使用"),a("strong",[s._v("commitlint")]),s._v("校验工具，也可以使用"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FFrikki%2Fvalidate-commit-message",target:"_blank",rel:"noopener noreferrer"}},[s._v("validate-commit-msg"),a("OutboundLink")],1),s._v("校验工具对cz提交说明是否符合Angular规范进行校验。")]),s._v(" "),a("p",[s._v("commitizen日志")]),s._v(" "),a("p",[s._v("如果使用了"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fcommitizen%2Fcz-cli",target:"_blank",rel:"noopener noreferrer"}},[s._v("cz"),a("OutboundLink")],1),s._v("工具集，配套"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fconventional-changelog%2Fconventional-changelog%2Ftree%2Fmaster%2Fpackages%2Fconventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[s._v("conventional-changelog"),a("OutboundLink")],1),s._v("可以快速生成开发日志")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" conventional-changelog "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-D")]),s._v("\n")])])]),a("p",[s._v("在"),a("code",[s._v("pacage.json")]),s._v("中加入生成日志命令")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"conventional-changelog -p angular -i CHANGELOG.md -s -r 0 && git add CHANGELOG.md"')]),s._v("\n")])])]),a("p",[s._v("执行"),a("code",[s._v("npm run version")]),s._v("后可查看生产的日志"),a("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fziyi2%2Fcz-example%2Fblob%2Fmaster%2FCHANGELOG.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("CHANGELOG.md"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"查看commit时间分布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看commit时间分布"}},[s._v("#")]),s._v(" 查看commit时间分布")]),s._v(" "),a("p",[s._v("在项目目录下执行")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-fsSL")]),s._v(" https://fastly.jsdelivr.net/gh/hellodigua/code996/bin/code996.sh "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n")])])]),a("p",[s._v("就能查看项目")])])}),[],!1,null,null,null);t.default=r.exports}}]);