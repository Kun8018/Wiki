(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{406:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("前端CI/CD工具")]),t._v(" "),a("h2",{attrs:{id:"自动化部署与负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动化部署与负载均衡"}},[t._v("#")]),t._v(" 自动化部署与负载均衡")]),t._v(" "),a("h3",{attrs:{id:"pm2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pm2"}},[t._v("#")]),t._v(" pm2")]),t._v(" "),a("p",[t._v("pm2是node进程管理工具，利用它进行node应用管理的性能监控、自动重启、负载均衡等。")]),t._v(" "),a("p",[t._v("全局安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" pm2\n")])])]),a("p",[t._v("使用pm2控制进程")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pm2 start app.js  //启动进程pm2 restart app.js   //重启进程pm2 list   //获取当前应用等名字/进程idpm2 stop app_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("app_id  //停止进程应用pm2 delete app_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("app_id  //删除特定进程应用pm2 stop all //停止所有应用\n")])])]),a("p",[t._v("其他命令行参数")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pm2 start app.js "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" max //根据有效CPU数启动最大进程数目pm2 start app.js "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" //启动3个进程pm2 start app.js "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-n")]),t._v(" name //启动进程时指定进程名字namepm2 start app.js "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--watch")]),t._v(" //监听应用目录的变化，一旦发生变化就自动重启pm2 monit  //查看当前pm2的运行进程的状态pm2 start big-array.js --max-memory-restart 20M  //超过内存上限后自动重启\n")])])]),a("p",[t._v("配置启动环境")]),t._v(" "),a("p",[t._v("在node中指定启动环境（开发环境、生产环境等）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"NODE_ENV"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"production"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"REMOTE_ADDR"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.example.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"env_dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"NODE_ENV"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"development"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"REMOTE_ADDR"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://wdev.example.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"env_test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"NODE_ENV"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"REMOTE_ADDR"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://wtest.example.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("启动时设置环境")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pm2 start app.js "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--env")]),t._v(" dev\n")])])]),a("p",[t._v("pm2支持线上系统和第三方扩展，如常用的log、rotate，")]),t._v(" "),a("h3",{attrs:{id:"jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jenkins"}},[t._v("#")]),t._v(" jenkins")]),t._v(" "),a("p",[t._v("jenkins是基于java和docker的自动化部署和管理工具")]),t._v(" "),a("p",[t._v("安装之前确保电脑安装java(java 1.8)和docker")]),t._v(" "),a("p",[t._v("mac安装")]),t._v(" "),a("p",[t._v("使用brew工具安装和启动")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n")])])]),a("h4",{attrs:{id:"流水线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流水线"}},[t._v("#")]),t._v(" 流水线")]),t._v(" "),a("p",[t._v('Jenkins 流水线 (或简单的带有大写"P"的"Pipeline") 是一套插件，它支持实现和集成 '),a("em",[t._v("continuous delivery pipelines")]),t._v(" 到Jenkins。")]),t._v(" "),a("p",[a("code",[t._v("Jenkinsfile")]),t._v(" 能使用两种语法进行编写 - 声明式和脚本化。")]),t._v(" "),a("p",[t._v("声明式和脚本化的流水线从根本上是不同的。 声明式流水线的是 Jenkins 流水线更近的特性:")]),t._v(" "),a("ul",[a("li",[t._v("相比脚本化的流水线语法，它提供更丰富的语法特性,")]),t._v(" "),a("li",[t._v("是为了使编写和读取流水线代码更容易而设计的。")])]),t._v(" "),a("p",[t._v("然而，写到"),a("code",[t._v("Jenkinsfile")]),t._v('中的许多单独的语法组件(或者 "步骤"), 通常都是声明式和脚本化相结合的流水线。')]),t._v(" "),a("p",[t._v("本质上，Jenkins 是一个自动化引擎，它支持许多自动模式。 流水线向Jenkins中添加了一组强大的工具, 支持用例 简单的持续集成到全面的CD流水线。通过对一系列的相关任务进行建模, 用户可以利用流水线的很多特性:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Code")]),t._v(": 流水线是在代码中实现的，通常会检查到源代码控制, 使团队有编辑, 审查和迭代他们的交付流水线的能力。")]),t._v(" "),a("li",[a("strong",[t._v("Durable")]),t._v(": 流水线可以从Jenkins的主分支的计划内和计划外的重启中存活下来。")]),t._v(" "),a("li",[a("strong",[t._v("Pausable")]),t._v(": 流水线可以有选择的停止或等待人工输入或批准，然后才能继续运行流水线。")]),t._v(" "),a("li",[a("strong",[t._v("Versatile")]),t._v(": 流水线支持复杂的现实世界的 CD 需求, 包括fork/join, 循环, 并行执行工作的能力。")]),t._v(" "),a("li",[a("strong",[t._v("Extensible")]),t._v(":流水线插件支持扩展到它的DSL ["),a("a",{attrs:{href:"https://www.jenkins.io/zh/doc/book/pipeline/#_footnotedef_1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1"),a("OutboundLink")],1),t._v("]的惯例和与其他插件集成的多个选项。")])]),t._v(" "),a("p",[t._v("然而， Jenkins一直允许以将自由式工作链接到一起的初级形式来执行顺序任务, ["),a("a",{attrs:{href:"https://www.jenkins.io/zh/doc/book/pipeline/#_footnotedef_4",target:"_blank",rel:"noopener noreferrer"}},[t._v("4"),a("OutboundLink")],1),t._v("] 流水线使这个概念成为了Jenkins的头等公民。")]),t._v(" "),a("p",[t._v("流水线是用户定义的一个CD流水线模型 。流水线的代码定义了整个的构建过程, 他通常包括构建, 测试和交付应用程序的阶段 。")]),t._v(" "),a("p",[t._v("节点是一个机器 ，它是Jenkins环境的一部分 and is capable of执行流水线。")]),t._v(" "),a("p",[a("code",[t._v("stage")]),t._v(' 块定义了在整个流水线的执行任务的概念性地不同的的子集(比如 "Build", "Test" 和 "Deploy" 阶段), 它被许多插件用于可视化 或Jenkins流水线目前的 状态/进展. ['),a("a",{attrs:{href:"https://www.jenkins.io/zh/doc/book/pipeline/#_footnotedef_6",target:"_blank",rel:"noopener noreferrer"}},[t._v("6"),a("OutboundLink")],1),t._v("]")]),t._v(" "),a("p",[t._v('本质上 ，一个单一的任务, a step 告诉Jenkins 在特定的时间点要做_what_ (或过程中的 "step")。 举个例子,要执行shell命令 ，请使用 '),a("code",[t._v("sh")]),t._v(" 步骤: "),a("code",[t._v("sh 'make'")]),t._v("。当一个插件扩展了流水线DSL, ["),a("a",{attrs:{href:"https://www.jenkins.io/zh/doc/book/pipeline/#_footnotedef_1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1"),a("OutboundLink")],1),t._v("] 通常意味着插件已经实现了一个新的 "),a("em",[t._v("step")]),t._v("。")]),t._v(" "),a("p",[t._v("在声明式流水线语法中, "),a("code",[t._v("pipeline")]),t._v(" 块定义了整个流水线中完成的所有的工作。")]),t._v(" "),a("div",{staticClass:"language-jenkinsfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("pipeline {\n    agent any \n    stages {\n        stage('Build') { \n            steps {\n                // \n            }\n        }\n        stage('Test') { \n            steps {\n                // \n            }\n        }\n        stage('Deploy') { \n            steps {\n                // \n            }\n        }\n    }\n}\n")])])]),a("p",[t._v("在脚本化流水线语法中, 一个或多个 "),a("code",[t._v("node")]),t._v(" 块在整个流水线中执行核心工作。 虽然这不是脚本化流水线语法的强制性要求, 但它限制了你的流水线的在"),a("code",[t._v("node")]),t._v("块内的工作做两件事:")]),t._v(" "),a("ol",[a("li",[t._v("通过在Jenkins队列中添加一个项来调度块中包含的步骤。 节点上的执行器一空闲, 该步骤就会运行。")]),t._v(" "),a("li",[t._v("创建一个工作区(特定为特定流水间建立的目录)，其中工作可以在从源代码控制检出的文件上完成。\n"),a("strong",[t._v("Caution:")]),t._v(" 根据你的 Jenkins 配置,在一系列的空闲后，一些工作区可能不会自动清理 。")])]),t._v(" "),a("div",{staticClass:"language-jenkins extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("node {  \n    stage('Build') { \n        // \n    }\n    stage('Test') { \n        // \n    }\n    stage('Deploy') { \n        // \n    }\n}\n")])])]),a("h4",{attrs:{id:"step"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step"}},[t._v("#")]),t._v(" step")]),t._v(" "),a("p",[t._v("Pipelines 由多个步骤（step）组成，允许你构建、测试和部署应用。 Jenkins Pipeline 允许您使用一种简单的方式组合多个步骤， 以帮助您实现多种类型的自动化构建过程。")]),t._v(" "),a("p",[t._v("可以把“步骤（step）”看作一个执行单一动作的单一的命令。 当一个步骤运行成功时继续运行下一个步骤。 当任何一个步骤执行失败时，Pipeline 的执行结果也为失败。")]),t._v(" "),a("p",[t._v("当所有的步骤都执行完成并且为成功时，Pipeline 的执行结果为成功。")]),t._v(" "),a("p",[t._v("在 Linux、BSD 和 Mac OS（类 Unix ) 系统中的 shell 命令， 对应于 Pipeline 中的一个 "),a("code",[t._v("sh")]),t._v(" 步骤（step）。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pipeline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    agent any\n    stages "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Build'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo \"Hello World\"'")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("'\n                    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Multiline shell steps works too"')]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-lah")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("'\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Windows 的系统使用 "),a("code",[t._v("bat")]),t._v(" 步骤表示执行批处理命令。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pipeline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    agent any\n    stages "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Build'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                bat "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'set'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Jenkins Pipeline 提供了很多的步骤（step），这些步骤可以相互组合嵌套，方便地解决像重复执行步骤直到成功（重试）和如果一个步骤执行花费的时间太长则退出（超时）等问题。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pipeline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    agent any\n    stages "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Deploy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                retry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./flakey-deploy.sh'")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n                timeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(", unit: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MINUTES'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./health-check.sh'")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("完成时动作")]),t._v(" "),a("p",[t._v("当 Pipeline 运行完成时，你可能需要做一些清理工作或者基于 Pipeline 的运行结果执行不同的操作， 这些操作可以放在 "),a("code",[t._v("post")]),t._v(" 部分。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pipeline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    agent any\n    stages "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo \"Fail!\"; exit 1'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    post "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        always "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will always run'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        success "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will run only if successful'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        failure "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will run only if failed'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        unstable "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will run only if the run was marked as unstable'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        changed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This will run only if the state of the Pipeline has changed'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'For example, if the Pipeline was previously failing but is now successful'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("环境变量")]),t._v(" "),a("p",[t._v("环境变量可以像下面的示例设置为全局的，也可以是阶段（stage）级别的。 如你所想，阶段（stage）级别的环境变量只能在定义变量的阶段（stage）使用。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pipeline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    agent any\n\n    environment "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        DISABLE_AUTH "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'true'")]),t._v("\n        DB_ENGINE    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sqlite'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    stages "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Build'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'printenv'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("通过 "),a("code",[t._v("archiveArtifacts")]),t._v(" 步骤和文件匹配表达式可以很容易的完成构建结果记录和存储，")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pipeline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    agent any\n    stages "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        stage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Build'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./gradlew build'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        stage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            steps "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./gradlew check'")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    post "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        always "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            archiveArtifacts artifacts: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build/libs/**/*.jar'")]),t._v(", fingerprint: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n            junit "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build/reports/**/*.xml'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果在 "),a("code",[t._v("archiveArtifacts")]),t._v(" 步骤中指定了多个参数， 那么每个参数的名称必须在步骤代码中明确指定， 即文件的路径、文件名和 "),a("code",[t._v("fingerprint")]),t._v(" 三个参数。 如果您只需指定文件的路径和文件名， 那么你可以省略参数名称 "),a("code",[t._v("artifacts")]),t._v(" ，例如： "),a("code",[t._v("archiveArtifacts 'build/libs/**/*.jar'")])]),t._v(" "),a("p",[t._v("回放")]),t._v(" "),a("h4",{attrs:{id:"发布后通知企微"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布后通知企微"}},[t._v("#")]),t._v(" 发布后通知企微")]),t._v(" "),a("p",[t._v("1.配置企业微信")]),t._v(" "),a("ul",[a("li",[t._v("进入某个群 -> 右击群标签，添加群机器人\n注意：企业微信貌似没有像钉钉那样设置配置群机器人权限，因此任何人都能添加机器人。相对于钉钉有点落后")]),t._v(" "),a("li",[t._v("填写名称，创建成功后复制hook地址")])]),t._v(" "),a("p",[t._v("2.在jenkins中进入系统管理-管理插件")]),t._v(" "),a("p",[t._v("搜索插件Qy Wechat Notification，安装这个插件")]),t._v(" "),a("p",[t._v("然后配置Jenkins的Webhook")]),t._v(" "),a("ul",[a("li",[t._v("进入 Jenkins Job，进入 Job 配置， 前往"),a("code",[t._v("构建后的操作")]),t._v(" -> 选择"),a("code",[t._v("企业微信通知")])])]),t._v(" "),a("p",[t._v("设置Webhook，把企微中的地址填入")]),t._v(" "),a("h3",{attrs:{id:"circle-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#circle-ci"}},[t._v("#")]),t._v(" Circle CI")]),t._v(" "),a("p",[t._v("circle CI可以与github action串接")]),t._v(" "),a("p",[t._v("参考rocksdb ci流程")]),t._v(" "),a("h3",{attrs:{id:"travis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#travis"}},[t._v("#")]),t._v(" travis")]),t._v(" "),a("h3",{attrs:{id:"dagger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dagger"}},[t._v("#")]),t._v(" Dagger")]),t._v(" "),a("p",[t._v("创建并初始化项目")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" rootProject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" rootProject\n\n$ dagger project init\n")])])]),a("p",[t._v("更新依赖")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ dagger project update\n")])])]),a("p",[t._v("创建main.cue文件")]),t._v(" "),a("div",{staticClass:"language-cue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dagger.io/dagger"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndagger"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("#Plan "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    actions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #Run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" contents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"echo ')]),a("span",{pre:!0,attrs:{class:"token escape string"}},[t._v('\\"')]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Hello!")]),a("span",{pre:!0,attrs:{class:"token escape string"}},[t._v('\\"')]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后创建另一个文件夹")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" personal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" personal "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])]),a("p",[t._v("创建一个新的main.cue")]),t._v(" "),a("div",{staticClass:"language-cue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cue"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" personal\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"universe.dagger.io/alpine"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"universe.dagger.io/bash"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n#Run"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    _img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" alpine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("#Build "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        packages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    bash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("#Run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        always"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n        input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  _img"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"cue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cue"}},[t._v("#")]),t._v(" Cue")]),t._v(" "),a("p",[t._v("Cue是json的超集，可以编译成json或者yaml文件")]),t._v(" "),a("h2",{attrs:{id:"sentry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sentry"}},[t._v("#")]),t._v(" Sentry")]),t._v(" "),a("p",[t._v("sentry是一个开源的错误追踪工具，可以帮助开发人员实时监控和修复系统中的错误。其专注于错误监控以及提取一切事后处理所需的信息，支持几乎所有主流开发语言（JS/Java/Python/php）和平台，并提供了web来展示错误。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://sentry.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("sentry.io"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"https://docs.sentry.io/platforms/",target:"_blank",rel:"noopener noreferrer"}},[t._v("docs.sentry.io/platforms"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("官方推荐使用docker或者python安装")]),t._v(" "),a("p",[t._v("在前端项目中使用")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" @sentry/browser @sentry/integrations\n")])])]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Sentry "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@sentry/browser'")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Intergrations "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@sentry/integrations'")]),t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"production"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" Sentry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("dsn")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://e028cb7b8dd645978cf5d84a@sentry.io/18726'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("integrations")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integrations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"cd平台"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cd平台"}},[t._v("#")]),t._v(" CD平台")]),t._v(" "),a("h3",{attrs:{id:"render-com"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#render-com"}},[t._v("#")]),t._v(" render.com")]),t._v(" "),a("h3",{attrs:{id:"nitro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nitro"}},[t._v("#")]),t._v(" Nitro")]),t._v(" "),a("h2",{attrs:{id:"sonarquebe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sonarquebe"}},[t._v("#")]),t._v(" SonarQuebe")]),t._v(" "),a("p",[t._v("扫描代码。检查代码")]),t._v(" "),a("p",[t._v("可以报错")])])}),[],!1,null,null,null);s.default=e.exports}}]);