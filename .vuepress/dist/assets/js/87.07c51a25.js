(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{369:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Git是最常用的版本管理工具，利于协同开发")]),t._v(" "),a("p",[t._v("​        原来的标题是Github使用技巧，但是后来开发之后发现github和gitlab都是基于Git，因此改为Git")]),t._v(" "),a("h2",{attrs:{id:"github-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-action"}},[t._v("#")]),t._v(" GitHub action")]),t._v(" "),a("p",[t._v("持续集成由很多操作组成，比如抓取代码、运行测试、登录远程服务器，发布到第三方服务等等。GitHub 把这些操作就称为 actions。")]),t._v(" "),a("p",[t._v("很多操作在不同项目里都是类似的，完全可以共享，因此github允许开发者把每个操作写成独立的脚本文件，存放到代码仓库里，使得其他开发者可以引用")]),t._v(" "),a("p",[t._v("如果你需要某个action，不必自己写复杂的脚本，直接引用别人写好的action即可，整个持续集成过程就变成了一个actions 的组合")]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念：")]),t._v(" "),a("p",[t._v("workflow：持续集成一次运行的过程，就是一个workflow")]),t._v(" "),a("p",[t._v("job：一个workflow由一个或者多个job组成，含义是一次持续集成的运行可以完成多个任务")]),t._v(" "),a("p",[t._v("step：每个job由多个step组成，一步步完成")]),t._v(" "),a("p",[t._v("action：每个step可以依次执行一个或者多个命令(action)")]),t._v(" "),a("p",[t._v("github actions的配置文件叫做workflow文件，存放在代码仓库的.github/workflow目录")]),t._v(" "),a("p",[t._v("workflow采用yaml文件，文件名可以任取，后缀名统一为.yml，一个库可以有多个workflow文件，github只要发现.github/workflows目录里面有.yml文件就会自动运行该文件")]),t._v(" "),a("p",[t._v("workflow中常用的配置字段")]),t._v(" "),a("p",[a("strong",[t._v("name")]),t._v("：workflow的名称，如果省略该字段，则默认是workflow的文件名")]),t._v(" "),a("p",[a("strong",[t._v("on")]),t._v("：指定触发workflow的条件，通常是某些事件，可以是事件或事件的数组")]),t._v(" "),a("p",[t._v("例："),a("code",[t._v("on:[push,pull_request]")]),t._v("表示push或者pull_request事件都可以触发workflow")]),t._v(" "),a("p",[t._v("on也可以限定某些分支的事件或标签，")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n")])])]),a("p",[t._v("上面的代码表示是有master分支push时才触发")]),t._v(" "),a("p",[a("strong",[t._v("jobs")]),t._v("：jobs是workflow文件的主体，表示要执行的一项或者多项任务")]),t._v(" "),a("p",[t._v("jobs中：")]),t._v(" "),a("p",[t._v("首先写出每一项任务的joh_id，名称自定义就可以，添加name字段是任务的说明")]),t._v(" "),a("p",[t._v("needs字段指定当前任务的依赖关系，即运行顺序")]),t._v(" "),a("p",[t._v("runs-on字段指定运行所需要的虚拟机环境，这是必填字段")]),t._v(" "),a("p",[t._v("runs-on可以选择github提供的虚拟机或者自己的服务器，使用自己的机器需要github能进行访问并给其所需的权限")]),t._v(" "),a("p",[t._v("有时候需要对多个操作系统、多个编程语言版本、多个平台进行测试，此时可以在runs-on字段下面配置一个构建矩阵")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("matrix.os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matrix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("16.04 ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 上面的代码配置了两种os操作系统和三种node版本共六种情况的构建矩阵，`{{matrix.os}}`是一个上下文参数")]),t._v("\n")])])]),a("p",[t._v("strategy策略包括：")]),t._v(" "),a("p",[t._v("matrix：构建矩阵")]),t._v(" "),a("p",[t._v("fail-fast：默认为true，即一旦某个矩阵任务失败则立即取消所有还在进行中的任务")]),t._v(" "),a("p",[t._v("max-paraller：可同时执行的最大并发数，默认情况下github会动态调整")]),t._v(" "),a("p",[t._v("此外还可以使用include为一个特定的"),a("code",[t._v("os")]),t._v("版本声明，用exclude删除特定的配置项")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("matrix.os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matrix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("macos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest windows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("os")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" windows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("npm")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("exclude")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("os")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" macos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n")])])]),a("p",[t._v("上面的代码声明了当os为windows-latest时增加一个node和npm的特定版本，当os为Macos-latest时移出node为4的版本")]),t._v(" "),a("p",[a("strong",[t._v("jobs.steps")]),t._v("：steps字段指定每个job的运行步骤，可以包含一个或者多个步骤，每个steps可以指定三个字段")]),t._v(" "),a("p",[t._v("Steps.name：步骤名称")]),t._v(" "),a("p",[t._v("steps.run：该步骤的shell指令或者action")]),t._v(" "),a("p",[t._v("steps.env：该步骤所需的环境变量")]),t._v(" "),a("p",[t._v("steps.uses:使用哪个action")]),t._v(" "),a("p",[t._v("checkout action是一个标准动作，当有以下情况时必须率先使用checkout action：")]),t._v(" "),a("p",[t._v("1.workflow需要项目库当代码副本，如构建、测试、或持续集成这些操作")]),t._v(" "),a("p",[t._v("2.workflow中至少有一个action是在同一个项目库下定义的")]),t._v(" "),a("p",[t._v("此外，如果只是想浅克隆库或者只复制最新的版本，使用with:fetch-depth声明")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v1\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetch-depth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[t._v("也可以引用现有库、自己的库或者docker的container")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("my_first_job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("step")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" My first step\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//alpine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.8")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./.github/actions/hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("word"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v1\n         "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n             "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10.x\n")])])]),a("p",[a("strong",[t._v("if语句")]),t._v("：")]),t._v(" "),a("p",[t._v("在jobs和step中可以使用if条件语句，只有满足条件时才执行具体的job或者step")]),t._v(" "),a("p",[t._v("if语句中的任务检查语句")]),t._v(" "),a("p",[t._v("always():总是返回true")]),t._v(" "),a("p",[t._v("success():当上一步执行成功时才会返回true")]),t._v(" "),a("p",[t._v("failure()：当上一步执行失败时才会返回ture")]),t._v(" "),a("p",[t._v("cancelled()：当workflow被取消时返回true")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" step1\n      if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("always()\n      \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" step2\n      if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("success()\n      \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" step3\n      if"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("failure()\n")])])]),a("p",[a("strong",[t._v("上下文和表达式(expression)")])]),t._v(" "),a("p",[t._v("有时候我们需要和第三方平台交互，这时通常需要配置一个token，但是这个token不可能明文使用的，通过${ { } }")]),t._v(" "),a("p",[t._v("的表达式就能传入")]),t._v(" "),a("p",[t._v("具体做法：")]),t._v(" "),a("p",[t._v("1.在具体repo库Settings中添加一个密钥，如SOMEONE_TOKEN")]),t._v(" "),a("p",[t._v("2.在workflow中通过表达式将 token安全地传入环境变量")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" My first action\n     "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      SOMEONE_TOKEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.SOMEONE_TOKEN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这里的secrets就是一个上下文，除此之外还有：")]),t._v(" "),a("p",[t._v("github.event_name:触发workflow的事件名称")]),t._v(" "),a("p",[t._v("job.status:当前job的状态，如success、failure等")]),t._v(" "),a("p",[t._v("Steps.output:某个action的输出")]),t._v(" "),a("p",[t._v("runner.os：runner的操作系统，如windows、linux或者macOS")]),t._v(" "),a("p",[t._v("github还做了一个官方市场，可以搜索到其他人提交的actions，另外还有一个awesome actions的仓库可以找到其他action")]),t._v(" "),a("h3",{attrs:{id:"回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回滚"}},[t._v("#")]),t._v(" 回滚")]),t._v(" "),a("p",[t._v("在github action下找到要回滚的版本，点击re-run就可以回到指定的版本")]),t._v(" "),a("h3",{attrs:{id:"触发其他repo的workflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#触发其他repo的workflow"}},[t._v("#")]),t._v(" 触发其他repo的workflow")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dispatch Event\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v1\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fetch-depth")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dispatch event to another_repository\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.REPO_ACCESS_TOKEN "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("EVENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YOUR_EVENT_TYPE\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ORG")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YOUR_ORG_NAME\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("REPO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" YOUR_TARGET_REPO_NAME\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n\t\t\t\tcurl -d "{\\"event_type\\": \\"${EVENT}\\"}" -H "Content-Type: application/json" -H "Authorization: token ${GITHUB_TOKEN}" -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/${ORG}/${REPO}/dispatches"')]),t._v("\n")])])]),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hugo publish\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("master\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository_dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("types")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sub_commit\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("submodule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" recursive\n")])])]),a("h3",{attrs:{id:"好用的git-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#好用的git-action"}},[t._v("#")]),t._v(" 好用的git action")]),t._v(" "),a("p",[t._v("action-js-inline")]),t._v(" "),a("p",[t._v("Https://github.com/marketplace/actions/execute-javascript-inline")]),t._v(" "),a("p",[t._v("可以在git action里执行js代码，而不只是shell代码")]),t._v(" "),a("h3",{attrs:{id:"本地跑git-action"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地跑git-action"}},[t._v("#")]),t._v(" 本地跑git action")]),t._v(" "),a("p",[t._v("https://www.github.com/nektos/act")]),t._v(" "),a("h2",{attrs:{id:"git-hooks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks"}},[t._v("#")]),t._v(" Git Hooks")]),t._v(" "),a("h2",{attrs:{id:"在github上工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在github上工作"}},[t._v("#")]),t._v(" 在Github上工作")]),t._v(" "),a("h3",{attrs:{id:"向开源项目贡献代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向开源项目贡献代码"}},[t._v("#")]),t._v(" 向开源项目贡献代码")]),t._v(" "),a("p",[t._v("一般开源库不会给其他人开放push权限，如果有很好的想法或者发现开源库有bug，可以向作者提pr(pull request)/mr(merge request)")]),t._v(" "),a("p",[t._v("首先Fork（关联复制）一份开源库A的代码到自己的github账号下( A1)")]),t._v(" "),a("p",[t._v("自己对于A1有完全的权限，此时在A1上加入自己的代码，commitA")]),t._v(" "),a("p",[t._v("发送Merge Request到原A库作者")]),t._v(" "),a("p",[t._v("原A库作者审核同意后，将commitA merge到A库代码中")]),t._v(" "),a("h3",{attrs:{id:"github-activity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-activity"}},[t._v("#")]),t._v(" GitHub activity")]),t._v(" "),a("p",[t._v("一般来说，只有对GitHub上repo的master分支操作时，比如push或者合并到master时GitHub activity会有记录")]),t._v(" "),a("h3",{attrs:{id:"github-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-api"}},[t._v("#")]),t._v(" GitHub api")]),t._v(" "),a("p",[t._v("api.github.com/repos/{repo_name}/releases/tags/")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" index.json https:api.github.com/repos/vesoft-inc/nebula-graph/releases/tags/v2.5.0\nhttps:api.github.com/repos/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("repo_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/releases/latest\n")])])]),a("h3",{attrs:{id:"pr-issue-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pr-issue-template"}},[t._v("#")]),t._v(" pr/issue template")]),t._v(" "),a("h3",{attrs:{id:"github-release-tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-release-tag"}},[t._v("#")]),t._v(" GitHub release/tag")]),t._v(" "),a("p",[t._v("Git tag常用于发布版本的标注，可以理解为tag是对某一次commit hash的别名设置。需要注意的是，git tag的同步与删除需要显式地指定名称")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出本地所有tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 过滤出v2.开头的tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-l")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v2.*'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用管道输出tag列表，避免进入visual模式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-V")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gtv")]),t._v("\n")])])]),a("p",[t._v("新增tag")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个名为 v0.0.1的轻量tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v0.0.1\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建一个名为 v0.0.1的附注tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-a")]),t._v(" v0.0.1 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tag description'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将tag推送至远程")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin v0.0.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ggp v0.0.1")]),t._v("\n")])])]),a("p",[t._v("删除tag")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" v0.0.1\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程tag")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" v0.0.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gp origin: v0.0.1")]),t._v("\n")])])]),a("p",[t._v("语义化版本")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" describe master "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--tags")]),t._v("\n")])])]),a("h3",{attrs:{id:"文件夹模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件夹模式"}},[t._v("#")]),t._v(" 文件夹模式")]),t._v(" "),a("p",[t._v("在对应的github地址下改url为github1s.com 可以使用类似于vscode的文件模式，但是是网页版，查看文件比较方便")]),t._v(" "),a("p",[t._v("比如")]),t._v(" "),a("p",[t._v("https://github1s.com/margox/braft-utils/blob/master/src/content.js#L44")]),t._v(" "),a("p",[t._v("也可以使用chrome插件")]),t._v(" "),a("p",[t._v("比如说gitako.安装之后在站点会有一个牛角一样的东西，可以展开/收起文件夹")]),t._v(" "),a("p",[t._v("地址：https://github.com/EnixCoda/Gitako")]),t._v(" "),a("h3",{attrs:{id:"oauth"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oauth"}},[t._v("#")]),t._v(" Oauth")]),t._v(" "),a("p",[t._v("github支持Oauth 2.0, 在setting- 开发设置中添加Oauth 拿到clientId和client secret")]),t._v(" "),a("p",[t._v("在应用中添加github第三方登录时，路由为http://github.com/login/oauth/authorize?client_id=&redirect-uri=&scope=&state=")]),t._v(" "),a("p",[t._v("参数名\t       数据类型\t描述\nclient_id\t      String\t点击请在此处注册OAuth Apps，此处会看见Client_id,Client Secret\nredirect_uri\tString\t当用户授权登录后，自动重定向的页面\nlogin\t            String\t使用一个特定的帐户登录和授权的应用程序。\nscope\t          String\t获取到信息的范围\nstate\t            String\t随机一个数值，用作防止跨域攻击")]),t._v(" "),a("p",[t._v("如果用户接受您的请求，GitHub 将重定向回您的站点，其中，代码参数为临时 "),a("code",[t._v("code")]),t._v("，"),a("code",[t._v("state")]),t._v(" 参数为您在上一步提供的状态。 临时代码将在 10 分钟后到期。 如果状态不匹配，然后第三方创建了请求，您应该中止此过程。")]),t._v(" "),a("p",[t._v("用此 "),a("code",[t._v("code")]),t._v(" 换访问令牌：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("POST https://github.com/login/oauth/access_token\n")])])]),a("p",[t._v("query参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("名称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("client_id")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("字符串")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("**必填。**您从 GitHub 收到的 OAuth 应用程序 的客户端 ID。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("client_secret")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("字符串")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("**必填。**您从 GitHub 收到的 OAuth 应用程序 的客户端密钥。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("代码")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("字符串")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("**必填。**您收到的响应第 1 步的代码。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("redirect_uri")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("字符串")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用户获得授权后被发送到的应用程序中的 URL。")])])])]),t._v(" "),a("p",[t._v("然后就可以使用token访问github 的api")]),t._v(" "),a("p",[t._v("在请求头中添加")]),t._v(" "),a("div",{staticClass:"language-header extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Authorization: token OAUTH-TOKEN\nGET https://api.github.com/user\n")])])]),a("p",[t._v("文档：")]),t._v(" "),a("p",[t._v("https://docs.github.com/cn/developers/apps/building-oauth-apps/authorizing-oauth-apps")]),t._v(" "),a("h2",{attrs:{id:"git-open"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-open"}},[t._v("#")]),t._v(" git-open")]),t._v(" "),a("p",[t._v("git-open是一个npm包，可以在git提交后在命令行输入，快速打开gitlab")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("npm install git"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("open\n")])])]),a("p",[t._v("使用时直接输入")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("git open\n")])])]),a("p",[t._v("就可以在默认浏览器打开gitlab的提交页面")]),t._v(" "),a("p",[t._v("如果提交的分支不是master，需要在gitlab页面创建合并请求，选择审核人进行审核合并")]),t._v(" "),a("p",[t._v("在审核人确定合并之前，下次提交时不需要再次创建合并请求")]),t._v(" "),a("p",[t._v("确定合并之后下次提交到分支时则需要再次创建")]),t._v(" "),a("h2",{attrs:{id:"gitlab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab"}},[t._v("#")]),t._v(" Gitlab")]),t._v(" "),a("p",[t._v("gitlab自带nginx、redis等软件，所以运行起来较大，在RAM4GB及以上的服务器才可以跑起来")]),t._v(" "),a("h3",{attrs:{id:"gitlab-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci"}},[t._v("#")]),t._v(" Gitlab ci")]),t._v(" "),a("p",[t._v("过在项目根目录下配置**.gitlab-ci.yml**文件，可以控制ci流程的不同阶段，例如install/检查/编译/部署服务器。gitlab平台会扫描.gitlab-ci.yml文件，并据此处理ci流程")]),t._v(" "),a("p",[t._v("ci流程在每次团队成员"),a("strong",[t._v("push/merge")]),t._v("后之后触发。每当你push/merge一次，gitlab-ci都会检查项目下有没有.gitlab-ci.yml文件，如果有，它会执行你在里面编写的脚本，并完整地走一遍从"),a("strong",[t._v("intall =>")]),t._v(" "),a("strong",[t._v("eslint检查=>编译 =>部署服务器")]),t._v("的流程")]),t._v(" "),a("p",[t._v("gitlab-ci提供了指定ci运行平台的机制，它提供了一个叫"),a("strong",[t._v("gitlab-runner")]),t._v("的软件，只要在对应的平台(机器或docker)上下载并运行这个命令行软件，并输入从gitlab交互界面获取的token,就可以把当前机器和对应的gitlab-ci流程绑定，也即：每次跑ci都在这个平台上进行。")]),t._v(" "),a("p",[t._v("gitlab-ci的所有流程都是可视化的，每个流程节点的状态可以在gitlab的交互界面上看到，包括执行成功或失败。如下图所示,因为它的执行看上去就和多节管道一样，所以我们通常用“pipeLine”来称呼它")]),t._v(" "),a("p",[t._v("不同push/merge所触发的CI流程不会互相影响，也就是说，你的一次push引发的CI流程并不会因为接下来另一位同事的push而阻断，它们是互不影响的。这一个特点方便让测试同学根据不同版本进行测试。")]),t._v(" "),a("p",[t._v("pipeline不仅能被动触发，也是可以手动触发的。")]),t._v(" "),a("p",[t._v("通过gitlab-ci，前端开发在提交代码之后就不用管了，ci流程会自动部署到测试或集成环境的服务器。很大程度上节约了开发的时间。")]),t._v(" "),a("p",[t._v("同时，因为开发和测试人员可以共用gitlab里的pipeline界面, 测试同学能够随时把握代码部署的情况，同时还可以通过交互界面手动启动pipeline，自己去部署测试，从而节约和开发之间的沟通时间。")]),t._v(" "),a("p",[t._v("我们可以把eslint或其他的代码检查加到pipeline流程中，每当团队成员提交和合并一次，pipeline都会触发一次并对代码做一次全面检测，这样就从一个更细的粒度上控制代码质量了。")]),t._v(" "),a("h4",{attrs:{id:"gitlab-ci中的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci中的概念"}},[t._v("#")]),t._v(" gitlab ci中的概念")]),t._v(" "),a("p",[t._v("Pipeline是Gitlab根据项目的.gitlab-ci.yml文件执行的流程，它由许多个任务节点组成, 而这些Pipeline上的每一个任务节点，都是一个独立的Job")]),t._v(" "),a("p",[t._v("Job在YML中的配置我们将会在下面介绍，现在需要知道的是："),a("strong",[t._v("每个Job都会配置一个stage属性，来表示这个Job所处的阶段。")])]),t._v(" "),a("p",[a("strong",[t._v("一个Pipleline有若干个stage,每个stage上有至少一个Job")]),t._v("，")]),t._v(" "),a("p",[t._v("Runner可以理解为："),a("strong",[t._v("在特定机器上")]),t._v("根据项目的**.gitlab-ci.yml"),a("strong",[t._v("文件，对项目执行pipeline的")]),t._v("程序**。Runner可以分为两种： "),a("strong",[t._v("Specific Runner")]),t._v(" 和 "),a("strong",[t._v("Shared Runner")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Shared Runner")]),t._v("是Gitlab平台提供的免费使用的runner程序，它由Google云平台提供支持，每个开发团队有十几个。对于公共开源项目是免费使用的，如果是私人项目则有每月2000分钟的CI时间上限。")]),t._v(" "),a("li",[a("strong",[t._v("Specific Runner")]),t._v("是我们自定义的，在自己选择的机器上运行的runner程序，gitlab给我们提供了一个叫gitlab-runner的命令行软件，只要在对应机器上下载安装这个软件，并且运行gitlab-runner register命令，然后输入从gitlab-ci交互界面获取的token进行注册, 就可以在自己的机器上远程运行pipeline程序了。")])]),t._v(" "),a("ol",[a("li",[t._v("Shared Runner是所有项目都可以使用的，而Specific Runner只能针对特定项目运行")]),t._v(" "),a("li",[t._v("Shared Runner默认基于docker运行，没有提前装配的执行pipeline的环境，例如node等。而Specific Runner你可以自由选择平台，可以是各种类型的机器，如Linux/Windows等，并在上面装配必需的运行环境，当然也可以选择Docker/K8s等")]),t._v(" "),a("li",[t._v("私人项目使用Shared Runner受运行时间的限制，而Specific Runner的使用则是完全自由的。")])]),t._v(" "),a("p",[t._v("有时候你可能会发现：你的Job并没有被你新建的Runner执行，而是被Share Runner抢先执行了。你如果不想要Share Runner，你可以在Gitlab面板上关掉")]),t._v(" "),a("p",[t._v("CI流程的运行控制，决定于项目根目录下编写的配置文件—— "),a("strong",[t._v(".gitlab-ci.yml")]),t._v("，正因如此，我们需要掌握YML的基本语法规则。")]),t._v(" "),a("p",[t._v("YML是一种编写配置文件的语言，比JSON更为简洁和方便，因此，我们首先要掌握的就是YML文件的编写语法。")]),t._v(" "),a("p",[t._v("Gitlab yaml")]),t._v(" "),a("p",[t._v("模块化")]),t._v(" "),a("p",[t._v("yaml")]),t._v(" "),a("ul",[a("li",[t._v("使用 **&**符号可以定义一个片段的别名")]),t._v(" "),a("li",[t._v("使用 **<<**符号和 ***** 符号可以将别名对应的YML片段导入")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(".common-config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&commonConfig")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示仅在develop/release分支上执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("refs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" develop\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install-job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其他配置 ....")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*commonConfig")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其他配置 ....")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*commonConfig")]),t._v("\n")])])]),a("p",[t._v("gitlab-ci提供的include关键字便可实现这个功能, 它可以用来导入外部的YML文件。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("include")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/.gitlab-ci.wx.yml'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/.gitlab-ci.bd.yml'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/.gitlab-ci.h5.yml'")]),t._v("\n")])])]),a("p",[t._v("gitlab-ci还提供了extend关键字，它的功能和前面提到的YML的片段导入的功能是一样的，")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v(".common-config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示仅在develop/release分支上执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("refs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" develop\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install-job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其他配置 ....")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其他配置 ....")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("extends")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" .common"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("config\n")])])]),a("p",[t._v("script")]),t._v(" "),a("p",[t._v("由runner执行的shell脚本，job所需的唯一关键字")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 示例1：")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bundle exec rspec"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 示例2：")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" uname "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" bundle exec rspec\n")])])]),a("p",[t._v("before_script")]),t._v(" "),a("p",[t._v("定义在所有job之前运行的命令（包括部署作业），必须是数组")]),t._v(" "),a("p",[t._v("after_script")]),t._v(" "),a("p",[t._v("定义在所有job之后运行的命令（包括失败的job），必须是数组")]),t._v(" "),a("p",[t._v("每个管道均可使用的两个阶段\n.pre: 保证始终是管道的第一个阶段\n.post: 保证始终是管道的最后一个阶段")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 示例1:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" .pre\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" a\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" b\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" .post\n")])])]),a("p",[t._v("environment")]),t._v(" "),a("p",[t._v("定义作业部署到特定环境，如果指定不存的名称在则自动创建")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy to production")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" git push production HEAD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("master\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" production\n")])])]),a("p",[t._v("cache")]),t._v(" "),a("p",[t._v("为了"),a("strong",[t._v("重复运行pipeline的时候不会重复安装全部node_modules的包")]),t._v("，从而减少pipeline的时间，提高pipeline的性能。")]),t._v(" "),a("p",[a("strong",[t._v("但是，这并不是cache关键字唯一的功能！")])]),t._v(" "),a("p",[t._v("在介绍cache的另外一个功能之前，我要先说一下gitlab-ci的一个优点“恶心人”的特点：")]),t._v(" "),a("p",[t._v("它在运行下一个Job的时候，会默认把前一个Job新增的资源删除得干干静静")]),t._v(" "),a("p",[t._v("也就是说，我们上面bulid阶段编译生成的包，会在deploy阶段运行前被默认删除！（我生产包都没了我怎么部署emmmmmmm）")]),t._v(" "),a("p",[t._v("而cache的作用就在这里体现出来了：如果我们把bulid生产的包的路径添加到cache里面，虽然gitlab还是会删除bulid目录，但是因为在删除前我们已经重新上传了cache，并且在下个Job运行时又把cache给pull下来，那么这个时候就可以实现在下一个Job里面使用前一个Job的资源了")]),t._v(" "),a("p",[t._v("总而言之，cache的功能体现在两点：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("在不同pipeline之间重用资源")])]),t._v(" "),a("li",[a("strong",[t._v("在同一pipeline的不同Job之间重用资源")])])]),t._v(" "),a("p",[t._v('虽然cache会缓存旧的包，但我们并不用担心使用到旧的资源，因为npm install还是会如期运行，并检查package.json是否有更新，npm build的时候，生成的build资源包也会覆盖cache,并且在当前Job运行结束时，作为**"新的cache"**上传')]),t._v(" "),a("p",[t._v("如果cache在job外定义，则表示它是全局的")]),t._v(" "),a("p",[t._v("artifacts")]),t._v(" "),a("p",[t._v("将生成的资源作为pipeline运行成功的附件上传，并在gitlab交互界面上提供下载")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Build-job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'npm run build'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bundle'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build/\n")])])]),a("p",[t._v("Image/Services")]),t._v(" "),a("p",[t._v("这两个关键字可使用Docker的镜像和服务运行Job，")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 示例1：")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry.example.com/my/image:latest"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 示例2：")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"registry.example.com/my/image:latest"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 示例1：")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" postgresql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.4")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 示例2:")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgresql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.4")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n")])])]),a("p",[t._v("Only/except")]),t._v(" "),a("p",[t._v("这两个关键字后面跟的值是tag或者分支名的列表。")]),t._v(" "),a("p",[t._v("故名思义")]),t._v(" "),a("ul",[a("li",[t._v("only的作用是指定当前Job仅仅只在某些tag或者branch上触发")]),t._v(" "),a("li",[t._v("而except的作用是当前Job不在某些tag或者branch上触发")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use regexp")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" /^issue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("."),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*$/")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" develop\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" release\n")])])]),a("p",[t._v("allow_failure")]),t._v(" "),a("p",[t._v("值为true/false, 表示当前Job是否允许允许失败。")]),t._v(" "),a("ul",[a("li",[t._v("默认是false,也就是如果当前Job因为报错而失败，则当前pipeline停止")]),t._v(" "),a("li",[t._v("如果是true，则即使当前Job失败，pipeline也会继续运行下去。")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" execute_script_that_will_fail\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("allow_failure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),a("p",[t._v("retry")]),t._v(" "),a("p",[t._v("指明的是当前Job的失败重试次数的上限。")]),t._v(" "),a("p",[t._v("但是这个值只能在0 ～2之间，也就是重试次数最多为2次，包括第一次运行在内，Job最多自动运行3次")]),t._v(" "),a("p",[t._v("timeout")]),t._v(" "),a("p",[t._v("配置超时时间，超过时间判定为失败")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rspec\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3h 30m\n")])])]),a("p",[t._v("when")]),t._v(" "),a("p",[t._v("Job在何种状态下运行，它可设置为3个值")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("on_success")]),t._v(": 仅当先前pipeline中的所有Job都成功（或因为已标记，被视为成功allow_failure）时才执行当前Job 。这是默认值。")]),t._v(" "),a("li",[a("strong",[t._v("on_failure")]),t._v(": 仅当至少一个先前阶段的Job失败时才执行当前Job。")]),t._v(" "),a("li",[a("strong",[t._v("always")]),t._v(": 执行当前Job，而不管先前pipeline的Job状态如何。")])]),t._v(" "),a("p",[t._v("tags")]),t._v(" "),a("p",[t._v("从允许运行此项目的所有runner列表中选择特定的runner，\ntags允许为具有指定标签的runner允许job")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### 示例1：")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("job")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" ruby\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" postgres \n")])])]),a("p",[a("strong",[t._v("variables")])]),t._v(" "),a("p",[t._v("在.gitlab-ci.yml定义的内部变量，用于存储非敏感项目配置\n在job环境中传递这些变量，可以全局设置，也可以按job设置\n在variables工作级使用关键字时，它将覆盖全局YAML变量和预定义的变量")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##  示例1：")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("variables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("DATABASE_URL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postgres://postgres@postgres/my_database"')]),t._v("\n")])])]),a("p",[t._v("parallel")]),t._v(" "),a("p",[t._v("配置并行运行的job实例数，此值必须大于等于2且小于等于50")]),t._v(" "),a("p",[t._v("不推荐的参数")]),t._v(" "),a("p",[t._v("全局定义 types\n工作定义 type\n全局定义image，services，cache，before_script，after_script")]),t._v(" "),a("h3",{attrs:{id:"gitlab-runner"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner"}},[t._v("#")]),t._v(" Gitlab Runner")]),t._v(" "),a("p",[t._v("下载gitlab runner 的rpm包，安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-i")]),t._v(" gitlab-runner_"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("arch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".rpm\n")])])]),a("p",[t._v("通常作为一个 trigger 代理，任务开销很小，我们可以把 /etc/gitlab-runner/config.toml 配置里的 concurrent 可以改得大一些，以支持更高的并发量。")]),t._v(" "),a("p",[t._v("搭建 gitlab runner 每台 runner 只需要执行一次")]),t._v(" "),a("p",[t._v("注册 gitlab runner 每个 git 仓库每台 runner 都需要单独注册")]),t._v(" "),a("p",[t._v("先登入 gitlab，进入对应的 git 仓库（project）")]),t._v(" "),a("p",[t._v("- 展开左边侧边栏最下面 Settings -> CI/CD。点击页面上 Runners 栏右边的 Expand，页面往下滚动一点可看到")]),t._v(" "),a("p",[t._v("注册")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner register\n")])])]),a("p",[a("strong",[t._v("2. Enter your GitLab instance URL.")])]),t._v(" "),a("p",[t._v("上图红框中 Register the runner with this URL 下面的内容。")]),t._v(" "),a("p",[a("strong",[t._v("3. Enter the token you obtained to register the runner.")])]),t._v(" "),a("p",[t._v("上图红框中 And this registration token 下面内容。")]),t._v(" "),a("p",[a("strong",[t._v("4. Enter a description for the runner. You can change this value later in the GitLab user interface.")])]),t._v(" "),a("p",[t._v("在 gitlab 中显示的 runner 描述，该实践中我们把他当名字用，叫 scapegoat-01。")]),t._v(" "),a("p",[a("strong",[t._v("5. Enter the tags associated with the runner, separated by commas. You can change this value later in the GitLab user interface.")])]),t._v(" "),a("p",[t._v("tag 相当于Jenkins中的 label， 用于 runner 分类。该实践中输入 scapegoat。")]),t._v(" "),a("p",[a("strong",[t._v("6. Provide the runner executor. For most use cases, enter docker.")])]),t._v(" "),a("p",[t._v("这里我们选 shell， window 可选 powershell。")]),t._v(" "),a("p",[t._v("https://zhuanlan.zhihu.com/p/184936276")]),t._v(" "),a("h3",{attrs:{id:"gitlab-ci触发jenkins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci触发jenkins"}},[t._v("#")]),t._v(" gitlab ci触发jenkins")]),t._v(" "),a("p",[t._v("理论上，gitlab的runner可以直接替代jenkins，但是实际项目中会有各种历史包袱。所以利用gitlab触发jenkins也可以")]),t._v(" "),a("p",[t._v("有两种方式，比较简单的方式是使用jenkins+webhook的插件方式实现")]),t._v(" "),a("p",[t._v("在jenkins的dashboard面板安装"),a("code",[t._v("Generic Webhook Trigger")]),t._v("插件")]),t._v(" "),a("p",[t._v("在构建触发器中选择"),a("code",[t._v("Generic Webhook Trigger")]),t._v("选项,将Jenkins和gitlab配合起来")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/078156204e2846c2ba1ae00a3db5c27e~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"image-20210816143402614.png"}})]),t._v(" "),a("p",[t._v("登录gitlab进入你要部署的项目>settings>Integrations>add webhook")]),t._v(" "),a("p",[t._v("测试webhook是否成功")]),t._v(" "),a("p",[t._v("https://juejin.cn/post/6997560212924137485#heading-24")]),t._v(" "),a("p",[t._v("也可以通过python-jenkins触发jenkins job")]),t._v(" "),a("p",[t._v("安装python和pip")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python或sudo "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python3\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python-pip\n")])])]),a("p",[t._v("安装python-jenkins")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("python "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python-jenkinsor python3 "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-m")]),t._v(" pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" python-jenkins\n")])])]),a("p",[t._v("python脚本")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python# file name: Jenkins-Compile-trigger.py")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" jenkins\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" requests\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" sys\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os\n\njenkins_url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://yunxin-jenkins.netease.im:8080"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gitlab的登录账号")]),t._v("\njenkins_user "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zouliyong"')]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取gitlab access token章节获取到的token")]),t._v("\njenkins_token "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxxxxxxxxxxxxxxxx"')]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Jenkins job name")]),t._v("\njob_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lava-CI"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从gitlab-ci中获取Jenkins job的参数，按需修改")]),t._v("\njob_parameters "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                      \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabSourceBranch"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("     \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabTargetBranch"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_MERGE_REQUEST_TARGET_BRANCH_NAME"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabMergeRequestLastCommit"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_COMMIT_SHA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabSourceRepoHomepage"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_PROJECT_URL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabMergeRequestIid"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_MERGE_REQUEST_IID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabPipelineId"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_PIPELINE_ID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabPipelineUrl"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_PIPELINE_URL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabJobId"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CI_JOB_ID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabUserName"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GITLAB_USER_NAME"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                    \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"_GitlabUserEmail"')]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" os"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getenv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GITLAB_USER_EMAIL"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nbuild_number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 0build_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"building"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jenkins job name: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jenkins job parameters: "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job_parameters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接Jenkins服务")]),t._v("\nserver "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jenkins_url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins_token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取Jenkins job最后一次build的build number")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("last_build_number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \n    last_build "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_job_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lastBuild'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" last_build \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n    last_build"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'number'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nlast_build "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_job_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lastBuild'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nnext_build_number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" last_build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#触发Jenkins")]),t._v("\njobqueue_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("build_job"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parameters"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("job_parameters"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jenkins build is waiting for running [queue id = %d] ..."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" queue_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flush"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#到这里，Jenkins job已经被放到执行队列里了，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只是触发不用等待Jenkins job结束的话，python脚本可以到此为止")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#等待Jenkins job开始执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" next_build_number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" last_build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("            \n            build_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_build_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exceptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RequestException "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("            \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            \n            server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jenkins_url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins_token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            build_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_build_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" queue_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" build_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"queueId"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("            \n            build_number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next_build_number            \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build number: %d"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            \n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("        \n            next_build_number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" next_build_number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    \n            time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jenkins build is running [build number = %d] ..."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jenkins job URL: %s/job/%s/%d/display/redirect"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jenkins_url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flush"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#到这里Jenkins job已经被正式调度，并开始执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#等待Jenkins job执行结束")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" build_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"building"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        \n        build_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_build_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" requests"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exceptions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RequestException "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        \n        server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jenkins_url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jenkins_token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        \n        build_info "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_build_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    \n        time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取执行结果")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_build_info"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" build_number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jenkins build result: %s"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SUCCESS"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("gitlab ci yaml")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#file name: .gitlab-ci.yml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在代码push的时候触发")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Compilation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    \n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    build    \n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("        \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" scapegoat \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# runner tag 参照上面注册gitlab runner章节    ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" python Jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Compile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("trigger.py\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只在merge request的时候触发CI:    ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n  build    \n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tags")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("        \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" scapegoat    \n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("       \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个脚本可以根据情况参照Jenkins-Compile-trigger.py自行修改        ")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" python Jenkins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("CI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("trigger.py     \n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" merge_requests\n")])])]),a("p",[t._v("https://juejin.cn/post/7073731514386612255")]),t._v(" "),a("h2",{attrs:{id:"gitbook"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitbook"}},[t._v("#")]),t._v(" Gitbook")]),t._v(" "),a("p",[t._v("Gitbook是一个提供Markdown书籍托管的网络平台。支持通过git及github进行文档管理，使用它可以很简单地生成、发布电子图书。Gitbook也是一个Nodejs命令行工具，可以使用它搭建自己的gitbook站点。GitBook甚至提供Github hook，在每次push前自动更新书籍内容。")]),t._v(" "),a("p",[t._v("安装GitBook 控制台")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" gitbook-cli\n")])])]),a("p",[t._v("如果安装过gitbook旧版本需要卸载。")]),t._v(" "),a("p",[t._v("gitbook常用命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("gitbook serve "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("Gitbook首先把你的Markdown文件编译为HTML文件，并根据SUMMARY.md生成书的目录。所有生存的文件都保存在当前目录下的一个名为_book的子目录中。完成这些工作后，Gitbook会作为一个HTTP Server运行，并在8080端口监听HTTP请求。")]),t._v(" "),a("p",[t._v("运行以上命令后，打开浏览器，在地址栏输入："),a("code",[t._v("http://localhost:8080")]),t._v("即可看到你的书页了。")]),t._v(" "),a("p",[t._v("其中位于左侧书目顶部的"),a("code",[t._v("Introduction")]),t._v("一节就编译自README.md，而书目本身自编译自SUMMARY.md。你要在自己的网站上发布新书，只需把_book目录复制到服务器相应目录即可。至此Gitbook的基本用法就介绍完毕。")]),t._v(" "),a("h3",{attrs:{id:"gitbook的插件支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitbook的插件支持"}},[t._v("#")]),t._v(" Gitbook的插件支持")]),t._v(" "),a("p",[t._v("在页面中嵌入Disqus评论")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gitbook-plugin-disqus\n")])])]),a("p",[t._v("然后建立一个book.json文件，其格式如下：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  \n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"disqus"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pluginsConfig"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  \n \t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"disqus"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  \n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"shortName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  \n           "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NAME-FROM-DISQUS"')]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("把上面的"),a("code",[t._v("NAME-FROM-DISQUS")]),t._v("修改为你在Disqus上的项目名即可。")]),t._v(" "),a("p",[t._v("再次运行命令：")]),t._v(" "),a("blockquote",[a("p",[t._v("$ gitbook serve -p 8080 .")])]),t._v(" "),a("p",[t._v("并刷新浏览器，即可看到附加了Disqus评论的页面。")]),t._v(" "),a("h3",{attrs:{id:"gitbook电子书封面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitbook电子书封面"}},[t._v("#")]),t._v(" Gitbook电子书封面")]),t._v(" "),a("p",[t._v("可以为电子书添加封面。只需添加2个名为"),a("code",[t._v("cover.jpg")]),t._v("和"),a("code",[t._v("cover_small.jpg")]),t._v("的两个图片即可。官方建议cover.jpg尺寸1800"),a("em",[t._v("2360，cover_small.jpg尺寸200")]),t._v("262。花2元即可在淘宝上找个做封面的人为你制造一个简单的封面，做得好就要花更多一些了 😃")]),t._v(" "),a("p",[t._v("总体而言，GitBook还是很好玩，比起其他写作平台而言，要自由、简单，并舒服得多，可以用Vim编辑，支持Markdown语法，用git管理，关联GitHub后每次push后还能自动编译，生成多种电子书格式。如果你的书极为畅销的话，还能获取到捐赠或购买，没有理由不尝试的呀。")]),t._v(" "),a("p",[a("strong",[t._v("删除电子书")])]),t._v(" "),a("p",[t._v("同样是在Book Setting中，可以删除电子书。在电子书列表中没有删除接口。")]),t._v(" "),a("h2",{attrs:{id:"svn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#svn"}},[t._v("#")]),t._v(" SVN")]),t._v(" "),a("p",[t._v("一般来说公司版本管理工具使用git的比较多，也有使用svn。SVN是sub vision的缩写，windows中svn客户端一般使用TortoiseSVN，mac中比较好用的当属CornerStone。TortoiseSVN是可视化svn界面，Cornerstone是收费的，因此你可以去网上下载破解版，直接安装即可。")]),t._v(" "),a("h3",{attrs:{id:"tortoisesvn"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tortoisesvn"}},[t._v("#")]),t._v(" TortoiseSVN")]),t._v(" "),a("p",[t._v("TortoiseSVN 常年管理文件和目录。文件存储于一个中央版本库中。版本库就像一个常见的文件服 务器，除了它保存你对文件和目录所有的改变。这一特性使得你可以恢复文件的旧版本并查看历史-谁 在什么时间如何进行的修改。")]),t._v(" "),a("p",[t._v("创建版本库")]),t._v(" "),a("div",{staticClass:"language-svn extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("svnadmin create --fs-type bdb MyNewRepository\n")])])]),a("p",[t._v("图标重载")]),t._v(" "),a("p",[t._v("使用svn-checkout检查文件状态。对号表示状态正常，红色感叹号表示文件被修改未提交，黄色感叹号表示产生冲突。")]),t._v(" "),a("p",[t._v("拉取项目")]),t._v(" "),a("div",{staticClass:"language-svn extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])])]),a("p",[t._v("提交项目")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("svn commit\n")])])]),a("p",[t._v("更新文件")]),t._v(" "),a("div",{staticClass:"language-svn extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("svn update\n")])])]),a("h3",{attrs:{id:"cornerstone"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cornerstone"}},[t._v("#")]),t._v(" Cornerstone")])])}),[],!1,null,null,null);s.default=e.exports}}]);