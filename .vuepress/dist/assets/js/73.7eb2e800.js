(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{355:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("​      前端框架，快速开发页面，函数式编程，与后端api快速搭建")]),t._v(" "),s("h2",{attrs:{id:"es-lint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#es-lint"}},[t._v("#")]),t._v(" ES-lint")]),t._v(" "),s("p",[t._v("react的代码规范库")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" eslint eslint-plugin-react\n")])])]),s("p",[t._v("如果是typescript项目按照ts相关插件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" @typescript-eslint/eslint-plugin @typescript-eslint/parser\n")])])]),s("p",[t._v("使用yarn eslint --lint向导来完成配置，或者手动创建eslintrc。json填入如下配置")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"extends"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint:recommended"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin:react/recommended"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"parser"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@typescript-eslint/parser"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"react"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@typescript-eslint"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"react/self-closing-comp"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//组件无内容时自闭合")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在vscode中配置")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"eslint.validate"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"javascript"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"javascriptreact"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"typescript"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"typescriptreact"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"推荐的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#推荐的配置"}},[t._v("#")]),t._v(" 推荐的配置")]),t._v(" "),s("p",[t._v("https://github.com/tsconfig/bases")]),t._v(" "),s("h2",{attrs:{id:"prettier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prettier"}},[t._v("#")]),t._v(" Prettier")]),t._v(" "),s("p",[t._v("Prettier是")]),t._v(" "),s("ul",[s("li",[t._v("一个代码格式工具,支持基本主流前端的语言(js, ts, Es6, Es7,markdown等等)；")]),t._v(" "),s("li",[t._v("会根据书写的代码，重新解析和构建显示格式（即，它清除原来的格式，按照自己认为美丽的方式重新显示代码格式）")]),t._v(" "),s("li",[t._v("Prettier 不会像EsLint，TsLint，StyleLint 那样告诉你，语法哪里错了，它只会告诉你代码这么写不美观")])]),t._v(" "),s("p",[t._v("编写.prettierrc")]),t._v(" "),s("div",{staticClass:"language-prettierrc extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "singleQuote": true,\n  "trailingComma": "all",\n  "printWidth": 80,\n  "overrides": [\n    {\n      "files": ".prettierrc",\n      "options": { "parser": "json" }\n    }\n  ]\n}\n')])])]),s("h2",{attrs:{id:"stylelint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stylelint"}},[t._v("#")]),t._v(" stylelint")]),t._v(" "),s("p",[t._v("stylelint是现代化的前端项目中一个强大的代码检查工具。可以帮忙检查样式文件并在样式中强制执行约定。")]),t._v(" "),s("p",[t._v("stylelint 默认地能"),s("em",[t._v("解析")]),t._v("如下的非标准语法，包括Sass、Less 和 SugarSS，非标准语法可以从以下文件扩展名 "),s("code",[t._v(".sass")]),t._v("、"),s("code",[t._v(".scss")]),t._v("、"),s("code",[t._v(".less")]),t._v(" 和 "),s("code",[t._v(".sss")]),t._v(" 中自动推断出来。或者您也可以自己指定语法。")]),t._v(" "),s("p",[t._v("此外，在使用命令行界面或 Node.js 应用程序接口时，stylelint 可以接受任何"),s("a",{attrs:{href:"https://github.com/postcss/postcss#syntaxes",target:"_blank",rel:"noopener noreferrer"}},[t._v("PostCSS兼容语法"),s("OutboundLink")],1),t._v("。但请注意，stylelint 无法保证核心规则可以在上面列出的默认值以外的语法中正常工作")]),t._v(" "),s("h3",{attrs:{id:"stylelint-order"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stylelint-order"}},[t._v("#")]),t._v(" stylelint-order")]),t._v(" "),s("p",[t._v("除了使用设定默认的 "),s("code",[t._v("standard")]),t._v(" 规则外，我们还可以在 "),s("code",[t._v(".stylelintrc.js")]),t._v(" 内添加自己喜欢的规则")]),t._v(" "),s("p",[t._v("安装stylelint-order")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" stylelint-order --save-dev\n")])])]),s("p",[t._v("在 "),s("code",[t._v(".stylelintrc.js")]),t._v(" 设置代码如下")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"plugins"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint-order"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"rules"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"order/properties-order"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"width"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"height"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"lint-staged"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lint-staged"}},[t._v("#")]),t._v(" lint-staged")]),t._v(" "),s("p",[t._v("lint-staged 是一个在git暂存文件上运行linters的工具，当然如果你觉得每次修改一个文件就给所有文件执行一次lint检查不恶心的话，这个工具对你来说就没有什么意义了，请直接关闭即可")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("npx mrm lint-staged\n")])])]),s("p",[t._v("配置")]),t._v(" "),s("p",[t._v("在package.json中配置")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My project"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.1.0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"my-custom-script"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linter --arg1 --arg2"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"pre-commit"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint-staged"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.{js}"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --cache --fix"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"*.css"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylelint --cache --fix"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("使用"),s("code",[t._v("prettier")]),t._v("自动修复"),s("code",[t._v("javascript")]),t._v("、"),s("code",[t._v("typescript")]),t._v("、"),s("code",[t._v("markdown")]),t._v("、"),s("code",[t._v("HTML")]),t._v("或"),s("code",[t._v("CSS")]),t._v("的代码样式")]),t._v(" "),s("div",{staticClass:"language-lint extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "*.{js,jsx,ts,tsx,md,html,css}": "prettier --write"\n}\n')])])]),s("p",[t._v("Stylelint用于具有默认值的CSS和具有SCSS语法的SCSS")]),t._v(" "),s("div",{staticClass:"language-lint extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "*.css": "stylelint",\n  "*.scss": "stylelint --syntax=scss"\n}\n')])])]),s("p",[t._v("自动修复代码")]),t._v(" "),s("div",{staticClass:"language-lint extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('{\n  "*.js": "eslint --fix"\n}\n')])])]),s("p",[t._v("过滤文件原则")]),t._v(" "),s("p",[t._v("Linter命令处理由glob模式定义的所有暂存文件的子集")]),t._v(" "),s("p",[t._v("如果全局模式不包含斜杠（"),s("code",[t._v("/")]),t._v("），matchBase则将启用micromatch的选项，因此无论目录如何，全局匹配文件的基本名称：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v('"*.js"')]),t._v("将匹配所有JS文件，例如"),s("code",[t._v("/test.js")]),t._v("和"),s("code",[t._v("/foo/bar/test.js")])]),t._v(" "),s("li",[s("code",[t._v('"!(*test).js"')]),t._v("。将匹配所有以结尾的JS文件"),s("code",[t._v("test.js")]),t._v("，因此"),s("code",[t._v("foo.js")]),t._v("但不匹配"),s("code",[t._v("foo.test.js")])])]),t._v(" "),s("p",[t._v("如果全局模式确实包含斜杠（"),s("code",[t._v("/")]),t._v("），则它也将与路径匹配：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v('"./*.js"')]),t._v("将匹配git repo根目录中的所有JS文件，因此"),s("code",[t._v("/test.js")]),t._v("但不匹配`/foo/bar/test.js``")]),t._v(" "),s("li",[t._v('``"foo/**/*.js"'),s("code",[t._v("将匹配")]),t._v("/foo"),s("code",[t._v("目录中的所有JS文件，所以")]),t._v("/foo/bar/test.js"),s("code",[t._v("但不匹配")]),t._v("/test.js`")])]),t._v(" "),s("h2",{attrs:{id:"jsdoc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jsdoc"}},[t._v("#")]),t._v(" JSdoc")]),t._v(" "),s("p",[t._v("JSDoc 是一个针对 JavaScript 的 API 文档生成器，类似于 Java 中的 Javadoc 或者 PHP 中的 phpDocumentor；在源代码中添加指定格式的注释，JSDoc 工具便会自动扫描你的代码并生成一个 API 文档网站（在指定目录下生成相关的网页文件）")]),t._v(" "),s("p",[t._v("生成 API 文档只是一方面，其更主要的贡献在于对代码注释格式进行了规范化")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" jsdoc\n")])])]),s("p",[t._v("在js文件中写入对应的函数和注释")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Returns the sum of a and b\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * Return the diff fo a and b\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后就是在当前目录执行以下命令")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("jsdoc doc.js\n")])])]),s("p",[t._v("最后就会在当前目录下生成一个名为 "),s("code",[t._v("out")]),t._v(" 的目录（也可以另外指定），里面有包含接口文档的html页面")]),t._v(" "),s("p",[t._v("常用写法：")]),t._v(" "),s("p",[t._v("@description：也可写作 "),s("code",[t._v("@desc")]),t._v("，描述当前注释对象的详细信息")]),t._v(" "),s("p",[t._v("@file：注释写在文件开头，用于描述当前文件的相关信息")]),t._v(" "),s("p",[t._v("@class 描述一个 "),s("code",[t._v("class")]),t._v(" 类")]),t._v(" "),s("p",[t._v("@returns 或者写作 "),s("code",[t._v("@return")]),t._v("，描述函数的返回值的信息；")]),t._v(" "),s("p",[t._v("@param 与 "),s("code",[t._v("@arg")]),t._v(", "),s("code",[t._v("@argument")]),t._v(" 含义相同，描述一个函数的参数信息；")]),t._v(" "),s("p",[t._v("@function 与 "),s("code",[t._v("@func")]),t._v(", "),s("code",[t._v("@method")]),t._v(" 含义相同，描述一个函数；")]),t._v(" "),s("p",[t._v("@todo 描述接下来准备做的事情；")]),t._v(" "),s("p",[t._v("@copyright 描述当前文件的版权相关信息")]),t._v(" "),s("p",[t._v("@file 注释写在文件开头，用于描述当前文件的相关信息")]),t._v(" "),s("h2",{attrs:{id:"react的ts写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react的ts写法"}},[t._v("#")]),t._v(" react的Ts写法")]),t._v(" "),s("h3",{attrs:{id:"react、react-dom类型声明文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react、react-dom类型声明文件"}},[t._v("#")]),t._v(" react、react-dom类型声明文件")]),t._v(" "),s("p",[t._v("使用tsx之前要安装react的声明文件，否则会报错找不到模块react")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" @types/react "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" @types/react-dom "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v("\n")])])]),s("h3",{attrs:{id:"有状态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有状态组件"}},[t._v("#")]),t._v(" 有状态组件")]),t._v(" "),s("p",[t._v("有状态组件中的state和props使用ts去定义类型")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" React "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IProps")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  color"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  size"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IState")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PureComponent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IProps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" IState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Readonly"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IState"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("Hello world")]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentDidMount")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"事件类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件类型"}},[t._v("#")]),t._v(" 事件类型")]),t._v(" "),s("p",[t._v("常用Event事件对象类型")]),t._v(" "),s("p",[t._v("ClipboardEvent<T = Element> 剪贴板事件对象")]),t._v(" "),s("p",[t._v("DragEvent<T = element> 拖拽事件对象")]),t._v(" "),s("p",[t._v("ChangeEvent<T = element> Change事件对象")]),t._v(" "),s("p",[t._v("KeyboardEvent<T = element>  键盘事件对象")]),t._v(" "),s("p",[t._v("MouseEvent<T = element> 鼠标事件对象")]),t._v(" "),s("p",[t._v("TouchEvent<T = element> 触摸事件对象")]),t._v(" "),s("p",[t._v("WheelEvent<T = element> 滚轮事件对象")]),t._v(" "),s("p",[t._v("AnimationEvent<T = element> 动画事件对象")]),t._v(" "),s("p",[t._v("TransitionEvent<T = element> 过渡事件对象")]),t._v(" "),s("div",{staticClass:"language-tsx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MouseEvent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Iprops")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onClick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MouseEvent"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HTMLDivElement"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"css属性类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css属性类型"}},[t._v("#")]),t._v(" CSS属性类型")]),t._v(" "),s("p",[t._v("有时候会在props或者state中使用css属性，这个时候就使用react自带的css类型")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import React from 'react';\n\nexport type EdgeTextProps = {\n  style?: React.CSSProperties;\n  color: React.CSSProperties['color'];\n};\n")])])]),s("h3",{attrs:{id:"泛型组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型组件"}},[t._v("#")]),t._v(" 泛型组件")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//泛型ts组件\nfunction Foo<T>(props: Props<T>){\n  return <div>{props.content}</div>\n}\n\nconst App = () => {\n  return (\n  \t<div className="App">\n      <Foo content={42}></Foo>\n      <Foo<string> content={"hello"}></Foo>\n    </div>\n  )\n}\n        \n//普通ts组件\ninterface Props {\n\tcontent: string;          \n}\n        \nfunction Foo(props: Props) {\n\treturn <div>{props.content}</div>          \n}\n        \nconst App = () => {\n  return (\n  \t<div className="App">\n      // Type number not assignable to type string\n      <Foo content={42}></Foo>\n      <Foo<string> content={"hello"}></Foo>\n    </div>\n  )\n}\n')])])]),s("h2",{attrs:{id:"react库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react库"}},[t._v("#")]),t._v(" react库")]),t._v(" "),s("h3",{attrs:{id:"recompose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recompose"}},[t._v("#")]),t._v(" recompose")]),t._v(" "),s("h3",{attrs:{id:"loadable-components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loadable-components"}},[t._v("#")]),t._v(" loadable-components")]),t._v(" "),s("p",[t._v("懒加载")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install @loadable/component\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import loadable from '@loadable/component'\n\nconst OtherComponent = loadable(() => import('./OtherComponent'))\n\nfunction MyComponent() {\n  return (\n    <div>\n      <OtherComponent />\n    </div>\n  )\n}\n")])])]),s("h3",{attrs:{id:"react-media-recorder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-media-recorder"}},[t._v("#")]),t._v(" react-media-recorder")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i react-media-recorder\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('import { ReactMediaRecorder } from "react-media-recorder";\n\nconst RecordView = () => (\n  <div>\n    <ReactMediaRecorder\n      video\n      render={({ status, startRecording, stopRecording, mediaBlobUrl }) => (\n        <div>\n          <p>{status}</p>\n          <button onClick={startRecording}>Start Recording</button>\n          <button onClick={stopRecording}>Stop Recording</button>\n          <video src={mediaBlobUrl} controls autoPlay loop />\n        </div>\n      )}\n    />\n  </div>\n);\n\nimport { useReactMediaRecorder } from "react-media-recorder";\n\nconst RecordView = () => {\n  const {\n    status,\n    startRecording,\n    stopRecording,\n    mediaBlobUrl,\n  } = useReactMediaRecorder({ video: true });\n\n  return (\n    <div>\n      <p>{status}</p>\n      <button onClick={startRecording}>Start Recording</button>\n      <button onClick={stopRecording}>Stop Recording</button>\n      <video src={mediaBlobUrl} controls autoPlay loop />\n    </div>\n  );\n};\n')])])]),s("h3",{attrs:{id:"react-three-fiber"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-three-fiber"}},[t._v("#")]),t._v(" react-three-fiber")]),t._v(" "),s("p",[t._v("在react中使用three.js的插件")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" three @react-three/fiber\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##  如果使用ts还要安装ts包")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" @types/three\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/* eslint-disable */\nimport * as THREE from 'three'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\nfunction Box(props: JSX.IntrinsicElements['mesh']) {\n  // This reference will give us direct access to the THREE.Mesh object\n  const ref = useRef<THREE.Mesh>(null!)\n  // Hold state for hovered and clicked events\n  const [hovered, hover] = useState(false)\n  const [clicked, click] = useState(false)\n  // Rotate mesh every frame, this is outside of React without overhead\n  useFrame((state, delta) => (ref.current.rotation.x += 0.01))\n\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={clicked ? 1.5 : 1}\n      onClick={(event) => click(!clicked)}\n      onPointerOver={(event) => hover(true)}\n      onPointerOut={(event) => hover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nexport default function App() {\n  return (\n    <Canvas>\n      <ambientLight />\n      <pointLight position={[10, 10, 10]} />\n      <Box position={[-1.2, 0, 0]} />\n      <Box position={[1.2, 0, 0]} />\n    </Canvas>\n  )\n}\n")])])]),s("h3",{attrs:{id:"prop-types"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prop-types"}},[t._v("#")]),t._v(" prop-types")]),t._v(" "),s("p",[t._v("使用第三方包 "),s("code",[t._v("prop-types")]),t._v(" 可以对react的 "),s("code",[t._v("props")]),t._v(" 进行类型校验")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" import React from 'react'\n // 导入包\n import PropTypes from 'prop-types'\n \n function About (props) {\n   const { name, age } = props\n   console.log(name, age)\n     return (\n       <div>\n         <p>{ name }</p>\n         <p>{ age }</p>\n       </div>\n     )\n }\n \n About.defaultProps = {\n   name: 'ReoNa',\n   age: 22\n }\n \n // 这里通过函数组件的 propTypes 属性设置类型校验\n // PropType.类型：规定传入类型\n // PropType.类型.isRequired：规定必须传入\n About.propTypes = {\n   name: PropTypes.string.isRequired,\n   age: PropTypes.number\n }\n \n export default About\n")])])]),s("h3",{attrs:{id:"react-helmet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-helmet"}},[t._v("#")]),t._v(" react-helmet")]),t._v(" "),s("p",[t._v("React Helmet是一个HTML文档head管理工具，管理对文档头的所有修改。React Helmet采用纯HTML标记并输出纯HTML标记，非常简单，对react初学者友好")]),t._v(" "),s("p",[t._v("特点：")]),t._v(" "),s("p",[t._v("支持所有有效的head标签，title、base、meta、link、script、noscript和style")]),t._v(" "),s("p",[t._v("支持body、html和title的属性")]),t._v(" "),s("p",[t._v("支持服务端渲染")]),t._v(" "),s("p",[t._v("嵌套组件覆盖重复的head标签修改")]),t._v(" "),s("p",[t._v("同一组件中定义时将保留重复的head标签修改(比如“apple-touch-icon”)")]),t._v(" "),s("p",[t._v("支持跟踪DOM更改的回调")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i react-helmet\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('import {Helmet} from "react-helmet"\n\nclass Application extends React.Component {\n  render(){\n   return(\n      <div className="application">\n        <Helmet>\n          <meta charSet="utf-8"/>\n          <title>My title</title>\n          <link rel="canonical" href="http://mysite.com/example" />\n        </Helmet>\n        <Child>\n       \t\t\t<Helmet>\n                <title>new Title</title>\n            </Helmet>\n       </Child>\n      </div>\n   )\n  }\n}\n')])])]),s("p",[t._v("上面代码中，后面的helmet会覆盖前面的helmet")]),t._v(" "),s("p",[t._v("服务端渲染时，需要在ReactDOMServer.renderToString或ReadDOMServer.renderToStaticMarkup后调用Helmet.renderStatic()来获得你预渲染的head数据")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("ReactDOMServer.renderToString(<Handler />);\nconst helmet = Helmet.renderStatic();\n")])])]),s("h3",{attrs:{id:"二维码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二维码"}},[t._v("#")]),t._v(" 二维码")]),t._v(" "),s("p",[t._v('QR Code数据表示方法 : 深色模块表示二进制"1"，浅色模块表示二进制"0"。')]),t._v(" "),s("p",[t._v("纠错能力:")]),t._v(" "),s("ul",[s("li",[t._v("L级：约可纠错7%的数据码字；")]),t._v(" "),s("li",[t._v("M级：约可纠错15%的数据码字；")]),t._v(" "),s("li",[t._v("Q级：约可纠错25%的数据码字；")]),t._v(" "),s("li",[t._v("H级：约可纠错30%的数据码字；")])]),t._v(" "),s("p",[t._v("使用qrcode.react npm包")]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" qrcode.react\n")])])]),s("p",[t._v("api")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("prop")]),t._v(" "),s("th",[t._v("type")]),t._v(" "),s("th",[t._v("default value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("value")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("renderAs")]),t._v(" "),s("td",[t._v("string ('canvas' 'svg')")]),t._v(" "),s("td",[t._v("'canvas'")])]),t._v(" "),s("tr",[s("td",[t._v("size")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("128")])]),t._v(" "),s("tr",[s("td",[t._v("bgColor")]),t._v(" "),s("td",[t._v("string (CSS color)")]),t._v(" "),s("td",[t._v('"#FFFFFF"')])]),t._v(" "),s("tr",[s("td",[t._v("fgColor")]),t._v(" "),s("td",[t._v("string (CSS color)")]),t._v(" "),s("td",[t._v('"#000000"')])]),t._v(" "),s("tr",[s("td",[t._v("level")]),t._v(" "),s("td",[t._v("string ('L' 'M' 'Q' 'H')")]),t._v(" "),s("td",[t._v("'L'")])]),t._v(" "),s("tr",[s("td",[t._v("includeMargin")]),t._v(" "),s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("false")])]),t._v(" "),s("tr",[s("td",[t._v("imageSettings")]),t._v(" "),s("td",[t._v("object (see below)")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("图片设置参数imageSettings")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("field")]),t._v(" "),s("th",[t._v("type")]),t._v(" "),s("th",[t._v("default value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("src")]),t._v(" "),s("td",[t._v("string")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("x")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("none, will center")])]),t._v(" "),s("tr",[s("td",[t._v("y")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("none, will center")])]),t._v(" "),s("tr",[s("td",[t._v("height")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("10% of size")])]),t._v(" "),s("tr",[s("td",[t._v("width")]),t._v(" "),s("td",[t._v("number")]),t._v(" "),s("td",[t._v("10% of size")])]),t._v(" "),s("tr",[s("td",[t._v("excavate")]),t._v(" "),s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("false")])])])]),t._v(" "),s("p",[t._v("示例代码")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<QRCode\n  id=\"qrCode\"\n  value={\"https://gongyi.m.jd.com/oneDetails.html?id=930\"}\n  imageSettings={{\n    // 中间有图片logo\n    src: `http://img13.360buyimg.com/imagetools/jfs/t1/203384/29/6713/37826/6142ef39E5f79ed2b/47200134bf8d0571.jpg`,\n    height: 30,\n    width: 30,\n    excavate: true,\n  }}\n  size={99} // 二维码的大小\n  fgColor=\"#000000\" // 二维码的颜色\n/>\n//转换为图片\nchangeCanvasToPic = () => {\n    const canvasImg = document.getElementById('qrCode'); // 获取canvas类型的二维码\n    const img = new Image();\n    img.src = canvasImg.toDataURL('image/png'); \n// canvas.toDataUrl() 可以将canvas格式的文件转换成基于base64的指定格式的图片\n// 注意这个api ie9以下不支持    \n    const downLink = document.getElementById('down_link');\n    downLink.href = img.src;\n    downLink.download = '二维码'; //下载图片name\n  };\n//定时刷新\n//定时刷新功能是使用 setInterval 定时更新 value 值来更新二维码，跳转地址后面拼上一个radomCode, radomCode定时更新，就实现二维码的刷新了，需要及时清理定时器。\n")])])]),s("h3",{attrs:{id:"antd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#antd"}},[t._v("#")]),t._v(" antd")]),t._v(" "),s("p",[t._v("Ant-Design是蚂蚁金服开发的面向React和Vue的类似于bootstrap的框架，官网链接为：https://ant.design/index-cn")]),t._v(" "),s("p",[t._v("安装包")]),t._v(" "),s("div",{staticClass:"language-node extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm install antd --save\ncnpm i antd -S\n")])])]),s("p",[t._v("在App.css文件中导入样式")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~antd/dist/antd.css'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n")])])]),s("p",[t._v("按需导入包")]),t._v(" "),s("div",{staticClass:"language-node extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import {  } from 'antd';\n\n")])])]),s("p",[t._v("组件")]),t._v(" "),s("p",[t._v("Upload")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])])]),s("p",[t._v("Table")]),t._v(" "),s("p",[s("code",[t._v("antd")]),t._v(" 的 "),s("code",[t._v("table")]),t._v(" 组件，"),s("code",[t._v("table")]),t._v(" 的 "),s("code",[t._v("columns")]),t._v(" 有一个属性叫做 "),s("code",[t._v("align")]),t._v("，它的使用是控制当前列是居左、居中、居右的。")]),t._v(" "),s("p",[t._v("它的类型为AlignType,在"),s("code",[t._v("node_modules/rc-table/lib/interface.d.ts")]),t._v("中可以找到")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AlignType")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'left'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'center'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'right'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在使用时，如果对table进行二次封装，它的值")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const columns = [{\n  align: 'right',\n}]\n")])])]),s("p",[t._v("此时会报错，类型推论会将align推论为string，而AlignType是字面量类型，没有string")]),t._v(" "),s("p",[t._v("使用as进行断言就不会报错")]),t._v(" "),s("div",{staticClass:"language-typescript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AlignType "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rc-table/lib/interface.d.ts'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\ncolumns"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  align"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'right'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'right'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者 align: 'right' as AlignType")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("table的filteredValue属性会使表格的filter字段受控 如果没设置好会导致table所有列的fliter失效，所以尽量不要用这个属性")]),t._v(" "),s("p",[t._v("tooltip")]),t._v(" "),s("p",[t._v("tooltip组件需要禁用时没有直接的disable属性，使用onchange事件进行回调")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const checkTipVisible = (visible: boolean) => {\n  VisibleCrtl.toggle(!Boolean(enableCreatePlan) ? visible : false);\n};\n\n<Tooltip\n  title={formatMessage({\n    id: 'CREATE_OPERATING_PLAN_ERROR',\n  })}\n  visible={visible}\n  onVisibleChange={checkTipVisible}\n  >\n</Tooltip>\n")])])]),s("p",[t._v("Form")]),t._v(" "),s("p",[t._v("在form.item中可以使用shouldUpdate包一层，然后将Form传入item的回调函数中")]),t._v(" "),s("p",[t._v("这样做:")]),t._v(" "),s("p",[t._v("1.可以在item中取到form的其他值，从而进行表单联动")]),t._v(" "),s("p",[t._v("2.可以确保字段在更新时及时更新，相当于一次setState")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<Form.Item shouldUpdate>\n  {(form) => {\n    const branches = form.getFieldValue('branches') || [];\n    return (\n      <>\n      <Form.List name=\"branches\">\n        {(fields, operation) => {\n          return (\n            <BranchSortTable\n              readonly={readonly}\n              data={branches}\n              fields={fields}\n              operation={operation}\n              />\n          );\n        }}\n      </Form.List>\n      </>\n    );\n  }}\n</Form.Item>\n")])])]),s("p",[t._v("验证")]),t._v(" "),s("p",[t._v("表单提交时对有rules的item要进行校验，比较繁琐的写法像这样")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const handleSubmit = async () => {\n  await form.validateFields();\n}\n")])])]),s("p",[t._v("如果有单独的需要提前校验/接口校验的可以用validateFirst")]),t._v(" "),s("p",[t._v("校验时可以用validator写")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<ProFormText\n  readonly={readOnly}\n  label={\n    <Text\n      style={{ maxWidth: 110 }}\n      ellipsis={{\n        tooltip: formatMessage({ id: 'FORM_LABEL_NODE_NAME' }),\n      }}\n      >\n      {formatMessage({ id: 'FORM_LABEL_NODE_NAME' })}\n    </Text>\n  }\n  required\n  validateFirst\n  name=\"name\"\n  rules={[\n    {\n      required: true,\n      message: formatMessage({\n        id: 'FORM_LABEL_PLACEHOLDER_INPUT',\n      }),\n    },\n    {\n      validator: async (_rule, value) => {\n        if (!validateNameUnique(value, element.id)) {\n          throw formatMessage({\n            id: 'AUTO_FLOW_NAME_UNIQ_ERROR_MESSAGE',\n          });\n        }\n      },\n    },\n  ]}\n  fieldProps={{\n    placeholder: formatMessage({\n      id: 'AUTO_FLOW_LIMIT_CHAR_LENGTH_MESSAGE',\n    }),\n  }}\n  />\n")])])]),s("p",[t._v("获取字段的校验状态可以使用getFieldError/getFieldsError获取字段或者全部字段的验证信息")]),t._v(" "),s("p",[t._v("namePath")]),t._v(" "),s("p",[t._v("在form.item的name中使用数组，能够把不同的表单放到同一个对象中，而不是普通的key-value")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<Form.Item\n  name={['a', 'select']}\n  options={listData as treeItemType[]}\n  readonly={isView}\n>\n</Form.Item>\n<Form.Item\n  name={['a', 'input']}\n  options={listData as treeItemType[]}\n  readonly={isView}\n>\n</Form.Item>\n")])])]),s("p",[t._v("如果namePath后面跟的是index，可以自动合并成数组")]),t._v(" "),s("p",[t._v("namePath可以进行嵌套，输出对象数组的表单项")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("['1', '2','3'].map((index)=> {\n  <Form.Item\n    name={['a', 'select', index]}\n    options={listData as treeItemType[]}\n    readonly={isView}\n  >\n  </Form.Item>\n})\n")])])]),s("p",[t._v("自定义表单组件")]),t._v(" "),s("p",[t._v("表单组件不一定非要input、select，也可以自己通过form.item填充，取值的时候使用get和set就比较方便")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('const handleChange = () => {\n  labelsForm.setFieldsValue({\n    tree: []\n  });\n}\n\nconst FormTree: React.FC<{ value?: any }> = (value) => {\n  return (\n    <Tree\n      isDirectoryTree\n      searchAble\n      searchingMode="filter"\n      treeData={value.value || []}\n      onSelect={(selectKey, info) => {\n        setSelectId({ key: selectKey, title: info?.node.title });\n                    }}\n      />\n  );\n};\n\n<ProForm.Item name="tree" noStyle shouldUpdate>\n  <FormTree />\n</ProForm.Item>\n')])])]),s("p",[t._v("form之外的dom需要在form字段更新时重新render可以使用useWatch")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('import React from \'react\';\nimport { Form, Input, InputNumber, Typography } from \'antd\';\n\nconst Demo = () => {\n  const [form] = Form.useForm<{ name: string; age: number }>();\n  const nameValue = Form.useWatch(\'name\', form);\n\n  return (\n    <>\n      <Form form={form} layout="vertical" autoComplete="off">\n        <Form.Item name="name" label="Name (Watch to trigger rerender)">\n          <Input />\n        </Form.Item>\n        <Form.Item name="age" label="Age (Not Watch)">\n          <InputNumber />\n        </Form.Item>\n      </Form>\n\n      <Typography>\n        <pre>Name Value: {nameValue}</pre>\n      </Typography>\n    </>\n  );\n};\n\nexport default Demo;\n')])])]),s("p",[t._v("给form item添加提示和自定义图标")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<Form.Item\n  label="Field B"\n  tooltip={{ title: \'Tooltip with customize icon\', icon: <InfoCircleOutlined /> }}\n  >\n  <Input placeholder="input placeholder" />\n</Form.Item>\n')])])]),s("p",[t._v("form的setFieldsValue 和 resetFields 不会触发 Form 的 onValuesChange，")]),t._v(" "),s("p",[t._v("form的初始值initialValue在初始化的时候有初始值，此后不受控，无法更改。因此如果需要根据接口或者state更改初始化值，则需要在拿到正确初始值之前不渲染form，或者在state/接口更新之后使用setFieldValue更改该form的值。推荐第一种方式")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const app = () => {\n  if(state) {\n\t\treturn <div />\n  }\n  \n  return <Form.Item initialValue='1'> <input /> </Form.Item>\n}\n")])])]),s("p",[t._v("Modal")]),t._v(" "),s("p",[t._v("如果在Modal的content中使用国际化，需要使用Modal的hooks")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('const [modal, contextHolder] = Modal.useModal();\n\nmodal.info({\n  title: null,\n  icon: null,\n  okText: formatMessage({ id: \'ACTION_CONFIRM\' }),\n  className: styles.deleteCheckModal,\n  content: (\n    <div>\n      <div className={styles.deleteCheckModalTitle}>\n        {formatMessage({ id: \'TIPS\' })}\n      </div>\n      <div className={styles.deleteCheckModalTips}>\n        <InfoCircleFilled className="mr-6" />\n        {formatMessage({ id: \'CANOT_DELETE_TIPS\' })}\n      </div>\n      <div className={styles.deleteCheckModalTable}>\n        <ProTable\n          pagination={false}\n          scroll={{ y: 200 }}\n          size="small"\n          dataSource={data}\n          >\n          <ProTable.Column title="ID" dataIndex="id" width={100} />\n          <ProTable.Column\n            title={formatMessage({ id: \'PLAN_NAME\' })}\n            dataIndex="name"\n            />\n        </ProTable>\n      </div>\n    </div>\n  ),\n});\n\nreturn (\n\t<>{contextHolder}</>\n)\n')])])]),s("p",[t._v("如果在modal中使用ref，在初次modal渲染时ref拿不到值，此时应该手动强制刷新一次modal子组件")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const [Key, setKey] = useState(\n  `${+new Date()}`,\n);\n// ref相关的事件改变时也要reset key，防止拿不到\nconst handleChange = () => {\n  setKey(() => `${+new Date()}`);\n};\n<Modal\n  visible={visible}\n  form={modalForm}\n  title={formatMessage({\n    id: 'ATTACHMENT_ADD',\n  })}\n  modalProps={{\n    onCancel: () => {\n      setVisible(false);\n    },\n  }}\n  onVisibleChange={(visible) => {\n    if (visible) {\n      // 当modal打开后强制渲染一次 RichTextInput 否则获取不到ref\n      setTimeout(() => {\n        setImageAddressInputKey(() => `${+new Date()}`);\n      }, 0);\n    }\n  }}>\n</ModalForm>\n")])])]),s("p",[t._v("原因：")]),t._v(" "),s("p",[t._v("ant design的modal在渲染时如果同步渲染会堵塞react的事件，因此ant design的modal使用异步渲染，初次渲染是ref就绑定不到")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// components/modal/confirm.tsx\n  function render({ okText, cancelText, prefixCls: customizePrefixCls, ...props }: any) {\n    /**\n     * https://github.com/ant-design/ant-design/issues/23623\n     *\n     * Sync render blocks React event. Let's make this async.\n     */\n    setTimeout(() => {\n      const runtimeLocale = getConfirmLocale();\n      const { getPrefixCls, getIconPrefixCls } = globalConfig();\n      // because Modal.config \b set rootPrefixCls, which is different from other components\n      const rootPrefixCls = getPrefixCls(undefined, getRootPrefixCls());\n      const prefixCls = customizePrefixCls || `${rootPrefixCls}-modal`;\n      const iconPrefixCls = getIconPrefixCls();\n\n      reactRender(\n        <ConfirmDialog\n          {...props}\n          prefixCls={prefixCls}\n          rootPrefixCls={rootPrefixCls}\n          iconPrefixCls={iconPrefixCls}\n          okText={okText || (props.okCancel ? runtimeLocale.okText : runtimeLocale.justOkText)}\n          cancelText={cancelText || runtimeLocale.cancelText}\n        />,\n        container,\n      );\n    });\n  }\n")])])]),s("p",[t._v("可以基于modal的命令式包装弹框hooks，实现命令式的自定义弹框组件")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("export const useCustomModal = () => {\n  const { formatMessage } = useIntl();\n  const [modal, contextHolder] = Modal.useModal();\n  \n  const showModal = (props: showModalProps) => {\n    const { tip, okText, onOk, className } = props;\n    \n    modal.info({\n      title: null,\n      icon: null,\n      okText: okText ?? formatMessage('ACTION_CONFIRM'),\n      className: className,\n      content: (\n        <div className={styles.quotePlanModal}>\n          {data}\n        </div>\n      ),\n      onOk: () => {\n        onOk?.();\n      },\n    });\n  }\n\treturn [showModal, contextHolder];\n}\n")])])]),s("p",[t._v("Select")]),t._v(" "),s("p",[t._v("select的下拉框展开时，如果滚动页面的话会下拉框会移动位置，需要添加一个属性防止下拉框滚动")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<Select\ngetPopupContainer={(triggerNode) =>triggerNode.parentNode}\n  />\n")])])]),s("p",[t._v("TreeSelect")]),t._v(" "),s("p",[t._v("triggerNode.props非公开api")]),t._v(" "),s("h4",{attrs:{id:"async-validator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-validator"}},[t._v("#")]),t._v(" async-validator")]),t._v(" "),s("p",[t._v("antd的form使用这个验证库")]),t._v(" "),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import Schema from 'async-validator';\nconst descriptor = {\n  name: {\n    type: 'string',\n    required: true,\n    validator: (rule, value) => value === 'muji',\n  },\n  age: {\n    type: 'number',\n    asyncValidator: (rule, value) => {\n      return new Promise((resolve, reject) => {\n        if (value < 18) {\n          reject('too young');  // reject with error message\n        } else {\n          resolve();\n        }\n      });\n    },\n  },\n};\nconst validator = new Schema(descriptor);\nvalidator.validate({ name: 'muji' }, (errors, fields) => {\n  if (errors) {\n    // validation failed, errors is an array of all errors\n    // fields is an object keyed by field name with an array of\n    // errors per field\n    return handleErrors(errors, fields);\n  }\n  // validation passed\n});\n\n// PROMISE USAGE\nvalidator.validate({ name: 'muji', age: 16 }).then(() => {\n  // validation passed or without error message\n}).catch(({ errors, fields }) => {\n  return handleErrors(errors, fields);\n});\n")])])]),s("h4",{attrs:{id:"scroll-into-view-if-needed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scroll-into-view-if-needed"}},[t._v("#")]),t._v(" scroll-into-view-if-needed")]),t._v(" "),s("p",[t._v("滚动窗口组件")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" scroll-into-view-if-needed\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import scrollIntoView from 'scroll-into-view-if-needed'\nconst node = document.getElementById('hero')\n\nscrollIntoView(node, {\n  // Your scroll actions will always be an array, even if there is nothing to scroll\n  behavior: actions =>\n    // list is sorted from innermost (closest parent to your target) to outermost (often the document.body or viewport)\n    actions.forEach(({ el, top, left }) => {\n      // implement the scroll anyway you want\n      el.scrollTop = top\n      el.scrollLeft = left\n\n      // If you need the relative scroll coordinates, for things like window.scrollBy style logic or whatever, just do the math\n      const offsetTop = el.scrollTop - top\n      const offsetLeft = el.scrollLeft - left\n    }),\n  // all the other options (scrollMode, block, inline) still work, so you don't need to reimplement them (unless you really really want to)\n})\n")])])]),s("h4",{attrs:{id:"可拖动宽度table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可拖动宽度table"}},[t._v("#")]),t._v(" 可拖动宽度table")]),t._v(" "),s("p",[t._v("首先安装react-resizable")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" react-resizable "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--save")]),t._v("\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import React, { PureComponent } from 'react';\nimport { Table } from 'antd';\nimport { Resizable } from 'react-resizable';\n \n \nconst ResizeableTitle = (props: { [x: string]: any; onResize: any; width: any; }) => {\n  const { onResize, width, ...restProps } = props;\n  if (!width) {\n    return <th {...restProps} />\n  }\n  return (\n    <Resizable width={width} height={0} onResize={onResize} draggableOpts={{ enableUserSelectHack: false }}>\n      <th {...restProps} />\n    </ Resizable >\n  )\n}\n \nclass TableResize extends PureComponent<any, any> {\n  constructor(props: any) {\n    super(props);\n  }\n  state = {\n    columns: this.props.columns\n  };\n \n  components = {\n    header: {\n      cell: ResizeableTitle,\n    },\n  };\n \n  handleResize = (index: number) => (e: any, { size }: any) => {\n    this.setState(({ columns }: any) => {\n      const nextColumns = [...columns];\n      nextColumns[index] = {\n        ...nextColumns[index],\n        width: size.width,\n      };\n      return { columns: nextColumns };\n    });\n  };\n \n  render() {\n    const columns = this.state.columns.map((col: any, index: number) => ({\n      ...col,\n      onHeaderCell: (column: { width: any; }) => ({\n        width: column.width,\n        onResize: this.handleResize(index),\n      }),\n    }));\n \n    return <Table\n      components={this.components}\n      columns={columns}\n      rowKey=\"id\"\n      border                                  // 不要这个属性也有拖拽表示\n      pagination={false}\n      rowSelection={this.props.rowSelection}  // 选中行的事件，不需要可删除\n      dataSource={this.props.dataSource}      \n      onChange={(pagination: any, filters: any) => this.props.handleTableChange(pagination, filters)} /> //表格筛选功能触发的事件，不需要可删除\n  }\n}\n \nexport default TableResize\n")])])]),s("p",[t._v("使用组件")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import TableReszie from '@components/TableResize'\n\n<TableReszie\n  dataSource={dataSource}\n  columns={columns}\n  loading={loading}\n  handleTableChange={handleTableChange}\n/>\n")])])]),s("p",[t._v("或者换用组件：https://ali-react-table.js.org/docs/pipeline/features/column-resize/")]),t._v(" "),s("h3",{attrs:{id:"xrender"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xrender"}},[t._v("#")]),t._v(" XRender")]),t._v(" "),s("h3",{attrs:{id:"pro-components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pro-components"}},[t._v("#")]),t._v(" pro-components")]),t._v(" "),s("p",[t._v("ProComponents 是基于 Ant Design 而开发的模板组件，提供了更高级别的抽象支持，开箱即用。可以显著的提升制作 CRUD 页面的效率，更加专注于页面。")]),t._v(" "),s("p",[t._v("ProLayout 解决布局的问题，提供开箱即用的菜单和面包屑功能")]),t._v(" "),s("p",[t._v("ProTable表格模板组件，抽象网络请求和表格格式化")]),t._v(" "),s("p",[t._v("ProForm表单模板组件，预设常见布局和行为")]),t._v(" "),s("p",[t._v("ProCard提供卡片切分以及栅格布局能力")]),t._v(" "),s("p",[t._v("ProDescription定义列表模板组件，ProTable 的配套组件")]),t._v(" "),s("p",[t._v("ProSkeleton页面级别的骨架屏")]),t._v(" "),s("p",[t._v("Proform有很多ProFormFields 表单项组件。这些组件本质上是 Form.Item 和 组件的结合，我们可以帮他们当成一个 FormItem 来使用，并且支持各种 "),s("code",[t._v("props")]),t._v("。每个表单项都支持 "),s("code",[t._v("fieldProps")]),t._v(" 属性来支持设置输入组件的"),s("code",[t._v("props")]),t._v("。 同时支持了 "),s("code",[t._v("placeholder")]),t._v(" 的透传，你可以直接在组件上设置 "),s("code",[t._v("placeholder")]),t._v("。")]),t._v(" "),s("p",[t._v("每个表单项同时也支持了 "),s("code",[t._v("readonly")]),t._v(" ，不同的组件会有不同的只读样式，与 "),s("code",[t._v("disable")]),t._v(" 相比 "),s("code",[t._v("readonly")]),t._v(" 展示更加友好。生成的 dom 也更小，比如 ProFormDigit 会自动格式化小数位数。")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<ProFormText\n  width="md"\n  name="name"\n  label="签约客户名称"\n  tooltip="最长为 24 位"\n  placeholder="请输入名称"\n  />\n<ProFormDateRangePicker name="contractTime" label="合同生效时间" />\n<ProFormSelect\n  width="xs"\n  options={[\n    {\n      value: \'time\',\n      label: \'履行完终止\',\n    },\n  ]}\n  name="unusedMode"\n  label="合同约定失效效方式"\n  />\n')])])]),s("h3",{attrs:{id:"react-query"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-query"}},[t._v("#")]),t._v(" react-query")]),t._v(" "),s("p",[t._v("React Query 通常被描述为 React 缺少的数据获取(data-fetching)库，但是从更广泛的角度来看，它使 React 程序中的"),s("strong",[t._v("获取，缓存，同步和更新服务器状态")]),t._v("变得轻而易举")]),t._v(" "),s("p",[t._v("尽管大多数传统状态管理库非常适合用于处理客户端状态，但是它们"),s("strong",[t._v("并不适合处理异步或服务器状态")]),t._v("。 这是因为"),s("strong",[t._v("服务器状态完全不同")]),t._v("。对于初学者，服务器状态")]),t._v(" "),s("ul",[s("li",[t._v("远程保留在您无法控制或拥有的位置")]),t._v(" "),s("li",[t._v("需要异步 API 进行获取和更新")]),t._v(" "),s("li",[t._v("意味着共享所有权，可以在你不知情的情况下被其他人改变")]),t._v(" "),s("li",[t._v('如果不小心，可能会在应用中变得"过时"')])]),t._v(" "),s("p",[t._v("一旦你掌握了应用中服务器状态的本质，你会遇到更多的挑战，例如:")]),t._v(" "),s("ul",[s("li",[t._v("缓存...（这可能是编程中最难的事情）")]),t._v(" "),s("li",[t._v("将对同一数据的多个请求重复数据集合到单个请求中")]),t._v(" "),s("li",[t._v('在后台更新"过时"的数据')]),t._v(" "),s("li",[t._v('知道数据何时"过时"')]),t._v(" "),s("li",[t._v("尽可能快地反映数据更新")]),t._v(" "),s("li",[t._v("分页和延迟加载数据等性能优化")]),t._v(" "),s("li",[t._v("管理服务器状态的内存和 GC")]),t._v(" "),s("li",[t._v("结构化共享并存储查询结果s")])]),t._v(" "),s("p",[t._v("如果您没有被这个列表压垮，那么这一定意味着您可能已经解决了所有的服务器状态问题，值得获奖。 然而，如果你和大多数人一样，你要么还没有解决所有这些挑战，要么还没有解决大部分挑战，我们只是触及了表面!")]),t._v(" "),s("p",[t._v("React Query 无疑是管理服务器状态的最佳库之一。它非常好用，"),s("strong",[t._v("开箱即用，无需配置")]),t._v("，并且可以随着应用的增长而根据自己的喜好"),s("strong",[t._v("进行定制")]),t._v("。")]),t._v(" "),s("p",[t._v("React Query 使您可以击败并征服棘手的服务器状态挑战和障碍，并在开始控制您的应用数据之前对其进行控制。")]),t._v(" "),s("p",[t._v("从更专业的角度来说，React Query 可能会:")]),t._v(" "),s("ul",[s("li",[t._v("帮助您从应用中删除许多复杂和容易引起误解的代码行，用少量的 React 查询逻辑代替")]),t._v(" "),s("li",[t._v("使您的应用更易于维护，更易于构建新功能，而不必担心如何连接新的服务器状态数据源")]),t._v(" "),s("li",[t._v("通过应用的 GUI 及执行层面的更快的数据响应，直接影响您的最终用户")]),t._v(" "),s("li",[t._v("潜在地帮助您节省带宽和提高内存性能")])]),t._v(" "),s("p",[t._v("安装")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i react-query\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" react-query\n")])])]),s("p",[t._v("使用")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  useQuery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  useMutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  useQueryClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  QueryClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  QueryClientProvider"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-query'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" getTodos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" postTodo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../my-api'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个 client")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" queryClient "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QueryClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提供 client 至 App")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("QueryClientProvider client"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("queryClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Todos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("QueryClientProvider"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Todos")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问 client")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" queryClient "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useQueryClient")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查询")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useQuery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'todos'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getTodos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 修改")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mutation "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useMutation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("postTodo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onSuccess")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误处理和刷新")]),t._v("\n      queryClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("invalidateQueries")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'todos'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("todo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("li key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("todo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("todo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("li"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ul"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button\n        onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          mutation"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Do Laundry'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        Add Todo\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("App "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"开发工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发工具"}},[t._v("#")]),t._v(" 开发工具")]),t._v(" "),s("p",[t._v("React Query 自带了专用的开发工具。它们有助于可视化 React Query 的所有内部工作原理")]),t._v(" "),s("p",[t._v("devtools 包被拆分为"),s("code",[t._v("react-query/devtools")]),t._v("包。不需要安装任何额外的东西")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ReactQueryDevtools "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-query/devtools'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("App")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("QueryClientProvider client"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("queryClient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* The rest of your application */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ReactQueryDevtools initialIsOpen"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("QueryClientProvider"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"h5ds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#h5ds"}},[t._v("#")]),t._v(" h5ds")]),t._v(" "),s("p",[t._v("H5DS （HTML5 design software）可以理解成一款做H5的在线工具，H5就是在手机上滑动的页面，像易企秀，百度H5，wps秀堂，Maka一样的在线工具。")]),t._v(" "),s("p",[t._v("https://github.com/h5ds/h5ds")]),t._v(" "),s("div",{staticClass:"language-react extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\nimport 'h5ds/editor/style.css';\n\nimport React, { Component } from 'react';\nimport H5dsEditor from 'h5ds/editor';\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  /**\n   * 保存APP\n   */\n  saveApp = async data => {\n    console.log('saveApp ->', data);\n  };\n\n  /**\n   * 发布 app\n   */\n  publishApp = async data => {\n    console.log('publishApp ->', data);\n  };\n\n  componentDidMount() {\n    // 模拟异步加载数，设置 defaultData 会默认加载一个初始化数据\n    setTimeout(() => {\n      this.setState({ data: 'defaultData' });\n    }, 100);\n  }\n\n  /**\n   * 使用编辑器部分\n   */\n  render() {\n    const { data } = this.state;\n    return (\n      <H5dsEditor\n        plugins={[]} // 第三方插件包\n        data={data}\n        options={{\n          publishApp: this.publishApp,\n          saveApp: this.saveApp, // 保存应用\n          appId: 'test_app_id' // 当前appId\n        }}\n      />\n    );\n  }\n}\nexport default Editor;\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);